[
  {
    "name": "AbstractRange",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>AbstractRange</code></strong>&nbsp;abstract interface is the base class upon which all <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/DOM\\\" title=\\\"DOM: The DOM (Document Object Model) is an API that represents and interacts with any HTML or XML document. The DOM is a document model loaded in the browser and representing the document as a node tree, where each node represents part of the document (e.g. an element, text string, or comment).\\\">DOM</a> range types are defined. A&nbsp;<strong>range</strong>&nbsp;is an object that indicates the start and end points of a section of content&nbsp;within the document.</span>\",\"As an abstract interface, you will not directly instantiate an object of type&nbsp;<code>AbstractRange</code>. Instead, you will use the <a href=\\\"/en-US/docs/Web/API/Range\\\" title=\\\"The Range interface represents a fragment of a document that can contain nodes and parts of text nodes.\\\"><code>Range</code></a> or <a href=\\\"/en-US/docs/Web/API/StaticRange\\\" title=\\\"The DOM&nbsp;StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree.\\\"><code>StaticRange</code></a> interfaces. To understand the difference between those two interfaces, and how to choose which is appropriate for your needs.\"]",
    "properties": [
      {
        "name": "collapsed",
        "overview": "A Boolean value which is&nbsp;<code>true</code>&nbsp;if the range is&nbsp;<strong>collapsed</strong>. A collapsed range is one whose start position and end position are the same, resulting in a zero-character-long range."
      },
      {
        "name": "endContainer",
        "overview": "The DOM <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in which the end of the range, as specified by the <code>endOffset</code>&nbsp;property,&nbsp;is located."
      },
      {
        "name": "endOffset",
        "overview": "An integer value indicating the offset, in characters, from the beginning of the node's contents to the beginning of the range represented by the range object. This value must be less than the length of the <code>endContainer</code>&nbsp;node."
      },
      {
        "name": "startContainer",
        "overview": "The DOM <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in which the beginning of the range, as specified by the <code>startOffset</code>&nbsp;property,&nbsp;is located."
      },
      {
        "name": "startOffset",
        "overview": "An integer value indicating the offset, in characters, from the beginning of the node's contents to the last character&nbsp;of the contents referred to&nbsp;&nbsp;by the range object. This value must be less than the length of the node indicated in&nbsp;<code>startContainer</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "Animatable",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "animate",
        "overview": null
      },
      {
        "name": "getAnimations",
        "overview": null
      }
    ]
  },
  {
    "name": "Animation",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "currentTime",
        "overview": null
      },
      {
        "name": "effect",
        "overview": null
      },
      {
        "name": "finished",
        "overview": null
      },
      {
        "name": "id",
        "overview": null
      },
      {
        "name": "oncancel",
        "overview": null
      },
      {
        "name": "onfinish",
        "overview": null
      },
      {
        "name": "onremove",
        "overview": null
      },
      {
        "name": "pending",
        "overview": null
      },
      {
        "name": "playbackRate",
        "overview": null
      },
      {
        "name": "playState",
        "overview": null
      },
      {
        "name": "ready",
        "overview": null
      },
      {
        "name": "replaceState",
        "overview": null
      },
      {
        "name": "startTime",
        "overview": null
      },
      {
        "name": "timeline",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "cancel",
        "overview": null
      },
      {
        "name": "commitStyles",
        "overview": null
      },
      {
        "name": "finish",
        "overview": null
      },
      {
        "name": "pause",
        "overview": null
      },
      {
        "name": "persist",
        "overview": null
      },
      {
        "name": "play",
        "overview": null
      },
      {
        "name": "reverse",
        "overview": null
      },
      {
        "name": "updatePlaybackRate",
        "overview": null
      }
    ]
  },
  {
    "name": "AnimationEffect",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "getComputedTiming",
        "overview": null
      },
      {
        "name": "getTiming",
        "overview": null
      },
      {
        "name": "updateTiming",
        "overview": null
      }
    ]
  },
  {
    "name": "Attr",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>Attr</strong></code> interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., <a href=\\\"/en-US/docs/Web/API/Element/getAttribute\\\" title=\\\"The getAttribute() method of the Element interface returns the value of a specified attribute on the element.\\\"><code>Element.getAttribute()</code></a>), but certain functions (e.g., <a href=\\\"/en-US/docs/Web/API/Element/getAttributeNode\\\" title=\\\"Returns the specified attribute of the specified element, as an Attr node.\\\"><code>Element.getAttributeNode()</code></a>) or means of iterating return <code>Attr</code> types.\"]",
    "properties": [
      {
        "name": "localName",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the local part of the qualified name of the attribute."
      },
      {
        "name": "name",
        "overview": "The attribute's name."
      },
      {
        "name": "namespaceURI",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the namespace URI of the attribute, or <code>null</code> if there is no namespace."
      },
      {
        "name": "ownerElement",
        "overview": "\n <p>The element holding the attribute.</p>\n\n <div class=\"note\">\n <p><strong>Note:</strong> DOM Level 4 removed this property. The assumption was that since you get an <code>Attr</code> object from an <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a>, you should already know the associated element.<br>\n  As that doesn't hold true in cases like <code>Attr</code> objects being returned by <a href=\"/en-US/docs/Web/API/Document/evaluate\" title=\"Returns an XPathResult based on an XPath expression and other given parameters.\"><code>Document.evaluate</code></a>, the DOM Living Standard reintroduced the property.</p>\n\n <p>Gecko outputs a deprecation note starting from Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4). This note was removed again in Gecko 49.0 (Firefox 49.0 / Thunderbird 49.0 / SeaMonkey 2.46).</p>\n </div>\n "
      },
      {
        "name": "prefix",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the namespace prefix of the attribute, or <code>null</code> if no prefix is specified."
      },
      {
        "name": "specified",
        "overview": "This property always returns <code>true</code>. Originally, it returned <code>true </code>if the attribute was explicitly specified in the source code or by a script, and <code>false</code> if its value came from the default one defined in the document's <acronym title=\"Document Type Definition\">DTD</acronym>."
      },
      {
        "name": "value",
        "overview": "The attribute's value."
      }
    ],
    "methods": []
  },
  {
    "name": "AudioTrack",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>AudioTrack</code></strong> interface represents a single audio track from one of the HTML media elements, <a href=\\\"/en-US/docs/Web/HTML/Element/audio\\\" title=\\\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\\\"><code>&lt;audio&gt;</code></a> or <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a>. </span>The most common use for accessing an <code>AudioTrack</code> object is to toggle its <a href=\\\"/en-US/docs/Web/API/AudioTrack/enabled\\\" title=\\\"The AudioTrack property enabled specifies whether or not the described audio track is currently enabled for use. If the track is disabled by setting enabled to false, the track is muted and does not produce audio.\\\"><code>enabled</code></a> property in order to mute and unmute the track.\"]",
    "properties": [
      {
        "name": "enabled",
        "overview": "A Boolean value which controls whether or not the audio track's sound is enabled. Setting this value to <code>false</code> mutes the track's audio."
      },
      {
        "name": "id",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which uniquely identifies the track within the media. This ID can be used to locate a specific track within an audio track list by calling <a href=\"/en-US/docs/Web/API/AudioTrackList/getTrackById\" title=\"The AudioTrackList method getTrackById() returns the first AudioTrack object from the track list whose id matches the specified string.\"><code>AudioTrackList.getTrackById()</code></a>. The ID can also be used as the fragment part of the URL if the media supports seeking by media fragment per the <a class=\"external\" href=\"https://www.w3.org/TR/media-frags/\" rel=\"noopener\">Media Fragments URI specification</a>."
      },
      {
        "name": "kind",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the category into which the track falls. For example, the main audio track would have a <code>kind</code> of <code>\"main\"</code>."
      },
      {
        "name": "label",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> providing a human-readable label for the track. For example, an audio commentary track for a movie might have a <code>label</code> of <code>\"Commentary with director John Q. Public and actors John Doe and Jane Eod.\"</code> This string is empty if no label is provided."
      },
      {
        "name": "language",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the audio track's primary language, or an empty string if unknown. The language is specified as a BCP 47 (<a class=\"external\" href=\"https://tools.ietf.org/html/rfc5646\" rel=\"noopener\">RFC 5646</a>) language code, such as <code>\"en-US\"</code> or <code>\"pt-BR\"</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "AudioTrackList",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>AudioTrackList</code></strong> interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate <a href=\\\"/en-US/docs/Web/API/AudioTrack\\\" title=\\\"The AudioTrack interface represents a single audio track from one of the HTML media elements, <audio> or <video>. \\\"><code>AudioTrack</code></a> object in the list.</span>\",\"Retrieve an instance of this object with <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement/audioTracks\\\" title=\\\"The read-only audioTracks property on HTMLMediaElement objects returns an&nbsp;AudioTrackList object listing all of the&nbsp; AudioTrack objects representing the media element's audio tracks.\\\"><code>HTMLMediaElement.audioTracks</code></a>.&nbsp;The individual tracks can be accessed using array syntax.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "The number of tracks in the list."
      },
      {
        "name": "onaddtrack",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/addtrack\" title=\"/en-US/docs/Web/Events/addtrack\">addtrack</a></code> event is fired, indicating that a new audio track has been added to the media element."
      },
      {
        "name": "onchange",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/change\" title=\"/en-US/docs/Web/Events/change\">change</a></code> event occurs. This occurs when one or more tracks have been enabled or disabled by their <a href=\"/en-US/docs/Web/API/AudioTrack/enabled\" title=\"The AudioTrack property enabled specifies whether or not the described audio track is currently enabled for use. If the track is disabled by setting enabled to false, the track is muted and does not produce audio.\"><code>enabled</code></a> flag being changed."
      },
      {
        "name": "onremovetrack",
        "overview": "An event handler to call when the <code><a href=\"/en-US/docs/Web/Events/removetrack\" title=\"/en-US/docs/Web/Events/removetrack\">removetrack</a></code> event is sent, indicating that an audio track has been removed from the media element."
      }
    ],
    "methods": [
      {
        "name": "getTrackById",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/AudioTrack\" title=\"The AudioTrack interface represents a single audio track from one of the HTML media elements, <audio> or <video>. \"><code>AudioTrack</code></a> found within the <code>AudioTrackList</code> whose <a href=\"/en-US/docs/Web/API/AudioTrack/id\" title=\"The id property contains a string which uniquely identifies the track represented by the AudioTrack.\"><code>id</code></a> matches the specified string. If no match is found, <code>null</code> is returned."
      }
    ]
  },
  {
    "name": "Blob",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>Blob</code></strong> object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a <a href=\\\"/en-US/docs/Web/API/ReadableStream\\\" title=\\\"The ReadableStream interface of the&nbsp;Streams API&nbsp;represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\\\"><code>ReadableStream</code></a> so its methods can be used for processing the data.\",\"Blobs can represent data that isn't necessarily in a JavaScript-native format. The <a href=\\\"/en-US/docs/Web/API/File\\\" title=\\\"The File interface provides information about files and allows JavaScript in a web page to access their content.\\\"><code>File</code></a> interface is based on <code>Blob</code>, inheriting blob functionality and expanding it to support files on the user's system.\"]",
    "properties": [
      {
        "name": "size",
        "overview": "The size, in bytes, of the data contained in the <code>Blob</code> object."
      },
      {
        "name": "type",
        "overview": "A string indicating the MIME&nbsp;type of the data contained in the <code>Blob</code>. If the type is unknown, this string is empty."
      }
    ],
    "methods": [
      {
        "name": "arrayBuffer",
        "overview": "Returns a promise that resolves with an <a href=\"/en-US/docs/Web/API/ArrayBuffer\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>ArrayBuffer</code></a> containing the entire contents of the <code>Blob</code> as binary data."
      },
      {
        "name": "slice",
        "overview": "Returns a new <code>Blob</code> object containing the data in the specified range of bytes of the blob on which it's called."
      },
      {
        "name": "stream",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/ReadableStream\" title=\"The ReadableStream interface of the&nbsp;Streams API&nbsp;represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\"><code>ReadableStream</code></a> that can be used to read the contents of the <code>Blob</code>."
      },
      {
        "name": "text",
        "overview": "Returns a promise that resolves with a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the entire contents of the <code>Blob</code> interpreted as UTF-8 text."
      }
    ]
  },
  {
    "name": "CDATASection",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>CDATASection</strong></code> interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. The symbols <code>&lt;</code> and <code>&amp;</code> don’t need escaping as they normally do when inside a CDATA section.\",\"In XML, a CDATA section looks like:\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "CSSRule",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>CSSRule</code></strong> interface represents a single CSS rule. There are several types of rules, listed in the <a href=\\\"#Type_constants\\\">Type constants</a> section below.\",\"The <code>CSSRule</code> interface specifies the properties common to all rules, while properties unique to specific rule types are specified in the more specialized interfaces for those rules' respective types.\",\"References to a <code>CSSRule</code> may be obtained by looking at a <a href=\\\"/en-US/docs/Web/API/CSSStyleSheet\\\" title=\\\"The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet.\\\"><code>CSSStyleSheet</code></a>'s <code>cssRules</code> list.\"]",
    "properties": [
      {
        "name": "cssText",
        "overview": "Represents the textual representation of the rule, e.g. \"<code>h1,h2 { font-size: 16pt }</code>\" or \"<code>@import 'url'</code>\". To access or modify parts of the rule (e.g. the value of \"font-size\" in the example) use the properties on the&nbsp;<a href=\"#Type_constants\">specialized interface for the rule's type</a>."
      },
      {
        "name": "parentRule",
        "overview": "Returns the containing rule, otherwise <code>null</code>. E.g. if this rule is a style rule inside an <a href=\"/en-US/docs/Web/CSS/@media\" title=\"The @media CSS at-rule can be used to apply part of a style sheet based on the result of one or more media queries.\"><code>@media</code></a> block, the parent rule would be that <a href=\"/en-US/docs/Web/API/CSSMediaRule\" title=\"The CSSMediaRule interface represents a single CSS @media rule. It implements the CSSConditionRule interface, and therefore the CSSGroupingRule and the CSSRule interface with a type value of 4 (CSSRule.MEDIA_RULE).\"><code>CSSMediaRule</code></a>."
      },
      {
        "name": "parentStyleSheet",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/CSSStyleSheet\" title=\"The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet.\"><code>CSSStyleSheet</code></a> object for the style sheet that contains this rule"
      },
      {
        "name": "type",
        "overview": "One of the <a href=\"#Type_constants\">Type constants</a> indicating the type of CSS rule."
      }
    ],
    "methods": []
  },
  {
    "name": "CSSRuleList",
    "category": "CherryPicked",
    "overview": "[\"A <code>CSSRuleList</code> is an (indirect-modify only) array-like object containing an ordered collection of <code><a href=\\\"/en/DOM/cssRule\\\" title=\\\"en/DOM/cssRule\\\">CSSRule</a></code> objects.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Returns the number of items in the collection."
      }
    ],
    "methods": [
      {
        "name": "item",
        "overview": "Returns the specific node at the given zero-based index into the list. Returns null if the index is out of range."
      }
    ]
  },
  {
    "name": "CSSStyleDeclaration",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>CSSStyleDeclaration</code></strong> interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.\",\"A <code>CSSStyleDeclaration</code> object can be exposed using three different APIs:\"]",
    "properties": [
      {
        "name": "cssFloat",
        "overview": "The cssFloat attribute can be set for elements that generate boxes that are not absolutely positioned. The cssFloat attribute corresponds to the float Cascading Style Sheets (CSS) property. Getting this attribute is equivalent to calling the getProperty method. Setting this attribute is equivalent to calling the setProperty method."
      },
      {
        "name": "cssText",
        "overview": "Textual representation of the declaration block. Setting this attribute changes the style."
      },
      {
        "name": "length",
        "overview": "The number of properties. See the <a href=\"/en-US/docs/Web/API/CSSStyleDeclaration/item\" title=\"The CSSStyleDeclaration.item() method interface returns a CSS property name from a CSSStyleDeclaration by index\"><code>item()</code></a> method below."
      },
      {
        "name": "parentRule",
        "overview": "The containing <a href=\"/en-US/docs/Web/API/CSSRule\" title=\"The CSSRule interface represents a single CSS rule. There are several types of rules, listed in the Type constants section below.\"><code>CSSRule</code></a>."
      }
    ],
    "methods": [
      {
        "name": "getPropertyPriority",
        "overview": "Returns the optional priority, \"important\"."
      },
      {
        "name": "getPropertyValue",
        "overview": "Returns the property value given a property name."
      },
      {
        "name": "item",
        "overview": "Returns a property name."
      },
      {
        "name": "removeProperty",
        "overview": "Removes a property from the CSS declaration block."
      },
      {
        "name": "setProperty",
        "overview": "Modifies an existing CSS property or creates a new CSS property in the declaration block."
      }
    ]
  },
  {
    "name": "CSSStyleSheet",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>CSSStyleSheet</code></strong> interface represents a single <a href=\\\"/en-US/docs/Web/CSS\\\">CSS</a> stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet.</span> It inherits properties and methods from its parent, <a href=\\\"/en-US/docs/Web/API/StyleSheet\\\" title=\\\"An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface.\\\"><code>StyleSheet</code></a>.\",\"A stylesheet consists of a collection of <a href=\\\"/en-US/docs/Web/API/CSSRule\\\" title=\\\"The CSSRule interface represents a single CSS rule. There are several types of rules, listed in the Type constants section below.\\\"><code>CSSRule</code></a> objects representing each of the rules in the stylesheet. The rules are contained in a <a href=\\\"/en-US/docs/Web/API/CSSRuleList\\\" title=\\\"A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects.\\\"><code>CSSRuleList</code></a>, which can be obtained from the stylesheet's <a href=\\\"/en-US/docs/Web/API/CSSStyleSheet/cssRules\\\" title=\\\"The read-only CSSStyleSheet property cssRules returns a live CSSRuleList which provides a real-time, up-to-date list of every CSS rule which comprises the stylesheet.\\\"><code>cssRules</code></a> property.\",\"For example, one rule might be a <a href=\\\"/en-US/docs/Web/API/CSSStyleRule\\\" title=\\\"CSSStyleRule represents a single CSS style rule. It implements the CSSRule interface with a type value of 1 (CSSRule.STYLE_RULE).\\\"><code>CSSStyleRule</code></a> object containing a style such as:\"]",
    "properties": [
      {
        "name": "cssRules",
        "overview": "\n <p>Returns a live <a href=\"/en-US/docs/Web/API/CSSRuleList\" title=\"A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects.\"><code>CSSRuleList</code></a> which maintains an up-to-date list of the <a href=\"/en-US/docs/Web/API/CSSRule\" title=\"The CSSRule interface represents a single CSS rule. There are several types of rules, listed in the Type constants section below.\"><code>CSSRule</code></a> objects that comprise the stylesheet.</p>\n\n <p>This is normally used to access individual rules like this:</p>\n\n <pre><code>styleSheet.cssRules[i] // where i = 0..cssRules.length-1</code></pre>\n\n <p>To add or remove items in <code>cssRules</code>, use the&nbsp;<code>CSSStyleSheet</code>'s <a href=\"/en-US/docs/Web/API/CSSStyleSheet/insertRule\" title=\"The CSSStyleSheet.insertRule() method inserts a new CSS rule into the current style sheet, with some restrictions.\"><code>insertRule()</code></a> and <a href=\"/en-US/docs/Web/API/CSSStyleSheet/deleteRule\" title=\"The CSSStyleSheet method deleteRule() removes a rule from the stylesheet object.\"><code>deleteRule()</code></a> methods.</p>\n "
      },
      {
        "name": "ownerRule",
        "overview": "If this stylesheet is imported into the document using an <a href=\"/en-US/docs/Web/CSS/@import\" title=\"The @import CSS at-rule is used to import style rules from other style sheets. These rules must precede all other types of rules, except @charset rules; as it is not a nested statement, @import cannot be used inside conditional group at-rules.\"><code>@import</code></a> rule, the <code>ownerRule</code> property returns the corresponding <a class=\"new\" href=\"/en-US/docs/Web/API/CSSImportRule\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>CSSImportRule</code></a>; otherwise, this property's value is <code>null</code>."
      }
    ],
    "methods": [
      {
        "name": "deleteRule",
        "overview": "Deletes the rule at the specified index into the stylesheet's rule list."
      },
      {
        "name": "insertRule",
        "overview": "Inserts a new rule at the specified position in the stylesheet, given the textual representation of the rule."
      }
    ]
  },
  {
    "name": "CharacterData",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>CharacterData</strong></code> abstract interface represents a <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> object that contains characters. This is an abstract interface, meaning there aren't any object of type <code>CharacterData</code>: it is implemented by other interfaces, like <a href=\\\"/en-US/docs/Web/API/Text\\\" title=\\\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\\\"><code>Text</code></a>, <a href=\\\"/en-US/docs/Web/API/Comment\\\" title=\\\"The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\\\"><code>Comment</code></a>, or <a href=\\\"/en-US/docs/Web/API/ProcessingInstruction\\\" title=\\\"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\\\"><code>ProcessingInstruction</code></a> which aren't abstract.\"]",
    "properties": [
      {
        "name": "data",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the textual data contained in this object."
      },
      {
        "name": "length",
        "overview": "Returns an <code>unsigned long</code> representing the size of the string contained in <code>CharacterData.data</code>."
      }
    ],
    "methods": [
      {
        "name": "appendData",
        "overview": "Appends the given <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> to the <code>CharacterData.data</code> string; when this method returns, <code>data</code> contains the concatenated <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>."
      },
      {
        "name": "deleteData",
        "overview": "Removes the specified amount of characters, starting at the specified offset, from the <code>CharacterData.data</code> string; when this method returns, <code>data</code> contains the shortened <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>."
      },
      {
        "name": "insertData",
        "overview": "Inserts the specified characters, at the specified offset, in the <code>CharacterData.data</code> string; when this method returns, <code>data</code> contains the modified <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>."
      },
      {
        "name": "replaceData",
        "overview": "Replaces the specified amount of characters, starting at the specified offset, with the specified <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>; when this method returns, <code>data</code> contains the modified <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>."
      },
      {
        "name": "substringData",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the part of <code>CharacterData.data</code> of the specified length and starting at the specified offset."
      }
    ]
  },
  {
    "name": "ChildNode",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The&nbsp;<code><strong>ChildNode</strong></code>&nbsp;mixin contains methods and properties that are common to all types of <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> objects that can have a parent.</span>&nbsp;It's implemented by <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a>, <a href=\\\"/en-US/docs/Web/API/DocumentType\\\" title=\\\"The DocumentType interface represents a Node containing a doctype.\\\"><code>DocumentType</code></a>, and <a href=\\\"/en-US/docs/Web/API/CharacterData\\\" title=\\\"The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract.\\\"><code>CharacterData</code></a> objects.\"]",
    "properties": [],
    "methods": [
      {
        "name": "after",
        "overview": "Inserts a set of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> or <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects in the <code>children</code> list of this <code>ChildNode</code>'s parent, just after this <code>ChildNode</code>. <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects are inserted as equivalent <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> nodes."
      },
      {
        "name": "before",
        "overview": "Inserts a set of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> or <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects in the <code>children</code> list of this <code>ChildNode</code>'s parent, just before this <code>ChildNode</code>. <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects are inserted as equivalent <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> nodes."
      },
      {
        "name": "remove",
        "overview": "Removes this <code>ChildNode</code> from the <code>children</code> list of its parent."
      },
      {
        "name": "replaceWith",
        "overview": "Replaces this <code>ChildNode</code> in the <code>children</code> list of its parent with a set of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> or <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects. <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects are inserted as equivalent <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> nodes."
      }
    ]
  },
  {
    "name": "Comment",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>Comment</strong></code> interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.</span> Comments are represented in HTML and XML as content between '<code>&lt;!--</code>' and '<code>--&gt;</code>'. In XML, the character sequence '<code>--</code>' cannot be used within a comment.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "DOMException",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>DOMException</strong></code> interface represents an abnormal event (called an <strong>exception</strong>) which occurs as a result of calling a method or accessing a property of a web API.</span> This is basically how error conditions are described in web APIs.\",\"Each exception has a <strong>name</strong>, which is a short \\\"CamelCase\\\" style string identifying the error or abnormal condition.\"]",
    "properties": [
      {
        "name": "code",
        "overview": "Returns a <code>short</code> that contains one of the error code constants, or <code>0</code> if none match. This field is used for historical reasons. New DOM exceptions don't use this anymore: they put this info in the <a href=\"/en-US/docs/Web/API/DOMException/name\" title=\"The name read-only property of the DOMException interface returns a DOMString that contains one of the strings associated with an error name.\"><code>DOMException.name</code></a> attribute."
      },
      {
        "name": "message",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a message or description associated with the given <a href=\"/en-US/docs/Web/API/DOMException#Error_names\">error name</a>."
      },
      {
        "name": "name",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that contains one of the strings associated with an <a href=\"#Error_names\">error name</a>."
      }
    ],
    "methods": []
  },
  {
    "name": "DOMImplementation",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>DOMImplementation</strong></code> interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the <a href=\\\"/en-US/docs/Web/API/Document/implementation\\\" title=\\\"The Document.implementation property returns a DOMImplementation object associated with the current document.\\\"><code>Document.implementation</code></a> property.\"]",
    "properties": [],
    "methods": [
      {
        "name": "createDocument",
        "overview": "Creates and returns an <a href=\"/en-US/docs/Web/API/XMLDocument\" title=\"The XMLDocument interface represents an XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.\"><code>XMLDocument</code></a>."
      },
      {
        "name": "createDocumentType",
        "overview": "Creates and returns a <a href=\"/en-US/docs/Web/API/DocumentType\" title=\"The DocumentType interface represents a Node containing a doctype.\"><code>DocumentType</code></a>."
      },
      {
        "name": "createHTMLDocument",
        "overview": "Creates and returns an HTML <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a>."
      },
      {
        "name": "hasFeature",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating if a given feature is supported or not. This function is unreliable and kept for compatibility purpose alone: except for SVG-related queries, it always returns <code>true</code>. Old browsers are very inconsistent in their behavior."
      }
    ]
  },
  {
    "name": "DOMParser",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>DOMParser</code></strong> interface provides the ability to parse <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/XML\\\" title=\\\"XML: eXtensible Markup Language (XML) is a generic markup language specified by the W3C. The information technology (IT) industry uses many languages based on XML as data-description languages.\\\">XML</a> or <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/HTML\\\" title=\\\"HTML: HTML (HyperText Markup Language) is a descriptive language that specifies webpage structure.\\\">HTML</a> source code from a string into a DOM <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a>.</span>\"]",
    "properties": [],
    "methods": [
      {
        "name": "parseFromString",
        "overview": "Parse XML from a string"
      }
    ]
  },
  {
    "name": "DOMRect",
    "category": "CherryPicked",
    "overview": "[\"<strong>Draft</strong><br>\\n    This page is not complete.\"]",
    "properties": [
      {
        "name": "height",
        "overview": "The height of the <code>DOMRect</code>."
      },
      {
        "name": "width",
        "overview": "The width of the <code>DOMRect</code>."
      },
      {
        "name": "x",
        "overview": "The x coordinate of the <code>DOMRect</code>'s origin."
      },
      {
        "name": "y",
        "overview": "The y coordinate of the <code>DOMRect</code>'s origin."
      }
    ],
    "methods": [
      {
        "name": "fromRect",
        "overview": "Creates a new <code>DOMRect</code>&nbsp;object with a given location and dimensions."
      }
    ]
  },
  {
    "name": "DOMRectList",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "length",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "item",
        "overview": null
      }
    ]
  },
  {
    "name": "DOMRectReadOnly",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>DOMRectReadOnly</code></strong> interface specifies the standard properties used by <a href=\\\"/en-US/docs/Web/API/DOMRect\\\" title=\\\"A DOMRect represents a rectangle.\\\"><code>DOMRect</code></a> to define a rectangle whose properties are immutable.\"]",
    "properties": [
      {
        "name": "bottom",
        "overview": "Returns the bottom coordinate value of the <code>DOMRect</code> (usually the same as y + height)."
      },
      {
        "name": "height",
        "overview": "The height of the <code>DOMRect</code>."
      },
      {
        "name": "left",
        "overview": "Returns the left coordinate value of the <code>DOMRect</code> (usually the same as <code>x</code>)."
      },
      {
        "name": "right",
        "overview": "Returns the right coordinate value of the <code>DOMRect</code> (usually the same as <code>x + width</code>)."
      },
      {
        "name": "top",
        "overview": "Returns the top coordinate value of the <code>DOMRect</code> (usually the same as <code>y</code>.)"
      },
      {
        "name": "width",
        "overview": "The width of the <code>DOMRect</code>."
      },
      {
        "name": "x",
        "overview": "The x coordinate of the <code>DOMRect</code>'s origin."
      },
      {
        "name": "y",
        "overview": "The y coordinate of the <code>DOMRect</code>'s origin."
      }
    ],
    "methods": [
      {
        "name": "fromRect",
        "overview": "Creates a new <code>DOMRect</code>&nbsp;object with a given location and dimensions."
      }
    ]
  },
  {
    "name": "DOMStringMap",
    "category": "Miscellaneous",
    "overview": "[\"<span class=\\\"seoSummary\\\">Used by the </span><a href=\\\"/en-US/docs/Web/API/HTMLElement/dataset\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>HTMLElement.dataset</code></a><span class=\\\"seoSummary\\\"> attribute to represent data for custom attributes added to elements.</span>\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "DOMTokenList",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>DOMTokenList</strong></code> interface represents a set of space-separated tokens. Such a set is returned by <a href=\\\"/en-US/docs/Web/API/Element/classList\\\" title=\\\"The Element.classList is a read-only property that returns a live DOMTokenList collection of the class attributes of the element. This can then be used to manipulate the class list.\\\"><code>Element.classList</code></a>, <a href=\\\"/en-US/docs/Web/API/HTMLLinkElement/relList\\\" title=\\\"The HTMLLinkElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <link> element and the current document.\\\"><code>HTMLLinkElement.relList</code></a>, <a href=\\\"/en-US/docs/Web/API/HTMLAnchorElement/relList\\\" title=\\\"The HTMLAnchorElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <a> element and the current document.\\\"><code>HTMLAnchorElement.relList</code></a>, <a href=\\\"/en-US/docs/Web/API/HTMLAreaElement/relList\\\" title=\\\"The HTMLAreaElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <area> element and the current document.\\\"><code>HTMLAreaElement.relList</code></a>, <a class=\\\"new\\\" href=\\\"/en-US/docs/Web/API/HTMLIframeElement/sandbox\\\" rel=\\\"nofollow\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>HTMLIframeElement.sandbox</code></a>, or <a class=\\\"new\\\" href=\\\"/en-US/docs/Web/API/HTMLOutputElement/htmlFor\\\" rel=\\\"nofollow\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>HTMLOutputElement.htmlFor</code></a>. It is indexed beginning with <code>0</code> as with JavaScript <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\\\" title=\\\"The JavaScript Array class is a global object that&nbsp;is used in the&nbsp;construction&nbsp;of&nbsp;arrays; which are high-level, list-like objects.\\\"><code>Array</code></a> objects. <code>DOMTokenList</code> is always case-sensitive.</span>\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Is an <code>integer</code> representing the number of objects stored in the object."
      },
      {
        "name": "value",
        "overview": "A stringifier property that returns the value of the list as a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>."
      }
    ],
    "methods": [
      {
        "name": "add",
        "overview": "Adds the specified&nbsp;<code><var>token</var></code>(s) to the list."
      },
      {
        "name": "contains",
        "overview": "Returns <code>true</code> if the list contains the given <code><var>token</var></code>, otherwise <code>false</code>."
      },
      {
        "name": "entries",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a>, allowing you to go through all key/value pairs contained in this object."
      },
      {
        "name": "forEach",
        "overview": "Executes a provided <code><var>callback</var></code> function once per <code>DOMTokenList</code> element."
      },
      {
        "name": "item",
        "overview": "Returns the item in the list by its <code><var>index</var></code>, or <code>undefined</code> if <code><var>index</var></code> is greater than or equal to the list's <code>length</code>."
      },
      {
        "name": "keys",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a>, allowing you to go through all keys of the key/value pairs contained in this object."
      },
      {
        "name": "remove",
        "overview": "Removes the specified <code><var>token</var></code>(s) from the list."
      },
      {
        "name": "replace",
        "overview": "Replaces&nbsp;<code><var>token</var></code> with&nbsp;<code><var>newToken</var></code>."
      },
      {
        "name": "supports",
        "overview": "Returns <code>true</code> if a given <code><var>token</var></code> is in the associated attribute's supported tokens."
      },
      {
        "name": "toggle",
        "overview": "Removes&nbsp;<code><var>token</var></code> from the list if it exists, or adds <code><var>token</var></code> to the list if it doesn't. Returns a boolean indicating whether <code><var>token</var></code> is in the list after the operation."
      },
      {
        "name": "values",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a>, allowing you to go through all values of the key/value pairs contained in this object."
      }
    ]
  },
  {
    "name": "Document",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>Document</code></strong> interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the <a href=\\\"/en-US/docs/Using_the_W3C_DOM_Level_1_Core\\\">DOM tree</a>.</span> The DOM tree includes elements such as <a href=\\\"/en-US/docs/Web/HTML/Element/body\\\" title=\\\"The HTML <body> Element represents the content of an HTML&nbsp;document. There can be only one <body> element in a document.\\\"><code>&lt;body&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/table\\\" title=\\\"The HTML <table> element represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.\\\"><code>&lt;table&gt;</code></a>, among <a href=\\\"/en-US/docs/Web/HTML/Element\\\">many others</a>. It provides functionality globally to the document, like how to obtain the page's URL and create new elements in the document.\"]",
    "properties": [
      {
        "name": "anchors",
        "overview": "Returns a list of all of the anchors in the document."
      },
      {
        "name": "body",
        "overview": "Returns the <a href=\"/en-US/docs/Web/HTML/Element/body\" title=\"The HTML <body> Element represents the content of an HTML&nbsp;document. There can be only one <body> element in a document.\"><code>&lt;body&gt;</code></a> or <a href=\"/en-US/docs/Web/HTML/Element/frameset\" title=\"The HTML <frameset> element is used to contain <frame> elements.\"><code>&lt;frameset&gt;</code></a> node of the current document."
      },
      {
        "name": "characterSet",
        "overview": "Returns the character set being used by the document."
      },
      {
        "name": "compatMode",
        "overview": "Indicates whether the document is rendered in <em>quirks</em> or <em>strict</em> mode."
      },
      {
        "name": "contentType",
        "overview": "Returns the Content-Type from the MIME Header of the current document."
      },
      {
        "name": "cookie",
        "overview": "Returns a semicolon-separated list of the cookies for that document or sets a single cookie."
      },
      {
        "name": "defaultView",
        "overview": "Returns a reference to the window object."
      },
      {
        "name": "designMode",
        "overview": "Gets/sets the ability to edit the whole document."
      },
      {
        "name": "dir",
        "overview": "Gets/sets directionality (rtl/ltr) of the document."
      },
      {
        "name": "doctype",
        "overview": "Returns the Document Type Definition (DTD) of the current document."
      },
      {
        "name": "documentElement",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> that is a direct child of the document. For HTML documents, this is normally the <a href=\"/en-US/docs/Web/API/HTMLHtmlElement\" title=\"The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface.\"><code>HTMLHtmlElement</code></a> object representing the document's <a href=\"/en-US/docs/Web/HTML/Element/html\" title=\"The HTML <html> element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.\"><code>&lt;html&gt;</code></a> element."
      },
      {
        "name": "documentURI",
        "overview": "Returns the document location as a string."
      },
      {
        "name": "domain",
        "overview": "Gets/sets the domain of the current document."
      },
      {
        "name": "embeds",
        "overview": "Returns a list of the embedded <a href=\"/en-US/docs/Web/HTML/Element/embed\" title=\"The HTML <embed> element embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.\"><code>&lt;embed&gt;</code></a> elements within the current document."
      },
      {
        "name": "featurePolicy",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/FeaturePolicy\" title=\"The FeaturePolicy&nbsp;interface of the Feature Policy API represents the set of policies applied to the current execution context.\"><code>FeaturePolicy</code></a> interface which provides a simple API for introspecting the feature policies applied to a specific document."
      },
      {
        "name": "fonts",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/FontFaceSet\" title=\"The FontFaceSet interface of the CSS Font Loading API&nbsp;manages the loading of font-faces&nbsp;and querying of&nbsp;their download&nbsp;status.\"><code>FontFaceSet</code></a> interface of the current document."
      },
      {
        "name": "forms",
        "overview": "Returns a list of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> elements within the current document."
      },
      {
        "name": "fullscreenEnabled",
        "overview": "Indicates whether or not full-screen mode is available."
      },
      {
        "name": "head",
        "overview": "Returns the <a href=\"/en-US/docs/Web/HTML/Element/head\" title=\"The HTML <head> element contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets.\"><code>&lt;head&gt;</code></a> element of the current document."
      },
      {
        "name": "hidden",
        "overview": "Returns a Boolean value indicating if the page is considered hidden or not."
      },
      {
        "name": "images",
        "overview": "Returns a list of the images in the current document."
      },
      {
        "name": "implementation",
        "overview": "Returns the DOM implementation associated with the current document."
      },
      {
        "name": "lastModified",
        "overview": "Returns the date on which the document was last modified."
      },
      {
        "name": "links",
        "overview": "Returns a list of all the hyperlinks in the document."
      },
      {
        "name": "location",
        "overview": "Returns the URI of the current document."
      },
      {
        "name": "onfullscreenchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/fullscreenchange\" title=\"/en-US/docs/Web/Events/fullscreenchange\">fullscreenchange</a></code> event is raised."
      },
      {
        "name": "onfullscreenerror",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/fullscreenerror\" title=\"/en-US/docs/Web/Events/fullscreenerror\">fullscreenerror</a></code> event is raised."
      },
      {
        "name": "onpointerlockchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerlockchange\" title=\"/en-US/docs/Web/Events/pointerlockchange\">pointerlockchange</a></code> event is raised."
      },
      {
        "name": "onpointerlockerror",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerlockerror\" title=\"/en-US/docs/Web/Events/pointerlockerror\">pointerlockerror</a></code> event is raised."
      },
      {
        "name": "onreadystatechange",
        "overview": "Represents the event handling code for the <code><a href=\"/en-US/docs/Web/Events/readystatechange\" title=\"/en-US/docs/Web/Events/readystatechange\">readystatechange</a></code> event."
      },
      {
        "name": "onvisibilitychange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/visibilitychange\" title=\"/en-US/docs/Web/Events/visibilitychange\">visibilitychange</a></code> event is raised."
      },
      {
        "name": "plugins",
        "overview": "Returns a list of the available plugins."
      },
      {
        "name": "readyState",
        "overview": "Returns loading status of the document."
      },
      {
        "name": "referrer",
        "overview": "Returns the URI of the page that linked to this page."
      },
      {
        "name": "scripts",
        "overview": "Returns all the <a href=\"/en-US/docs/Web/HTML/Element/script\" title=\"The HTML <script> element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code.\"><code>&lt;script&gt;</code></a> elements on the document."
      },
      {
        "name": "scrollingElement",
        "overview": "Returns a reference to the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> that scrolls the document."
      },
      {
        "name": "title",
        "overview": "Sets or gets the title of the current document."
      },
      {
        "name": "URL",
        "overview": "Returns the document location as a string."
      },
      {
        "name": "visibilityState",
        "overview": "Returns a <code>string</code> denoting the visibility state of the document. Possible values are <code>visible</code>, <code>hidden</code>, <code>prerender</code>, and <code>unloaded</code>."
      }
    ],
    "methods": [
      {
        "name": "adoptNode",
        "overview": "Adopt node from an external document."
      },
      {
        "name": "captureEvents",
        "overview": "See <a href=\"/en-US/docs/Web/API/Window/captureEvents\" title=\"The Window.captureEvents() method registers the window to capture all events of the specified type.\"><code>Window.captureEvents</code></a>."
      },
      {
        "name": "close",
        "overview": "Closes a document stream for writing."
      },
      {
        "name": "createAttribute",
        "overview": "Creates a new <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> object and returns it."
      },
      {
        "name": "createAttributeNS",
        "overview": "Creates a new attribute node in a given namespace and returns it."
      },
      {
        "name": "createCDATASection",
        "overview": "Creates a new CDATA node and returns it."
      },
      {
        "name": "createComment",
        "overview": "Creates a new comment node and returns it."
      },
      {
        "name": "createDocumentFragment",
        "overview": "Creates a new document fragment."
      },
      {
        "name": "createElement",
        "overview": "Creates a new element with the given tag name."
      },
      {
        "name": "createElementNS",
        "overview": "Creates a new element with the given tag name and namespace URI."
      },
      {
        "name": "createEvent",
        "overview": "Creates an event object."
      },
      {
        "name": "createNodeIterator",
        "overview": "Creates a <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> object."
      },
      {
        "name": "createProcessingInstruction",
        "overview": "Creates a new <a href=\"/en-US/docs/Web/API/ProcessingInstruction\" title=\"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\"><code>ProcessingInstruction</code></a> object."
      },
      {
        "name": "createRange",
        "overview": "Creates a <a href=\"/en-US/docs/Web/API/Range\" title=\"The Range interface represents a fragment of a document that can contain nodes and parts of text nodes.\"><code>Range</code></a> object."
      },
      {
        "name": "createTextNode",
        "overview": "Creates a text node."
      },
      {
        "name": "createTreeWalker",
        "overview": "Creates a <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> object."
      },
      {
        "name": "exitFullscreen",
        "overview": "Requests that the element on this document which is currently being presented in full-screen mode be taken out of full-screen mode, restoring the previous state of the screen."
      },
      {
        "name": "exitPointerLock",
        "overview": "Release the pointer lock."
      },
      {
        "name": "getElementsByClassName",
        "overview": "Returns a list of elements with the given class name."
      },
      {
        "name": "getElementsByName",
        "overview": "Returns a list of elements with the given name."
      },
      {
        "name": "getElementsByTagName",
        "overview": "Returns a list of elements with the given tag name."
      },
      {
        "name": "getElementsByTagNameNS",
        "overview": "Returns a list of elements with the given tag name and namespace."
      },
      {
        "name": "getSelection",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Selection\" title=\"A Selection object represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or manipulation, call window.getSelection().\"><code>Selection</code></a> object representing the range of text selected by the user, or the current position of the caret."
      },
      {
        "name": "hasFocus",
        "overview": "Returns <code>true</code> if the focus is currently located anywhere inside the specified document."
      },
      {
        "name": "importNode",
        "overview": "Returns a clone of a node from an external document."
      },
      {
        "name": "open",
        "overview": "Opens a document stream for writing."
      },
      {
        "name": "releaseEvents",
        "overview": "See <a href=\"/en-US/docs/Web/API/Window/releaseEvents\" title=\"Releases the window from trapping events of a specific type.\"><code>Window.releaseEvents()</code></a>."
      },
      {
        "name": "write",
        "overview": "Writes text in a document."
      },
      {
        "name": "writeln",
        "overview": "Writes a line of text in a document."
      }
    ]
  },
  {
    "name": "DocumentAndElementEventHandlers",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "oncopy",
        "overview": null
      },
      {
        "name": "oncut",
        "overview": null
      },
      {
        "name": "onpaste",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "DocumentFragment",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>DocumentFragment</code></strong> interface represents a minimal document object that has no parent. It is used as a lightweight version of <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> that stores a segment of a document structure comprised of nodes just like a standard document.</span> The key difference is due to the fact that&nbsp;the&nbsp;document fragment isn't part of the active document tree structure.&nbsp;Changes made to the fragment don't affect the document (even on&nbsp;<a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/reflow\\\" title=\\\"reflow: Reflow&nbsp;happens when a browser must process and draw part or all of a webpage again, such as after an update on an interactive site.\\\">reflow</a>)&nbsp;or incur any performance impact when changes are made.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "DocumentOrShadowRoot",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>DocumentOrShadowRoot</code></strong> mixin of the&nbsp;<a href=\\\"/en-US/docs/Web/Web_Components/Using_shadow_DOM\\\">Shadow DOM API</a> provides APIs that are shared between documents and shadow roots. The following features are included in both <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> and <a href=\\\"/en-US/docs/Web/API/ShadowRoot\\\" title=\\\"The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.\\\"><code>ShadowRoot</code></a>. </span>\"]",
    "properties": [
      {
        "name": "activeElement",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> within the shadow tree that has focus."
      },
      {
        "name": "fullscreenElement",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> that's currently in full screen mode for this document."
      },
      {
        "name": "pointerLockElement",
        "overview": "Returns the element set as the target for mouse events while the pointer is locked. It returns&nbsp;<code>null</code> if lock is pending, the pointer is unlocked, or if the target is in another document."
      }
    ],
    "methods": [
      {
        "name": "caretPositionFromPoint",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/CaretPosition\" title=\"The CaretPosition interface represents the caret position, an indicator for the text insertion point. You can get a CaretPosition using the document.caretPositionFromPoint method.\"><code>CaretPosition</code></a> object containing the DOM node containing the caret, and caret's character offset within that node."
      },
      {
        "name": "elementFromPoint",
        "overview": "Returns the topmost element at the specified coordinates."
      },
      {
        "name": "elementsFromPoint",
        "overview": "Returns an array of all elements at the specified coordinates."
      },
      {
        "name": "getSelection",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Selection\" title=\"A Selection object represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or manipulation, call window.getSelection().\"><code>Selection</code></a> object representing the range of text selected by the user, or the current position of the caret."
      }
    ]
  },
  {
    "name": "DocumentType",
    "category": "DOMCore",
    "overview": "[\"The <strong><code>DocumentType</code></strong> interface represents a <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> containing a doctype.\"]",
    "properties": [
      {
        "name": "name",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>, eg <code>\"html\"</code> for <code>&lt;!DOCTYPE HTML&gt;</code>."
      },
      {
        "name": "publicId",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>, eg <code>\"-//W3C//DTD HTML 4.01//EN\"</code>, empty string for HTML5."
      },
      {
        "name": "systemId",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>, eg <code>\"http://www.w3.org/TR/html4/strict.dtd\"</code>, empty string for HTML5."
      }
    ],
    "methods": []
  },
  {
    "name": "Element",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\"><strong><code>Element</code></strong> is the most general base class from which all element objects (i.e. objects that represent elements) in a <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from <code>Element</code>.</span> For example, the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface is the base interface for HTML elements, while the <a href=\\\"/en-US/docs/Web/API/SVGElement\\\" title=\\\"All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface.\\\"><code>SVGElement</code></a> interface is the basis for all SVG elements. Most functionality is specified further down the class hierarchy.\",\"Languages outside the realm of the Web platform, like XUL through the <code>XULElement</code> interface, also implement <code>Element</code>.\"]",
    "properties": [
      {
        "name": "attributes",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NamedNodeMap\" title=\"The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.\"><code>NamedNodeMap</code></a> object containing the assigned attributes of the corresponding HTML element."
      },
      {
        "name": "classList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> containing the list of class attributes."
      },
      {
        "name": "className",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the class of the element."
      },
      {
        "name": "clientHeight",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the inner height of the element."
      },
      {
        "name": "clientLeft",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the width of the left border of the element."
      },
      {
        "name": "clientTop",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the width of the top border of the element."
      },
      {
        "name": "clientWidth",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the inner width of the element."
      },
      {
        "name": "id",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the id of the element."
      },
      {
        "name": "innerHTML",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the markup of the element's content."
      },
      {
        "name": "localName",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the local part of the qualified name of the element."
      },
      {
        "name": "namespaceURI",
        "overview": "The namespace URI of the element, or <code>null</code> if it is no namespace.\n <div class=\"note\">\n <p><strong>Note:</strong> In Firefox 3.5 and earlier, HTML elements are in no namespace. In later versions, HTML elements are in the <code><a class=\"external linkification-ext\" href=\"http://www.w3.org/1999/xhtml\" rel=\"noopener\" title=\"Linkification: http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</a></code> namespace in both HTML and XML trees. </p>\n </div>\n "
      },
      {
        "name": "onfullscreenchange",
        "overview": "An event handler for the <code><a href=\"/en-US/docs/Web/Events/fullscreenchange\" title=\"/en-US/docs/Web/Events/fullscreenchange\">fullscreenchange</a></code> event, which is sent when the element enters or exits full-screen mode. This can be used to watch both for successful expected transitions, but also to watch for unexpected changes, such as when your app is running in the background."
      },
      {
        "name": "onfullscreenerror",
        "overview": "An event handler for the <code><a href=\"/en-US/docs/Web/Events/fullscreenerror\" title=\"/en-US/docs/Web/Events/fullscreenerror\">fullscreenerror</a></code> event, which is sent when an error occurs while attempting to change into full-screen mode."
      },
      {
        "name": "outerHTML",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string."
      },
      {
        "name": "part",
        "overview": "Represents the part identifier(s) of the element (i.e. set using the <code>part</code> attribute), returned as a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a>."
      },
      {
        "name": "prefix",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the namespace prefix of the element, or <code>null</code> if no prefix is specified."
      },
      {
        "name": "scrollHeight",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the scroll view height of an element."
      },
      {
        "name": "scrollLeft",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the left scroll offset of the element."
      },
      {
        "name": "scrollTop",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing number of pixels the top of the document is scrolled vertically."
      },
      {
        "name": "scrollWidth",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor. A&nbsp;primitive type object number is&nbsp;created using the Number() function.\"><code>Number</code></a> representing the scroll view width of the element."
      },
      {
        "name": "shadowRoot",
        "overview": "Returns the open shadow root that is hosted by the element, or null if no open shadow root is present."
      },
      {
        "name": "slot",
        "overview": "Returns the name of the shadow DOM slot the element is inserted in."
      },
      {
        "name": "tagName",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\" title=\"The String global object is a constructor for strings or a sequence of characters.\"><code>String</code></a> with the name of the tag for the given element."
      }
    ],
    "methods": [
      {
        "name": "attachShadow",
        "overview": "Attaches a shadow DOM tree to the specified element and returns a reference to its <a href=\"/en-US/docs/Web/API/ShadowRoot\" title=\"The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.\"><code>ShadowRoot</code></a>."
      },
      {
        "name": "closest",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> which is the closest ancestor of the current element (or the current element itself) which matches the selectors given in parameter."
      },
      {
        "name": "computedStyleMap",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\" title=\"The StylePropertyMapReadOnly interface of the the CSS Typed Object Model API provides a read-only representation of a CSS declaration block that is an alternative to CSSStyleDeclaration. Retrieve an instance of this interface using Element.computedStyleMap().\"><code>StylePropertyMapReadOnly</code></a> interface which provides a read-only representation of a CSS declaration block that is an alternative to <a href=\"/en-US/docs/Web/API/CSSStyleDeclaration\" title=\"The CSSStyleDeclaration interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.\"><code>CSSStyleDeclaration</code></a>."
      },
      {
        "name": "getAttribute",
        "overview": "Retrieves the value of the named attribute from the current node and returns it as an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" title=\"The Object class represents one of JavaScript's data types. It is used to store&nbsp;various keyed collections and more complex entities. Objects can be created using the Object() constructor or the object initializer / literal syntax.\"><code>Object</code></a>."
      },
      {
        "name": "getAttributeNames",
        "overview": "Returns an array of attribute names from the current element."
      },
      {
        "name": "getAttributeNode",
        "overview": "Retrieves the node representation of the named attribute from the current node and returns it as an <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a>."
      },
      {
        "name": "getAttributeNodeNS",
        "overview": "Retrieves the node representation of the attribute with the specified name and namespace, from the current node and returns it as an <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a>."
      },
      {
        "name": "getAttributeNS",
        "overview": "Retrieves the value of the attribute with the specified name and namespace, from the current node and returns it as an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" title=\"The Object class represents one of JavaScript's data types. It is used to store&nbsp;various keyed collections and more complex entities. Objects can be created using the Object() constructor or the object initializer / literal syntax.\"><code>Object</code></a>."
      },
      {
        "name": "getBoundingClientRect",
        "overview": "Returns the size of an element and its position relative to the viewport."
      },
      {
        "name": "getClientRects",
        "overview": "Returns a collection of rectangles that indicate the bounding rectangles for each line of text in a client."
      },
      {
        "name": "getElementsByClassName",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> that contains all descendants of the current element that possess the list of classes given in the parameter."
      },
      {
        "name": "getElementsByTagName",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing all descendant elements, of a particular tag name, from the current element."
      },
      {
        "name": "getElementsByTagNameNS",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing all descendant elements, of a particular tag name and namespace, from the current element."
      },
      {
        "name": "hasAttribute",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating if the element has the specified attribute or not."
      },
      {
        "name": "hasAttributeNS",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating if the element has the specified attribute, in the specified namespace, or not."
      },
      {
        "name": "hasAttributes",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating if the element has one or more HTML attributes present."
      },
      {
        "name": "hasPointerCapture",
        "overview": "Indicates whether the element on which it is invoked has pointer capture for the pointer identified by the given pointer ID."
      },
      {
        "name": "insertAdjacentElement",
        "overview": "Inserts a given element node at a given position relative to the element it is invoked upon."
      },
      {
        "name": "insertAdjacentHTML",
        "overview": "Parses the text as HTML or XML and inserts the resulting nodes into the tree in the position given."
      },
      {
        "name": "insertAdjacentText",
        "overview": "Inserts a given text node at a given position relative to the element it is invoked upon."
      },
      {
        "name": "matches",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating whether or not the element would be selected by the specified selector string."
      },
      {
        "name": "releasePointerCapture",
        "overview": "Releases (stops) pointer capture that was previously set for a specific <a href=\"/en-US/docs/Web/API/PointerEvent\" title=\"The PointerEvent interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc.\"><code>pointer event</code></a>."
      },
      {
        "name": "removeAttribute",
        "overview": "Removes the named attribute from the current node."
      },
      {
        "name": "removeAttributeNode",
        "overview": "Removes the node representation of the named attribute from the current node."
      },
      {
        "name": "removeAttributeNS",
        "overview": "Removes the attribute with the specified name and namespace, from the current node."
      },
      {
        "name": "requestFullscreen",
        "overview": "Asynchronously asks the browser to make the element full-screen."
      },
      {
        "name": "requestPointerLock",
        "overview": "Allows to asynchronously ask for the pointer to be locked on the given element."
      },
      {
        "name": "scroll",
        "overview": "Scrolls to a particular set of coordinates inside a given element."
      },
      {
        "name": "scrollBy",
        "overview": "Scrolls an element by the given amount."
      },
      {
        "name": "scrollIntoView",
        "overview": "Scrolls the page until the element gets into the view."
      },
      {
        "name": "scrollTo",
        "overview": "Scrolls to a particular set of coordinates inside a given element."
      },
      {
        "name": "setAttribute",
        "overview": "Sets the value of a named attribute of the current node."
      },
      {
        "name": "setAttributeNode",
        "overview": "Sets the node representation of the named attribute from the current node."
      },
      {
        "name": "setAttributeNodeNS",
        "overview": "Sets the node representation of the attribute with the specified name and namespace, from the current node."
      },
      {
        "name": "setAttributeNS",
        "overview": "Sets the value of the attribute with the specified name and namespace, from the current node."
      },
      {
        "name": "setPointerCapture",
        "overview": "Designates a specific element as the capture target of future <a href=\"/en-US/docs/Web/API/Pointer_events\">pointer events</a>."
      },
      {
        "name": "toggleAttribute",
        "overview": "Toggles a boolean attribute, removing it if it is present and adding it if it is not present, on the specified element."
      }
    ]
  },
  {
    "name": "ElementCSSInlineStyle",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "style",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "ElementContentEditable",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "contentEditable",
        "overview": null
      },
      {
        "name": "isContentEditable",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "Event",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>Event</strong></code> interface represents an event which takes place in the DOM.</span>\",\"An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\\\" title=\\\"The HTMLElement.click() method simulates a mouse click&nbsp;on an element.\\\"><code>HTMLElement.click()</code></a>&nbsp;method of an&nbsp;element, or by defining&nbsp;the&nbsp;event, then sending&nbsp;it to a specified target&nbsp;using <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\\\" title=\\\"Dispatches an Event at the specified EventTarget, (synchronously) invoking the affected EventListeners in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with dispatchEvent().\\\"><code>EventTarget.dispatchEvent()</code></a>.\",\"There are many types of events, some of which use other interfaces based on the main <code>Event</code> interface. <code>Event</code> itself contains the properties and methods which are common to all events.\",\"Many DOM elements can be set up to accept (or \\\"listen\\\" for) these events, and execute code in response to process (or \\\"handle\\\") them. Event-handlers are usually connected (or \\\"attached\\\") to various <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\\\">HTML elements</a> (such as <code>&lt;button&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>, etc.) using <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\\\" title=\\\"The EventTarget method addEventListener() sets up a function that will be&nbsp;called whenever the specified event is delivered to the target.\\\"><code>EventTarget.addEventListener()</code></a>, and this generally replaces using the old HTML <a href=\\\"https://developer.mozilla.org/en-US/docs/HTML/Global_attributes\\\">event handler attributes</a>. Further, when properly added, such handlers can also be disconnected if needed using <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\\\" title=\\\"The EventTarget.removeEventListener() method removes from the&nbsp;EventTarget an event listener previously registered with EventTarget.addEventListener(). The event listener to be removed is identified using a combination of the event type, the event listener function itself, and various optional options that may affect the matching process; see Matching event listeners for removal\\\"><code>removeEventListener()</code></a>.\"]",
    "properties": [
      {
        "name": "bubbles",
        "overview": "A boolean indicating whether or not the event bubbles up through the DOM."
      },
      {
        "name": "cancelable",
        "overview": "A boolean indicating whether the event is cancelable."
      },
      {
        "name": "cancelBubble",
        "overview": "A historical alias to <a href=\"/en-US/docs/Web/API/Event/stopPropagation\" title=\"The stopPropagation() method of the Event interface prevents further propagation of the current event in the capturing and bubbling phases.\"><code>Event.stopPropagation()</code></a>. Setting its value to <code>true</code> before returning from an event handler prevents propagation of the event."
      },
      {
        "name": "composed",
        "overview": "A boolean indicating whether or not the event can bubble across the boundary between the shadow DOM and the regular DOM."
      },
      {
        "name": "currentTarget",
        "overview": "A reference to the currently registered target for the event. This is the object to which the event is currently slated to be sent. It's possible this has been changed along the way through <em>retargeting</em>."
      },
      {
        "name": "defaultPrevented",
        "overview": "Indicates whether or not the call to <a href=\"/en-US/docs/Web/API/Event/preventDefault\" title=\"The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.\"><code>event.preventDefault()</code></a> canceled the event."
      },
      {
        "name": "eventPhase",
        "overview": "Indicates which phase of the event flow is being processed."
      },
      {
        "name": "isTrusted",
        "overview": "Indicates whether or not the event was initiated by the browser (after a user click, for instance) or by a script (using an event creation method, like <a href=\"/en-US/docs/Web/API/Event/initEvent\" title=\"The Event.initEvent() method is used to initialize the value of an event created using Document.createEvent().\"><code>Event.initEvent</code></a>)."
      },
      {
        "name": "target",
        "overview": "A reference to the target to which the event was originally dispatched."
      },
      {
        "name": "timeStamp",
        "overview": "The time at which the event was created&nbsp;(in milliseconds). By specification, this value is time since epoch—but in reality, browsers' definitions vary. In addition, work is underway to change this to be a <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\" title=\"The DOMHighResTimeStamp type is a double and is used to store a time value in milliseconds.\"><code>DOMHighResTimeStamp</code></a> instead."
      },
      {
        "name": "type",
        "overview": "The name of the event. Case-insensitive."
      }
    ],
    "methods": [
      {
        "name": "composedPath",
        "overview": "Returns the event’s path (objects on which listeners will be invoked). This does not include nodes in shadow trees if the shadow root was created with its <a href=\"/en-US/docs/Web/API/ShadowRoot/mode\" title=\"The mode property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root's internal features are accessible from JavaScript.\"><code>ShadowRoot.mode</code></a> closed."
      },
      {
        "name": "initEvent",
        "overview": "Initializes the value of an Event created. If the event has already been dispatched, this method does nothing."
      },
      {
        "name": "preventDefault",
        "overview": "Cancels the event (if it is cancelable)."
      },
      {
        "name": "stopImmediatePropagation",
        "overview": "For this particular event, prevent all other listeners from being called. This includes listeners attached to the same element as well as those attached to elements that will be traversed later (during the capture phase, for instance)."
      },
      {
        "name": "stopPropagation",
        "overview": "Stops the propagation of events further along in the DOM."
      }
    ]
  },
  {
    "name": "EventListener",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>EventListener</code></strong> interface represents an object that can handle an event dispatched by an <a href=\\\"/en-US/docs/Web/API/EventTarget\\\" title=\\\"EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\\\"><code>EventTarget</code></a> object.\"]",
    "properties": [],
    "methods": [
      {
        "name": "handleEvent",
        "overview": "A function that is called whenever an event of the specified type occurs."
      }
    ]
  },
  {
    "name": "EventTarget",
    "category": "DOMCore",
    "overview": "[\"<strong><code>EventTarget</code></strong> is a DOM interface implemented by objects that can receive events and may have listeners for them.\",\"<a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a>, <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a>, and <a href=\\\"/en-US/docs/Web/API/Window\\\" title=\\\"The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window.\\\"><code>Window</code></a> are the most common event targets, but other objects can be event targets too, for example <a href=\\\"/en-US/docs/Web/API/XMLHttpRequest\\\" title=\\\"Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.\\\"><code>XMLHttpRequest</code></a>, <a href=\\\"/en-US/docs/Web/API/AudioNode\\\" title=\\\"The AudioNode interface is a generic interface for representing an audio processing module. Examples include:\\\"><code>AudioNode</code></a>, <a href=\\\"/en-US/docs/Web/API/AudioContext\\\" title=\\\"The AudioContext interface represents an audio-processing graph built from audio modules linked together, each represented by an AudioNode.\\\"><code>AudioContext</code></a>, and others.\",\"Many event targets (including elements, documents, and windows) also support setting <a href=\\\"/en-US/docs/Web/Guide/DOM/Events/Event_handlers\\\">event handlers</a> via <code>on<em>event</em></code> properties and attributes.\"]",
    "properties": [],
    "methods": [
      {
        "name": "addEventListener",
        "overview": "Registers an event handler of a specific event type on the <code>EventTarget</code>."
      },
      {
        "name": "dispatchEvent",
        "overview": "Dispatches an event to this <code>EventTarget</code>."
      },
      {
        "name": "removeEventListener",
        "overview": "Removes an event listener from the <code>EventTarget</code>."
      }
    ]
  },
  {
    "name": "FeaturePolicy",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "allowedFeatures",
        "overview": null
      },
      {
        "name": "allowsFeature",
        "overview": null
      },
      {
        "name": "features",
        "overview": null
      },
      {
        "name": "getAllowlistForFeature",
        "overview": null
      }
    ]
  },
  {
    "name": "File",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>File</code></strong> interface provides information about files and allows JavaScript in a web page to access their content.\",\"<code>File</code> objects are generally retrieved from a <a href=\\\"/en-US/docs/Web/API/FileList\\\" title=\\\"An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type=&quot;file&quot;> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage.\\\"><code>FileList</code></a> object returned as a result of a user selecting files using the&nbsp;<a href=\\\"/en-US/docs/Web/HTML/Element/input\\\" title=\\\"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. \\\"><code>&lt;input&gt;</code></a>&nbsp;element, from a drag and drop operation's <a href=\\\"/en-US/docs/Web/API/DataTransfer\\\" title=\\\"The DataTransfer object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API.\\\"><code>DataTransfer</code></a> object, or from the&nbsp;<code>mozGetAsFile()</code>&nbsp;API on an&nbsp;<a href=\\\"/en-US/docs/Web/API/HTMLCanvasElement\\\" title=\\\"The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface.\\\"><code>HTMLCanvasElement</code></a>.\",\"A <code>File</code> object is a specific kind of a <a href=\\\"/en-US/docs/Web/API/Blob\\\" title=\\\"A Blob object represents a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\\\"><code>Blob</code></a>, and can be used in any context that a Blob can. In particular, <a href=\\\"/en-US/docs/Web/API/FileReader\\\" title=\\\"The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.\\\"><code>FileReader</code></a>, <a href=\\\"/en-US/docs/Web/API/URL/createObjectURL\\\" title=\\\"The URL.createObjectURL() static method creates a DOMString containing a&nbsp;URL representing the object given in the parameter. The URL lifetime is tied to the document in the window on which it was created. The new object URL represents the specified File object or Blob object.\\\"><code>URL.createObjectURL()</code></a>, <a href=\\\"/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>createImageBitmap()</code></a>, and <a href=\\\"/en-US/docs/Web/API/XMLHttpRequest#send()\\\" title=\\\"\\\"><code>XMLHttpRequest.send()</code></a> accept both <code>Blob</code>s and <code>File</code>s.\",\"See <a href=\\\"/en-US/docs/Using_files_from_web_applications\\\">Using files from web applications</a> for more information and examples.\"]",
    "properties": [
      {
        "name": "lastModified",
        "overview": "Returns the last modified time of the file, in millisecond since the UNIX epoch (January 1st, 1970 at Midnight)."
      },
      {
        "name": "name",
        "overview": "Returns the name of the file referenced by the <code>File</code> object."
      }
    ],
    "methods": []
  },
  {
    "name": "FileList",
    "category": "CherryPicked",
    "overview": "[\"An object of this type is returned by the <code>files</code> property of the HTML <a href=\\\"/en-US/docs/Web/HTML/Element/input\\\" title=\\\"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. \\\"><code>&lt;input&gt;</code></a> element; this lets you access the list of files selected with the <code>&lt;input type=\\\"file\\\"&gt;</code> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the <a href=\\\"/en-US/docs/DragDrop/DataTransfer\\\" title=\\\"DragDrop/DataTransfer\\\"><code>DataTransfer</code></a> object for details on this usage.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "A read-only value indicating the number of files in the list."
      }
    ],
    "methods": [
      {
        "name": "item",
        "overview": "Returns a <a href=\"/en-US/docs/DOM/File\" title=\"DOM/File\"><code>File</code></a> object representing the file at the specified index in the file list."
      }
    ]
  },
  {
    "name": "FontFaceSet",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "onloading",
        "overview": null
      },
      {
        "name": "onloadingdone",
        "overview": null
      },
      {
        "name": "onloadingerror",
        "overview": null
      },
      {
        "name": "ready",
        "overview": null
      },
      {
        "name": "status",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "add",
        "overview": null
      },
      {
        "name": "check",
        "overview": null
      },
      {
        "name": "clear",
        "overview": null
      },
      {
        "name": "delete",
        "overview": null
      },
      {
        "name": "forEach",
        "overview": null
      },
      {
        "name": "load",
        "overview": null
      }
    ]
  },
  {
    "name": "FontFaceSetLoadEvent",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "fontfaces",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "FontFaceSource",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "fonts",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "GlobalEventHandlers",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>GlobalEventHandlers</code></strong> mixin describes the event handlers common to several interfaces like <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a>, <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a>, or <a href=\\\"/en-US/docs/Web/API/Window\\\" title=\\\"The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window.\\\"><code>Window</code></a>.</span> Each of these interfaces can, of course, add more event handlers in addition to the ones listed below.\"]",
    "properties": [
      {
        "name": "onabort",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <a href=\"/en-US/docs/Web/API/HTMLMediaElement/abort_event\" title=\"The abort event is fired when the resource was not fully loaded, but not as the result of an error.\"><code>abort</code></a> event is raised."
      },
      {
        "name": "onanimationend",
        "overview": "An <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when an <code><a href=\"/en-US/docs/Web/Events/animationend\" title=\"/en-US/docs/Web/Events/animationend\">animationend</a></code> event is sent, indicating that a <a href=\"/en-US/docs/Web/CSS/CSS_Animations\">CSS animation</a> has stopped playing."
      },
      {
        "name": "onanimationiteration",
        "overview": "An <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when an <code><a href=\"/en-US/docs/Web/Events/animationiteration\" title=\"/en-US/docs/Web/Events/animationiteration\">animationiteration</a></code> event has been sent, indicating that a <a href=\"/en-US/docs/Web/CSS/CSS_Animations\">CSS animation</a> has begun playing a new iteration of the animation sequence."
      },
      {
        "name": "onanimationstart",
        "overview": "An <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when an <code><a href=\"/en-US/docs/Web/Events/animationstart\" title=\"/en-US/docs/Web/Events/animationstart\">animationstart</a></code> event is sent, indicating that a <a href=\"/en-US/docs/Web/CSS/CSS_Animations\">CSS animation</a> has started playing."
      },
      {
        "name": "onauxclick",
        "overview": "An <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when an <code><a href=\"/en-US/docs/Web/Events/auxclick\" title=\"/en-US/docs/Web/Events/auxclick\">auxclick</a></code> event is sent, indicating that a non-primary button has been pressed on an input device (e.g. a middle mouse button)."
      },
      {
        "name": "onblur",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/blur\" title=\"/en-US/docs/Web/Events/blur\">blur</a></code> event is raised."
      },
      {
        "name": "oncancel",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/cancel\" title=\"/en-US/docs/Web/Events/cancel\">cancel</a></code> event is raised."
      },
      {
        "name": "oncanplay",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/canplay\" title=\"/en-US/docs/Web/Events/canplay\">canplay</a></code> event is raised."
      },
      {
        "name": "oncanplaythrough",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/canplaythrough\" title=\"/en-US/docs/Web/Events/canplaythrough\">canplaythrough</a></code> event is raised."
      },
      {
        "name": "onchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/change\" title=\"/en-US/docs/Web/Events/change\">change</a></code> event is raised."
      },
      {
        "name": "onclick",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/click\" title=\"/en-US/docs/Web/Events/click\">click</a></code> event is raised."
      },
      {
        "name": "onclose",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/close\" title=\"/en-US/docs/Web/Events/close\">close</a></code> event is raised."
      },
      {
        "name": "oncontextmenu",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/contextmenu\" title=\"/en-US/docs/Web/Events/contextmenu\">contextmenu</a></code> event is raised."
      },
      {
        "name": "oncuechange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/cuechange\" title=\"/en-US/docs/Web/Events/cuechange\">cuechange</a></code> event is raised."
      },
      {
        "name": "ondblclick",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dblclick\" title=\"/en-US/docs/Web/Events/dblclick\">dblclick</a></code> event is raised."
      },
      {
        "name": "ondrag",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/drag\" title=\"/en-US/docs/Web/Events/drag\">drag</a></code> event is raised."
      },
      {
        "name": "ondragend",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dragend\" title=\"/en-US/docs/Web/Events/dragend\">dragend</a></code> event is raised."
      },
      {
        "name": "ondragenter",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dragenter\" title=\"/en-US/docs/Web/Events/dragenter\">dragenter</a></code> event is raised."
      },
      {
        "name": "ondragleave",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dragleave\" title=\"/en-US/docs/Web/Events/dragleave\">dragleave</a></code> event is raised."
      },
      {
        "name": "ondragover",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dragover\" title=\"/en-US/docs/Web/Events/dragover\">dragover</a></code> event is raised."
      },
      {
        "name": "ondragstart",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/dragstart\" title=\"/en-US/docs/Web/Events/dragstart\">dragstart</a></code> event is raised."
      },
      {
        "name": "ondrop",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/drop\" title=\"/en-US/docs/Web/Events/drop\">drop</a></code> event is raised."
      },
      {
        "name": "ondurationchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/durationchange\" title=\"/en-US/docs/Web/Events/durationchange\">durationchange</a></code> event is raised."
      },
      {
        "name": "onemptied",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/emptied\" title=\"/en-US/docs/Web/Events/emptied\">emptied</a></code> event is raised."
      },
      {
        "name": "onended",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/ended\" title=\"/en-US/docs/Web/Events/ended\">ended</a></code> event is raised."
      },
      {
        "name": "onerror",
        "overview": "Is an <a class=\"new\" href=\"/en-US/docs/Web/API/OnErrorEventHandler\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>OnErrorEventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/error\" title=\"/en-US/docs/Web/Events/error\">error</a></code> event is raised."
      },
      {
        "name": "onfocus",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/focus\" title=\"/en-US/docs/Web/Events/focus\">focus</a></code> event is raised."
      },
      {
        "name": "onformdata",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> for processing <code><a class=\"new\" href=\"/en-US/docs/Web/Events/formdata\" rel=\"nofollow\" title=\"/en-US/docs/Web/Events/formdata\">formdata</a></code> events, fired after the entry list representing the form's data is constructed."
      },
      {
        "name": "ongotpointercapture",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/gotpointercapture\" title=\"/en-US/docs/Web/Events/gotpointercapture\">gotpointercapture</a></code> event type is raised."
      },
      {
        "name": "oninput",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/input\" title=\"/en-US/docs/Web/Events/input\">input</a></code> event is raised."
      },
      {
        "name": "oninvalid",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/invalid\" title=\"/en-US/docs/Web/Events/invalid\">invalid</a></code> event is raised."
      },
      {
        "name": "onkeydown",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/keydown\" title=\"/en-US/docs/Web/Events/keydown\">keydown</a></code> event is raised."
      },
      {
        "name": "onkeypress",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/keypress\" title=\"/en-US/docs/Web/Events/keypress\">keypress</a></code> event is raised."
      },
      {
        "name": "onkeyup",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/keyup\" title=\"/en-US/docs/Web/Events/keyup\">keyup</a></code> event is raised."
      },
      {
        "name": "onload",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/load\" title=\"/en-US/docs/Web/Events/load\">load</a></code> event is raised."
      },
      {
        "name": "onloadeddata",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/loadeddata\" title=\"/en-US/docs/Web/Events/loadeddata\">loadeddata</a></code> event is raised."
      },
      {
        "name": "onloadedmetadata",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/loadedmetadata\" title=\"/en-US/docs/Web/Events/loadedmetadata\">loadedmetadata</a></code> event is raised."
      },
      {
        "name": "onloadstart",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/loadstart\" title=\"/en-US/docs/Web/Events/loadstart\">loadstart</a></code> event is raised (when progress has begun on the loading of a resource.)"
      },
      {
        "name": "onlostpointercapture",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/lostpointercapture\" title=\"/en-US/docs/Web/Events/lostpointercapture\">lostpointercapture</a></code> event type is raised."
      },
      {
        "name": "onmousedown",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mousedown\" title=\"/en-US/docs/Web/Events/mousedown\">mousedown</a></code> event is raised."
      },
      {
        "name": "onmouseenter",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mouseenter\" title=\"/en-US/docs/Web/Events/mouseenter\">mouseenter</a></code> event is raised."
      },
      {
        "name": "onmouseleave",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mouseleave\" title=\"/en-US/docs/Web/Events/mouseleave\">mouseleave</a></code> event is raised."
      },
      {
        "name": "onmousemove",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mousemove\" title=\"/en-US/docs/Web/Events/mousemove\">mousemove</a></code> event is raised."
      },
      {
        "name": "onmouseout",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mouseout\" title=\"/en-US/docs/Web/Events/mouseout\">mouseout</a></code> event is raised."
      },
      {
        "name": "onmouseover",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mouseover\" title=\"/en-US/docs/Web/Events/mouseover\">mouseover</a></code> event is raised."
      },
      {
        "name": "onmouseup",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/mouseup\" title=\"/en-US/docs/Web/Events/mouseup\">mouseup</a></code> event is raised."
      },
      {
        "name": "onpause",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pause\" title=\"/en-US/docs/Web/Events/pause\">pause</a></code> event is raised."
      },
      {
        "name": "onplay",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/play\" title=\"/en-US/docs/Web/Events/play\">play</a></code> event is raised."
      },
      {
        "name": "onplaying",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/playing\" title=\"/en-US/docs/Web/Events/playing\">playing</a></code> event is raised."
      },
      {
        "name": "onpointercancel",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointercancel\" title=\"/en-US/docs/Web/Events/pointercancel\">pointercancel</a></code> event is raised."
      },
      {
        "name": "onpointerdown",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerdown\" title=\"/en-US/docs/Web/Events/pointerdown\">pointerdown</a></code> event is raised."
      },
      {
        "name": "onpointerenter",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerenter\" title=\"/en-US/docs/Web/Events/pointerenter\">pointerenter</a></code> event is raised."
      },
      {
        "name": "onpointerleave",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerleave\" title=\"/en-US/docs/Web/Events/pointerleave\">pointerleave</a></code> event is raised."
      },
      {
        "name": "onpointermove",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointermove\" title=\"/en-US/docs/Web/Events/pointermove\">pointermove</a></code> event is raised."
      },
      {
        "name": "onpointerout",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerout\" title=\"/en-US/docs/Web/Events/pointerout\">pointerout</a></code> event is raised."
      },
      {
        "name": "onpointerover",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerover\" title=\"/en-US/docs/Web/Events/pointerover\">pointerover</a></code> event is raised."
      },
      {
        "name": "onpointerup",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/pointerup\" title=\"/en-US/docs/Web/Events/pointerup\">pointerup</a></code> event is raised."
      },
      {
        "name": "onprogress",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/progress\" title=\"/en-US/docs/Web/Events/progress\">progress</a></code> event is raised."
      },
      {
        "name": "onratechange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/ratechange\" title=\"/en-US/docs/Web/Events/ratechange\">ratechange</a></code> event is raised."
      },
      {
        "name": "onreset",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/reset\" title=\"/en-US/docs/Web/Events/reset\">reset</a></code> event is raised."
      },
      {
        "name": "onresize",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/resize\" title=\"/en-US/docs/Web/Events/resize\">resize</a></code> event is raised."
      },
      {
        "name": "onscroll",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/scroll\" title=\"/en-US/docs/Web/Events/scroll\">scroll</a></code> event is raised."
      },
      {
        "name": "onseeked",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/seeked\" title=\"/en-US/docs/Web/Events/seeked\">seeked</a></code> event is raised."
      },
      {
        "name": "onseeking",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/seeking\" title=\"/en-US/docs/Web/Events/seeking\">seeking</a></code> event is raised."
      },
      {
        "name": "onselect",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/select\" title=\"/en-US/docs/Web/Events/select\">select</a></code> event is raised."
      },
      {
        "name": "onselectionchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/selectionchange\" title=\"/en-US/docs/Web/Events/selectionchange\">selectionchange</a></code> event is raised, i.e. when the text selected on a web page changes."
      },
      {
        "name": "onselectstart",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/selectionchange\" title=\"/en-US/docs/Web/Events/selectionchange\">selectionchange</a></code> event is raised, i.e. when the user starts to make a new text selection on a web page."
      },
      {
        "name": "onstalled",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/stalled\" title=\"/en-US/docs/Web/Events/stalled\">stalled</a></code> event is raised."
      },
      {
        "name": "onsubmit",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/submit\" title=\"/en-US/docs/Web/Events/submit\">submit</a></code> event is raised."
      },
      {
        "name": "onsuspend",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/suspend\" title=\"/en-US/docs/Web/Events/suspend\">suspend</a></code> event is raised."
      },
      {
        "name": "ontimeupdate",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/timeupdate\" title=\"/en-US/docs/Web/Events/timeupdate\">timeupdate</a></code> event is raised."
      },
      {
        "name": "ontouchcancel",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/touchcancel\" title=\"/en-US/docs/Web/Events/touchcancel\">touchcancel</a></code> event is raised."
      },
      {
        "name": "ontouchend",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/touchend\" title=\"/en-US/docs/Web/Events/touchend\">touchend</a></code> event is raised."
      },
      {
        "name": "ontouchmove",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/touchmove\" title=\"/en-US/docs/Web/Events/touchmove\">touchmove</a></code> event is raised."
      },
      {
        "name": "ontouchstart",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/touchstart\" title=\"/en-US/docs/Web/Events/touchstart\">touchstart</a></code> event is raised."
      },
      {
        "name": "ontransitionend",
        "overview": "An <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when a <code><a href=\"/en-US/docs/Web/Events/transitionend\" title=\"/en-US/docs/Web/Events/transitionend\">transitionend</a></code> event is sent, indicating that a <a href=\"/en-US/docs/Web/CSS/CSS_Transitions\">CSS transition</a> has finished playing."
      },
      {
        "name": "onvolumechange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/volumechange\" title=\"/en-US/docs/Web/Events/volumechange\">volumechange</a></code> event is raised."
      },
      {
        "name": "onwaiting",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/waiting\" title=\"/en-US/docs/Web/Events/waiting\">waiting</a></code> event is raised."
      },
      {
        "name": "onwheel",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/wheel\" title=\"/en-US/docs/Web/Events/wheel\">wheel</a></code> event is raised."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLAnchorElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLAnchorElement</code></strong> interface represents hyperlink elements and provides special properties and methods (beyond those of the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to <code><a href=\\\"/en-US/docs/Web/HTML/Element/a\\\">&lt;a&gt;</a></code> element; not to be confused with <code><a href=\\\"/en-US/docs/Web/HTML/Element/link\\\">&lt;link&gt;</a></code>, which is represented by <code><a href=\\\"/en-US/docs/Web/API/HTMLLinkElement\\\">HTMLLinkElement</a></code>)\"]",
    "properties": [
      {
        "name": "download",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it."
      },
      {
        "name": "hreflang",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-hreflang\">hreflang</a></code> HTML attribute, indicating the language of the linked resource."
      },
      {
        "name": "referrerPolicy",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute indicating which referrer to use."
      },
      {
        "name": "rel",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-rel\">rel</a></code> HTML attribute, specifying the relationship of the target object to the linked object."
      },
      {
        "name": "relList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-rel\">rel</a></code> HTML attribute, as a list of tokens."
      },
      {
        "name": "target",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-target\">target</a></code> HTML attribute, indicating where to display the linked resource."
      },
      {
        "name": "text",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> being a synonym for the <a href=\"/en-US/docs/Web/API/Node/textContent\" title=\"The textContent property of the Node interface represents the text content of the node and its descendants.\"><code>Node.textContent</code></a> property."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/a#attr-type\">type</a></code> HTML attribute, indicating the MIME type of the linked resource."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLAreaElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLAreaElement</code></strong> interface provides special properties and methods (beyond those of the regular object <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/area\\\" title=\\\"The HTML <area> element defines a hot-spot region on an image, and optionally associates it with a hypertext link. This element is used only within a <map> element.\\\"><code>&lt;area&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "alt",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-alt\">alt</a></code> HTML attribute, containing alternative text for the element."
      },
      {
        "name": "coords",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-coords\">coords</a></code> HTML attribute, containing coordinates to define the hot-spot region."
      },
      {
        "name": "download",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it."
      },
      {
        "name": "hreflang",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-hreflang\">hreflang</a></code> HTML attribute, indicating the language of the linked resource."
      },
      {
        "name": "noHref",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> flag indicating if the area is inactive (<code>true</code>) or active (<code>false</code>)."
      },
      {
        "name": "referrerPolicy",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute indicating which referrer to use when fetching the linked resource."
      },
      {
        "name": "rel",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-rel\">rel</a></code> HTML attribute, indicating relationships of the current document to the linked resource."
      },
      {
        "name": "relList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-rel\">rel</a></code> HTML attribute, indicating relationships of the current document to the linked resource, as a list of tokens."
      },
      {
        "name": "shape",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-shape\">shape</a></code> HTML attribute, indicating the shape of the hot-spot, limited to known values."
      },
      {
        "name": "target",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-target\">target</a></code> HTML attribute, indicating the browsing context in which to open the linked resource."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/area#attr-type\">type</a></code> HTML attribute, indicating the MIME type of the linked resource."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLAudioElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLAudioElement</code></strong> interface provides access to the properties of <a href=\\\"/en-US/docs/Web/HTML/Element/audio\\\" title=\\\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\\\"><code>&lt;audio&gt;</code></a> elements, as well as methods to manipulate them.</span> It's based on, and inherits properties and methods from,&nbsp;the <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement\\\" title=\\\"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video.\\\"><code>HTMLMediaElement</code></a> interface.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLBRElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLBRElement</code></strong> interface represents a HTML line break element (<a href=\\\"/en-US/docs/Web/HTML/Element/br\\\" title=\\\"The HTML <br> element produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.\\\"><code>&lt;br&gt;</code></a>). It inherits from <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a>.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLBaseElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLBaseElement</code></strong> interface contains the base URI&nbsp;for a document. This object inherits all of the properties and methods as described in the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "href",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/base#attr-href\">href</a></code> HTML attribute, containing a base URL for relative URLs in the document."
      },
      {
        "name": "target",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/base#attr-target\">target</a></code> HTML attribute, containing a default target browsing context or frame for elements that do not have a target reference specified."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLBodyElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLBodyElement</code></strong> interface provides special properties (beyond those inherited from the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/body\\\" title=\\\"The HTML <body> Element represents the content of an HTML&nbsp;document. There can be only one <body> element in a document.\\\"><code>&lt;body&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "aLink",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the color of active hyperlinks."
      },
      {
        "name": "background",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the description of the location of the background image resource. Note that this is not an URI, though some older version of some browsers do expect it."
      },
      {
        "name": "bgColor",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the background color for the document."
      },
      {
        "name": "link",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the color of unvisited links."
      },
      {
        "name": "text",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the foreground color of text."
      },
      {
        "name": "vLink",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the color of visited links."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLButtonElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLButtonElement</code></strong> interface provides properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/button\\\" title=\\\"The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.\\\"><code>&lt;button&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "autofocus",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether or not the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified."
      },
      {
        "name": "disabled",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether or not the control is disabled, meaning that it does not accept any clicks."
      },
      {
        "name": "form",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a> reflecting the form that this button is associated with. If the button is a descendant of a form element, then this attribute is the ID of that form element.<br>\n If the button is not a descendant of a form element, then the attribute can be the ID of any form element in the same document it is related to, or the <code>null</code> value if none matches."
      },
      {
        "name": "formAction",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the URI of a resource that processes information submitted by the button. If specified, this attribute overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-action\">action</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element that owns this element."
      },
      {
        "name": "formEnctype",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the type of content that is used to submit the form to the server. If specified, this attribute overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-enctype\">enctype</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element that owns this element."
      },
      {
        "name": "formMethod",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the HTTP method that the browser uses to submit the form. If specified, this attribute overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-method\">method</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element that owns this element."
      },
      {
        "name": "formNoValidate",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating that the form is not to be validated when it is submitted. If specified, this attribute overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-novalidate\">novalidate</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element that owns this element."
      },
      {
        "name": "formTarget",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-target\">target</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element that owns this element."
      },
      {
        "name": "labels",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> that represents a list of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements that are labels for this button."
      },
      {
        "name": "name",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the name of the object when submitted with a form. <span class=\"inlineIndicator htmlVer htmlVerInline\"><a href=\"/en-US/docs/HTML/HTML5\">HTML5</a></span> If specified, it must not be the empty string."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating the behavior of the button. This is an enumerated attribute with the following possible values:\n <ul>\n  <li><code>\"submit\"</code>: The button submits the form. This is the default value if the attribute is not specified, <span class=\"inlineIndicator htmlVer htmlVerInline\"><a href=\"/en-US/docs/HTML/HTML5\">HTML5</a></span> or if it is dynamically changed to an empty or invalid value.</li>\n  <li><code>\"reset\"</code>: The button resets the form.</li>\n  <li><code>\"button\"</code>: The button does nothing.</li>\n  <li><code>\"menu\"</code>: The button displays a menu. <span class=\"icon-only-inline\" title=\"This is an experimental API that should not be used in production code.\"><i class=\"icon-beaker\"> </i></span></li>\n </ul>\n "
      },
      {
        "name": "validationMessage",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<code>willValidate</code> is <code>false</code>), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> representing the validity states that this button is in."
      },
      {
        "name": "value",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the current form control value of the button."
      },
      {
        "name": "willValidate",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether the button is a candidate for constraint validation. It is <code>false</code> if any conditions bar it from constraint validation, including: its <code>type</code> property is <code>reset</code> or <code>button</code>; it has a <a href=\"/en-US/docs/Web/HTML/Element/datalist\">datalist</a> ancestor; or the <code>disabled</code> property is set to <code>true</code>."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Not supported for reset or button elements."
      },
      {
        "name": "reportValidity",
        "overview": "Not supported for reset or button elements."
      },
      {
        "name": "setCustomValidity",
        "overview": "Not supported for reset or button elements."
      }
    ]
  },
  {
    "name": "HTMLCanvasElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLCanvasElement</code></strong> interface provides properties and methods for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/canvas\\\" title=\\\"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.\\\"><code>&lt;canvas&gt;</code></a> elements. The <code>HTMLCanvasElement</code> interface also inherits the properties and methods of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "height",
        "overview": "Is a positive <code>integer</code> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/canvas#attr-height\">height</a></code> HTML attribute of the <a href=\"/en-US/docs/Web/HTML/Element/canvas\" title=\"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.\"><code>&lt;canvas&gt;</code></a> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of <code>150</code> is used."
      },
      {
        "name": "width",
        "overview": "Is a positive <code>integer</code> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/canvas#attr-width\">width</a></code> HTML attribute of the <a href=\"/en-US/docs/Web/HTML/Element/canvas\" title=\"Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.\"><code>&lt;canvas&gt;</code></a> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of <code>300</code> is used."
      }
    ],
    "methods": [
      {
        "name": "captureStream",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/CanvasCaptureMediaStream\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>CanvasCaptureMediaStream</code></a> that is a real-time video capture of the surface of the canvas."
      },
      {
        "name": "getContext",
        "overview": "Returns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with <code>\"2d\"</code> returns a <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\" title=\"The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element. It is used for drawing shapes, text, images, and other objects.\"><code>CanvasRenderingContext2D</code></a> object, whereas calling it with <code>\"webgl\"</code> (or <code>\"experimental-webgl\"</code>) returns a <a href=\"/en-US/docs/Web/API/WebGLRenderingContext\" title=\"The WebGLRenderingContext interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element.\"><code>WebGLRenderingContext</code></a> object. This context is only available on browsers that implement <a href=\"/en-US/docs/Web/WebGL\">WebGL</a>."
      },
      {
        "name": "toBlob",
        "overview": "Creates a <a href=\"/en-US/docs/Web/API/Blob\" title=\"A Blob object represents a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\"><code>Blob</code></a> object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent."
      },
      {
        "name": "toDataURL",
        "overview": "Returns a data-URL containing a representation of the image in the format specified by the <code>type</code> parameter (defaults to <code>png</code>). The returned image is in a resolution of 96dpi."
      },
      {
        "name": "transferControlToOffscreen",
        "overview": "Transfers control to an <a href=\"/en-US/docs/Web/API/OffscreenCanvas\" title=\"The OffscreenCanvas interface provides a canvas that can be rendered off screen. It is available in both&nbsp;the window and&nbsp;worker contexts.\"><code>OffscreenCanvas</code></a> object, either on the main thread or on a worker."
      }
    ]
  },
  {
    "name": "HTMLCollection",
    "category": "DOMCore",
    "overview": "[\"The <strong><code>HTMLCollection</code></strong> interface represents a generic collection (array-like object similar to <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Functions/arguments\\\" title=\\\"arguments is an Array-like object accessible inside functions that contains the values of the arguments passed to that function.\\\"><code>arguments</code></a>) of elements (in document order) and offers methods and properties for selecting from the list.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Returns the number of items in the collection."
      }
    ],
    "methods": [
      {
        "name": "item",
        "overview": "Returns the specific node at the given zero-based <code>index</code> into the list. Returns <code>null</code> if the <code>index</code> is out of range."
      },
      {
        "name": "namedItem",
        "overview": "Returns the specific node whose ID or, as a fallback, name matches the string specified by <code>name</code>. Matching by name is only done as a last resort, only in HTML, and only if the referenced element supports the <code>name</code> attribute. Returns <code>null</code> if no node exists by the given name."
      }
    ]
  },
  {
    "name": "HTMLCollectionBase",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "length",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "item",
        "overview": null
      }
    ]
  },
  {
    "name": "HTMLDListElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLDListElement</code></strong> interface provides special properties (beyond those of the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating definition list (<a href=\\\"/en-US/docs/Web/HTML/Element/dl\\\" title=\\\"The HTML <dl> element represents a description list. The element encloses a list of groups of terms (specified using the <dt> element) and descriptions (provided by <dd> elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).\\\"><code>&lt;dl&gt;</code></a>) elements.\"]",
    "properties": [
      {
        "name": "compact",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating that spacing between list items should be reduced."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDataElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLDataElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/data\\\" title=\\\"The HTML <data> element links a given content with a machine-readable translation. If the content is time- or date-related, the <time> element must be used.\\\"><code>&lt;data&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "value",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/data#attr-value\">value</a></code> HTML attribute, containing a machine-readable form of the element's value."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDataListElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLDataListElement</code></strong> interface provides special properties (beyond the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) to manipulate <a href=\\\"/en-US/docs/Web/HTML/Element/datalist\\\" title=\\\"The HTML <datalist> element contains a set of <option> elements that represent the permissible or recommended options available to choose from within other controls.\\\"><code>&lt;datalist&gt;</code></a> elements and their content.\"]",
    "properties": [
      {
        "name": "options",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> representing a collection of the contained option elements."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDetailsElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLDetailsElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/details\\\" title=\\\"The HTML Details Element (<details>) creates a disclosure widget in which information is visible only when the widget is toggled into an &quot;open&quot; state.\\\"><code>&lt;details&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "open",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/details#attr-open\">open</a></code> HTML attribute, indicating whether or not the element’s contents (not counting the <a href=\"/en-US/docs/Web/HTML/Element/summary\" title=\"The HTML Disclosure Summary element (<summary>) element specifies a summary, caption, or legend for a <details> element's disclosure box.\"><code>&lt;summary&gt;</code></a>) is to be shown to the user."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDialogElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>This is an <a href=\\\"/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\\\">experimental technology</a></strong><br>Check the <a href=\\\"#Browser_compatibility\\\">Browser compatibility table</a> carefully before using this in production.\"]",
    "properties": [
      {
        "name": "open",
        "overview": "A <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/dialog#attr-open\">open</a></code> HTML attribute, indicating whether the dialog is available for interaction."
      },
      {
        "name": "returnValue",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that sets or returns the return value for the dialog."
      }
    ],
    "methods": [
      {
        "name": "close",
        "overview": "Closes the dialog. An optional <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> may be passed as an argument, updating the <code>returnValue</code> of the the dialog."
      },
      {
        "name": "show",
        "overview": "Displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog."
      },
      {
        "name": "showModal",
        "overview": "Displays the dialog as a modal, over the top of any other dialogs that might be present. Interaction outside the dialog is blocked."
      }
    ]
  },
  {
    "name": "HTMLDirectoryElement",
    "category": "HTMLElements",
    "overview": null,
    "properties": [
      {
        "name": "compact",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDivElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLDivElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/div\\\" title=\\\"The HTML Content Division element (<div>) is the generic container for flow content. It has no effect on the content or layout until styled using CSS.\\\"><code>&lt;div&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, <code>\"justify\"</code>, and <code>\"center\"</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLDocument",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLDocument</code></strong> interface, which may be accessed through the <code>Window.HTMLDocument</code> property, extends the <code>Window.HTMLDocument</code> property to include methods and properties that are specific to <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/HTML\\\" title=\\\"HTML: HTML (HyperText Markup Language) is a descriptive language that specifies webpage structure.\\\">HTML</a> documents.</span>\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLElement</code></strong> interface represents any <a href=\\\"/en-US/docs/Web/HTML\\\" title=\\\"/en-US/docs/Web/HTML\\\">HTML</a> element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"]",
    "properties": [
      {
        "name": "accessKey",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the access key assigned to the element."
      },
      {
        "name": "autoCapitalize",
        "overview": null
      },
      {
        "name": "dir",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>, reflecting the <code>dir</code> global attribute, representing the directionality of the element. Possible values are <code>\"ltr\"</code>, <code>\"rtl\"</code>, and <code>\"auto\"</code>."
      },
      {
        "name": "draggable",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating if the element can be dragged."
      },
      {
        "name": "hidden",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating if the element is hidden or not."
      },
      {
        "name": "inert",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating whether the user agent must act as though the given node is absent for the purposes of user interaction events, in-page text searches (\"find in page\"), and text selection."
      },
      {
        "name": "innerText",
        "overview": "Represents the \"rendered\" text content of a node and its descendants. As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied it to the clipboard."
      },
      {
        "name": "lang",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the language of an element's attributes, text, and element contents."
      },
      {
        "name": "offsetHeight",
        "overview": "Returns a <code>double</code> containing the height of an element, relative to the layout."
      },
      {
        "name": "offsetLeft",
        "overview": "Returns a <code>double</code>, the distance from this element's left border to its <code>offsetParent</code>'s left border."
      },
      {
        "name": "offsetParent",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> that is the element from which all offset calculations are currently computed."
      },
      {
        "name": "offsetTop",
        "overview": "Returns a <code>double</code>, the distance from this element's top border to its <code>offsetParent</code>'s top border."
      },
      {
        "name": "offsetWidth",
        "overview": "Returns a <code>double</code> containing the width of an element, relative to the layout."
      },
      {
        "name": "spellcheck",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that controls <a href=\"/en-US/docs/HTML/Controlling_spell_checking_in_HTML_forms\" title=\"en/Controlling_spell_checking_in_HTML_forms\">spell-checking</a>. It is present on all HTML elements, though it doesn't have an effect on all of them."
      },
      {
        "name": "title",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the text that appears in a popup box when mouse is over the element."
      },
      {
        "name": "translate",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> representing the translation."
      }
    ],
    "methods": [
      {
        "name": "click",
        "overview": "Sends a mouse click event to the element."
      }
    ]
  },
  {
    "name": "HTMLEmbedElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLEmbedElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/embed\\\" title=\\\"The HTML <embed> element embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.\\\"><code>&lt;embed&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, <code>\"center\"</code>, and <code>\"justify\"</code>."
      },
      {
        "name": "height",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/embed#attr-height\">height</a></code> HTML attribute, containing the displayed height of the resource."
      },
      {
        "name": "name",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the name of the embedded object."
      },
      {
        "name": "src",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/embed#attr-src\">src</a></code> HTML attribute, containing the address of the resource."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/embed#attr-type\">type</a></code> HTML attribute, containing the type of the resource."
      },
      {
        "name": "width",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/embed#attr-width\">width</a></code> HTML attribute, containing the displayed width of the resource."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLFieldSetElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLFieldSetElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/fieldset\\\" title=\\\"The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.\\\"><code>&lt;fieldset&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "disabled",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/fieldset#attr-disabled\">disabled</a></code> HTML attribute, indicating whether the user can interact with the control."
      },
      {
        "name": "elements",
        "overview": "The elements belonging to this field set. The type of this property depends on the version of the spec that is implemented by the browser."
      },
      {
        "name": "form",
        "overview": "An <a href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\" title=\"The HTMLFormControlsCollection interface represents a collection of HTML form control elements. \"><code>HTMLFormControlsCollection</code></a> or <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> referencing the containing form element, if this element is in a form.<br>\n If the field set is not a descendant of a form element, then the attribute can be the ID of any form element in the same document it is related to, or the <code>null</code> value if none matches."
      },
      {
        "name": "name",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/fieldset#attr-name\">name</a></code> HTML attribute, containing the name of the field set, used for submitting the form."
      },
      {
        "name": "type",
        "overview": "The <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> <code>\"fieldset\"</code>."
      },
      {
        "name": "validationMessage",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a localized message that describes the validation constraints that the element does not satisfy (if any). This is the empty string if the element is not a candidate for constraint validation (<code>willValidate</code> is <code>false</code>), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "A <a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> representing the validity states that this element is in."
      },
      {
        "name": "willValidate",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> <code>false</code>, because <a href=\"/en-US/docs/Web/HTML/Element/fieldset\" title=\"The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.\"><code>&lt;fieldset&gt;</code></a> objects are never candidates for constraint validation."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Always returns <code>true</code> because <a href=\"/en-US/docs/Web/HTML/Element/fieldset\" title=\"The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.\"><code>&lt;fieldset&gt;</code></a> objects are never candidates for constraint validation."
      },
      {
        "name": "reportValidity",
        "overview": "Always returns <code>true</code> because <a href=\"/en-US/docs/Web/HTML/Element/fieldset\" title=\"The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.\"><code>&lt;fieldset&gt;</code></a> objects are never candidates for constraint validation."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets a custom validity message for the field set. If this message is not the empty string, then the field set is suffering from a custom validity error, and does not validate."
      }
    ]
  },
  {
    "name": "HTMLFontElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>Obsolete</strong><br>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.\"]",
    "properties": [
      {
        "name": "color",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/font#attr-color\">color</a></code> HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format."
      },
      {
        "name": "face",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/font#attr-face\">face</a></code> HTML attribute, containing a comma-separated list of one or more font names."
      },
      {
        "name": "size",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/font#attr-size\">size</a></code> HTML attribute, containing either a font size number ranging from 1 to 7 or a relative size to the <code><a href=\"/en-US/docs/Web/HTML/Element/basefont#attr-size\">size</a></code> attribute of the <a href=\"/en-US/docs/Web/HTML/Element/basefont\" title=\"The obsolete HTML Base Font element (<basefont>) sets a default font face, size, and color for the other elements which are descended from its parent element.\"><code>&lt;basefont&gt;</code></a> element, for example -2 or +1."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLFormControlsCollection",
    "category": "FormSupport",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLFormControlsCollection</code></strong> interface represents a <em>collection</em> of HTML <em>form control elements</em>. </span>It represents the lists returned by the <a href=\\\"/en-US/docs/Web/API/HTMLFormElement\\\" title=\\\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\\\"><code>HTMLFormElement</code></a> interface's <a href=\\\"/en-US/docs/Web/API/HTMLFormElement/elements\\\" title=\\\"The HTMLFormElement property elements returns an HTMLFormControlsCollection listing all the form controls contained in the <form> element.\\\"><code>elements</code></a> property and the <a href=\\\"/en-US/docs/Web/API/HTMLFieldSetElement\\\" title=\\\"The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <fieldset> elements.\\\"><code>HTMLFieldSetElement</code></a> interface's&nbsp;<a class=\\\"new\\\" href=\\\"/en-US/docs/Web/API/HTMLFieldSetElement/elements\\\" rel=\\\"nofollow\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>elements</code></a> property.\",\"This interface replaces one method from <a href=\\\"/en-US/docs/Web/API/HTMLCollection\\\" title=\\\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\\\"><code>HTMLCollection</code></a>, on which it is based.\"]",
    "properties": [],
    "methods": [
      {
        "name": "namedItem",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/RadioNodeList\" title=\"The RadioNodeList interface represents a collection of radio elements in a <form> or a <fieldset> element.\"><code>RadioNodeList</code></a> or the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> in the collection whose <code>name</code> or <code>id</code> matches&nbsp;the specified name, or <code>null</code> if no nodes match. Note that this version of <code>namedItem()</code> hide the one inherited from <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a>. Like that one, in JavaScript, using the array bracket syntax with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\" title=\"The String global object is a constructor for strings or a sequence of characters.\"><code>String</code></a>, like <code><em>collection</em>[\"value\"]</code> is equivalent to <code><em>collection</em>.namedItem(\"value\")</code>."
      }
    ]
  },
  {
    "name": "HTMLFormElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>HTMLFormElement</strong></code> interface represents a <a href=\\\"/en-US/docs/Web/HTML/Element/form\\\" title=\\\"The HTML <form> element represents a document section containing interactive controls for submitting information.\\\"><code>&lt;form&gt;</code></a> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.</span>\"]",
    "properties": [
      {
        "name": "acceptCharset",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-accept-charset\">accept-charset</a></code>&nbsp;HTML&nbsp;attribute, representing the character encoding that the server accepts."
      },
      {
        "name": "action",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-action\">action</a></code> HTML attribute, containing the URI&nbsp;of a program that processes the information submitted by the form."
      },
      {
        "name": "autocomplete",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-autocomplete\">autocomplete</a></code> HTML&nbsp;attribute, indicating whether the controls in this form can have their values automatically populated by the browser."
      },
      {
        "name": "elements",
        "overview": "A <a href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\" title=\"The HTMLFormControlsCollection interface represents a collection of HTML form control elements. \"><code>HTMLFormControlsCollection</code></a> holding all form controls belonging to this form element."
      },
      {
        "name": "encoding",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-enctype\">enctype</a></code>&nbsp;HTML&nbsp;attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set. The two properties are synonyms."
      },
      {
        "name": "enctype",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-enctype\">enctype</a></code>&nbsp;HTML&nbsp;attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set. The two properties are synonyms."
      },
      {
        "name": "length",
        "overview": "A <code>long</code> reflecting&nbsp; the number of controls in the form."
      },
      {
        "name": "method",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-method\">method</a></code>&nbsp;HTML&nbsp;attribute, indicating the HTTP&nbsp;method used to submit the form. Only specified values can be set."
      },
      {
        "name": "name",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-name\">name</a></code>&nbsp;HTML&nbsp;attribute, containing the name of the form."
      },
      {
        "name": "noValidate",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the value of the form's &nbsp;<code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-novalidate\">novalidate</a></code> HTML attribute, indicating whether the form should not be validated."
      },
      {
        "name": "target",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form's <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-target\">target</a></code> HTML attribute, indicating where to display the results received from submitting the form."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Returns <code>true</code> if the element's child controls are subject to <a href=\"/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\">constraint validation</a> and satisfy those contraints; returns <code>false</code> if some controls do not satisfy their constraints. Fires an event named <code><a href=\"/en-US/docs/Web/Events/invalid\" title=\"/en-US/docs/Web/Events/invalid\">invalid</a></code> at any control that does not satisfy its constraints; such controls are considered invalid if the event is not canceled. It is up to the programmer to decide how to respond to <code>false</code>."
      },
      {
        "name": "reportValidity",
        "overview": "Returns <code>true</code> if the element's child controls satisfy their <a href=\"/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\">validation constraints</a>. When <code>false</code> is returned, cancelable <code><a href=\"/en-US/docs/Web/Events/invalid\" title=\"/en-US/docs/Web/Events/invalid\">invalid</a></code> events are fired for each invalid child and validation problems are reported to the user."
      },
      {
        "name": "requestSubmit",
        "overview": "Requests that the form be submitted using the specified submit button and its corresponding configuration."
      },
      {
        "name": "reset",
        "overview": "Resets the form to its initial state."
      },
      {
        "name": "submit",
        "overview": "Submits the form to the server."
      }
    ]
  },
  {
    "name": "HTMLFrameElement",
    "category": "HTMLElements",
    "overview": null,
    "properties": [
      {
        "name": "contentDocument",
        "overview": null
      },
      {
        "name": "contentWindow",
        "overview": null
      },
      {
        "name": "frameBorder",
        "overview": null
      },
      {
        "name": "longDesc",
        "overview": null
      },
      {
        "name": "marginHeight",
        "overview": null
      },
      {
        "name": "marginWidth",
        "overview": null
      },
      {
        "name": "name",
        "overview": null
      },
      {
        "name": "noResize",
        "overview": null
      },
      {
        "name": "scrolling",
        "overview": null
      },
      {
        "name": "src",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLFrameSetElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>Obsolete</strong><br>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.\"]",
    "properties": [
      {
        "name": "cols",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> structured as a comma-seperated list&nbsp;specifing&nbsp;the width of each column inside&nbsp;a frameset."
      },
      {
        "name": "rows",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> structured as a comma-seperated list&nbsp;specifing&nbsp;the height of each column inside&nbsp;a frameset."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLHRElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLHRElement</code></strong> interface provides special properties (beyond those of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/hr\\\" title=\\\"The HTML <hr> element represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.\\\"><code>&lt;hr&gt;</code></a> elements.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLHeadElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLHeadElement</code></strong> interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLHeadingElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLHeadingElement</code></strong> interface represents the different heading elements. It inherits methods and properties from the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated attribute indicating alignment of the heading with respect to the surrounding context.&nbsp;The possible values are&nbsp;<code>\"left\"</code>,&nbsp;<code>\"right\"</code>,&nbsp;<code>\"justify\"</code>, and&nbsp;<code>\"center\"</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLHtmlElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLHtmlElement</code></strong> interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\",\"You can retrieve the <code>HTMLHtmlElement</code> object for a given document by reading the value of the <a href=\\\"/en-US/docs/Web/API/Document/documentElement\\\" title=\\\"Document.documentElement returns the Element that is the root element of the document (for example, the <html> element for HTML documents).\\\"><code>document.documentElement</code></a> property.\"]",
    "properties": [
      {
        "name": "version",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the version of the HTML Document Type Definition (DTD) that governs this document. This property should not be used any more as it is non-conforming. Simply omit it."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLHyperlinkElementUtils",
    "category": "CherryPicked",
    "overview": "[\"<strong>This is an <a href=\\\"/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\\\">experimental technology</a></strong><br>Check the <a href=\\\"#Browser_compatibility\\\">Browser compatibility table</a> carefully before using this in production.\"]",
    "properties": [
      {
        "name": "hash",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing a <code>'#'</code> followed by the fragment identifier of the URL."
      },
      {
        "name": "host",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the host, that is the <em>hostname</em>, and then, if the <em>port</em> of the URL is not empty (which can happen because it was not specified or because it was specified to be the default port of the URL's scheme), a <code>':'</code>, and the <em>port</em> of the URL."
      },
      {
        "name": "hostname",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the domain of the URL."
      },
      {
        "name": "href",
        "overview": "This a stringifier property that returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the whole URL, and allows the href to be updated."
      },
      {
        "name": "origin",
        "overview": "This returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the origin of the URL (that is its scheme, its domain and its port)."
      },
      {
        "name": "password",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the password specified before the domain name."
      },
      {
        "name": "pathname",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing an initial <code>'/'</code> followed by the path of the URL."
      },
      {
        "name": "port",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the port number of the URL."
      },
      {
        "name": "protocol",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the protocol scheme of the URL, including the final <code>':'</code>."
      },
      {
        "name": "search",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing a <code>'?'</code> followed by the parameters of the URL."
      },
      {
        "name": "username",
        "overview": "This is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the username specified before the domain name."
      }
    ],
    "methods": [
      {
        "name": "toString",
        "overview": "This returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the whole URL. It is a synonym for <a href=\"/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href\" title=\"The HTMLHyperlinkElementUtils.href property is a stringifier that returns a USVString containing the whole URL, and allows the href to be updated.\"><code>HTMLHyperlinkElementUtils.href</code></a>, though it can't be used to modify the value."
      }
    ]
  },
  {
    "name": "HTMLIFrameElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLIFrameElement</code></strong> interface provides special properties and methods (beyond those of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that specifies the alignment of the frame with respect to the surrounding context."
      },
      {
        "name": "allow",
        "overview": "Is a list of origins the the frame is allowed to display content from. This attribute also accepts the values <code>self</code> and&nbsp;<code>src</code> which represent&nbsp;the origin in the iframe's src attribute. The default value is <code>src</code>."
      },
      {
        "name": "allowFullscreen",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether the inline frame is willing to be placed into full screen mode. See <a href=\"/en-US/docs/DOM/Using_full-screen_mode\" title=\"https://developer.mozilla.org/en/DOM/Using_full-screen_mode\">Using full-screen mode</a> for details."
      },
      {
        "name": "allowPaymentRequest",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether the <a href=\"/en-US/docs/Web/API/Payment_Request_API\">Payment Request API</a>&nbsp;may be invoked inside a cross-origin iframe."
      },
      {
        "name": "contentDocument",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a>, the active document in the inline frame's nested browsing context."
      },
      {
        "name": "contentWindow",
        "overview": "Returns a <a class=\"new\" href=\"/en-US/docs/Web/API/WindowProxy\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>WindowProxy</code></a>, the window proxy for the nested browsing context."
      },
      {
        "name": "csp",
        "overview": "Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."
      },
      {
        "name": "featurePolicy",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/FeaturePolicy\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>FeaturePolicy</code></a> interface which provides a simple API for introspecting the feature policies applied to a specific document."
      },
      {
        "name": "frameBorder",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that indicates whether to create borders between frames."
      },
      {
        "name": "height",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-height\">height</a></code> HTML&nbsp;attribute, indicating the height of the frame."
      },
      {
        "name": "longDesc",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that contains the URI of a long description of the frame."
      },
      {
        "name": "marginHeight",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> being the height of the frame margin."
      },
      {
        "name": "marginWidth",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> being the width of the frame margin."
      },
      {
        "name": "name",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-name\">name</a></code> HTML&nbsp;attribute, containing a name by which to refer to the frame."
      },
      {
        "name": "referrerPolicy",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute indicating which referrer to use when fetching the linked resource."
      },
      {
        "name": "sandbox",
        "overview": "Is a <a class=\"new\" href=\"/en-US/docs/Web/API/DOMSettableTokenList\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>DOMSettableTokenList</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\">sandbox</a></code> HTML&nbsp;attribute, indicating extra restrictions on the behavior of the nested content."
      },
      {
        "name": "scrolling",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that indicates whether the browser should provide scrollbars for the frame."
      },
      {
        "name": "src",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-src\">src</a></code> HTML&nbsp;attribute, containing the address of the content to be embedded. Note that programatically removing an <code>&lt;iframe&gt;</code>'s src attribute (e.g. via <a href=\"/en-US/docs/Web/API/Element/removeAttribute\" title=\"The Element method removeAttribute() removes the attribute with the specified name from the element.\"><code>Element.removeAttribute()</code></a>) causes <code>about:blank</code> to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS."
      },
      {
        "name": "srcdoc",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that represents the content to display in the frame."
      },
      {
        "name": "width",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-width\">width</a></code>&nbsp;HTML&nbsp;attribute, indicating the width of the frame."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLImageElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLImageElement</code></strong> interface represents an HTML <a href=\\\"/en-US/docs/Web/HTML/Element/img\\\" title=\\\"The HTML <img> element embeds an image into the document.\\\"><code>&lt;img&gt;</code></a> element, providing the properties and methods used to manipulate image elements.</span>\"]",
    "properties": [
      {
        "name": "alt",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-alt\">alt</a></code> HTML attribute, thus indicating the alternate fallback content to be displayed if the image has not been loaded."
      },
      {
        "name": "complete",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> that is <code>true</code> if the browser has finished fetching the image, whether successful or not. That means this value is also <code>true</code> if the image has no <a href=\"/en-US/docs/Web/API/HTMLImageElement/src\" title=\"The HTMLImageElement property src, which reflects the HTML src attribute, specifies the image to display in the <img> element.\"><code>src</code></a> value indicating an image to load."
      },
      {
        "name": "crossOrigin",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the CORS setting for this image element. See <a href=\"/en-US/docs/HTML/CORS_settings_attributes\">CORS settings attributes</a> for further details. This may be <code>null</code> if CORS is not used."
      },
      {
        "name": "currentSrc",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> representing the URL from which the currently displayed image was loaded. This may change as the image is adjusted due to changing conditions, as directed by any <a href=\"/en-US/docs/Web/CSS/Media_Queries\">media queries</a> which are in place."
      },
      {
        "name": "decoding",
        "overview": "An optional <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a hint given to the browser on how it should decode the image. If this value is provided, it must be one of the possible permitted values: <code>sync</code> to decode the image synchronously, <code>async</code> to decode it asynchronously, or <code>auto</code> to indicate no preference (which is the default). Read the <a href=\"/en-US/docs/Web/API/HTMLImageElement/decoding\" title=\"The decoding property of the HTMLImageElement interface represents a hint given to the browser on how it should decode the image.\"><code>decoding</code></a> page for details on the implications of this property's values."
      },
      {
        "name": "height",
        "overview": "An integer value that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-height\">height</a></code> HTML attribute, indicating the rendered height of the image in CSS pixels."
      },
      {
        "name": "isMap",
        "overview": "A <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-ismap\">ismap</a></code> HTML attribute, indicating that the image is part of a server-side image map. This is different from a client-side image map, specified using an <code>&lt;img&gt;</code> element and a corresponding <a href=\"/en-US/docs/Web/HTML/Element/map\" title=\"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\"><code>&lt;map&gt;</code></a> which contains <a href=\"/en-US/docs/Web/HTML/Element/area\" title=\"The HTML <area> element defines a hot-spot region on an image, and optionally associates it with a hypertext link. This element is used only within a <map> element.\"><code>&lt;area&gt;</code></a> elements indicating the clickable areas in the image. The image <em>must</em> be contained within an <a href=\"/en-US/docs/Web/HTML/Element/a\" title=\"The HTML <a> element (or anchor element), with its href attribute, creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.\"><code>&lt;a&gt;</code></a> element; see the <code>ismap</code> page for details."
      },
      {
        "name": "naturalHeight",
        "overview": "Returns an integer value representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows <code>0</code>. This is the height the image would be if it were rendered at its natural full size."
      },
      {
        "name": "naturalWidth",
        "overview": "An integer value representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show <code>0</code>. This is the width the image would be if it were rendered at its natural full size."
      },
      {
        "name": "referrerPolicy",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute, which tells the <a class=\"glossaryLink\" href=\"/en-US/docs/Glossary/user_agent\" title=\"user agent: A user agent is a computer program representing a person, for example, a browser in a Web context.\">user agent</a> how to decide which referrer to use in order to fetch the image. Read this article for details on the possible values of this string."
      },
      {
        "name": "sizes",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-sizes\">sizes</a></code> HTML attribute. This string specifies a list of comma-separated conditional sizes for the image; that is, for a given viewport size, a particular image size is to be used. Read the documentation on the <a href=\"/en-US/docs/Web/API/HTMLImageElement/sizes\" title=\"The HTMLImageElement property sizes allows you to specify the layout width of the image for each of a list of media conditions. This provides the ability to automatically select among different images—even images of different orientations or aspect ratios—as the document state changes to match different media conditions.\"><code>sizes</code></a> page for details on the format of this string."
      },
      {
        "name": "src",
        "overview": "A <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-src\">src</a></code> HTML attribute, which contains the full URL of the image including base URI. You can load a different image into the element by changing the URL in the <code>src</code> attribute."
      },
      {
        "name": "srcset",
        "overview": "A <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-srcset\">srcset</a></code> HTML attribute. This specifies a list of candidate images, separated by commas (<code>',', U+002C COMMA</code>). Each candidate image is a URL followed by a space, followed by a specially-formatted string indicating the size of the image. The size may be specified either the width or a size multiple. Read the <a href=\"/en-US/docs/Web/API/HTMLImageElement/srcset\" title=\"The HTMLImageElement property srcset is a string which identifies one or more image candidate strings, separated using commas (,) each specifying image resources to use under given circumstances.\"><code>srcset</code></a> page for specifics on the format of the size substring."
      },
      {
        "name": "useMap",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-usemap\">usemap</a></code> HTML attribute, containing the page-local URL of the <a href=\"/en-US/docs/Web/HTML/Element/map\" title=\"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\"><code>&lt;map&gt;</code></a> element describing the image map to use. The page-local URL is a pound (hash) symbol (<code>#</code>) followed by the ID of the <code>&lt;map&gt;</code> element, such as <code>#my-map-element</code>. The <code>&lt;map&gt;</code> in turn contains <a href=\"/en-US/docs/Web/HTML/Element/area\" title=\"The HTML <area> element defines a hot-spot region on an image, and optionally associates it with a hypertext link. This element is used only within a <map> element.\"><code>&lt;area&gt;</code></a> elements indicating the clickable areas in the image."
      },
      {
        "name": "width",
        "overview": "An integer value that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/img#attr-width\">width</a></code> HTML attribute, indicating the rendered width of the image in CSS pixels."
      },
      {
        "name": "x",
        "overview": "An integer indicating the horizontal offset of the left border edge of the image's CSS layout box relative to the origin of the <a href=\"/en-US/docs/Web/HTML/Element/html\" title=\"The HTML <html> element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.\"><code>&lt;html&gt;</code></a> element's containing block."
      },
      {
        "name": "y",
        "overview": "The integer vertical offset of the top border edge of the image's CSS layout box relative to the origin of the <a href=\"/en-US/docs/Web/HTML/Element/html\" title=\"The HTML <html> element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.\"><code>&lt;html&gt;</code></a> element's containing block."
      }
    ],
    "methods": [
      {
        "name": "decode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> that resolves when the image is decoded and it's safe to append the image to the DOM. This prevents rendering of the next frame from having to pause to decode the image, as would happen if an undecoded image were added to the DOM."
      }
    ]
  },
  {
    "name": "HTMLInputElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLInputElement</code></strong> interface provides special properties and methods for manipulating the options, layout, and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/input\\\" title=\\\"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. \\\"><code>&lt;input&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "accept",
        "overview": "<em><code>string</code>: </em><strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-accept\">accept</a></code> attribute, containing comma-separated list of file types accepted by the server when <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>file</code>."
      },
      {
        "name": "alt",
        "overview": "<em><code>string</code>: </em><strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-alt\">alt</a></code> attribute, containing alternative text to use when <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>image.</code>"
      },
      {
        "name": "autocomplete",
        "overview": "<p><em><code>string</code>: </em><strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-autocomplete\">autocomplete</a></code> attribute, indicating whether the value of the control can be automatically completed by the browser.</p>\n\n\t\t\t<p>Ignored if the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute is <code>hidden</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type (<code>button</code>, <code>submit</code>, <code>reset</code>, <code>image</code>).</p>\n\n\t\t\t<dl>\n\t\t\t\t<dt>Possible values are:</dt>\n\t\t\t\t<dd><code>on</code>: the browser can autocomplete the value using previously stored value<br>\n\t\t\t\t<code>off</code>: the user must explicity enter a value</dd>\n\t\t\t</dl>"
      },
      {
        "name": "autofocus",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-autofocus\">autofocus</a></code> attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-autofocus\">autofocus</a></code> attribute. It cannot be applied if the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute is set to <code>hidden</code> (that is, you cannot automatically set focus to a hidden control)."
      },
      {
        "name": "checked",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the current state of the element when <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>checkbox</code> or <code>radio</code>."
      },
      {
        "name": "defaultChecked",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the default state of a radio button or checkbox as originally specified in HTML that created this object."
      },
      {
        "name": "defaultValue",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the default value as originally specified in the HTML that created this object."
      },
      {
        "name": "dirName",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets </strong>the directionality of the element."
      },
      {
        "name": "disabled",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-disabled\">disabled</a></code> attribute, indicating that the control is not available for interaction. The input values will not be submitted with the form. See also <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-readonly\">readonly</a></code>"
      },
      {
        "name": "files",
        "overview": "<em><a href=\"/en-US/docs/Web/API/FileList\" title=\"An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type=&quot;file&quot;> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage.\"><code>FileList</code></a><code> array</code>:</em> <strong>Returns</strong> the list of selected files."
      },
      {
        "name": "form",
        "overview": "<em><a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a><code> object</code>:</em> <strong>Returns</strong> a reference to the parent <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element."
      },
      {
        "name": "formAction",
        "overview": "<em><code>string</code>: </em><strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-formaction\">formaction</a></code> attribute, containing the URI of a program that processes information submitted by the element. This overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-action\">action</a></code> attribute of the parent form."
      },
      {
        "name": "formEnctype",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-formenctype\">formenctype</a></code> attribute, containing the type of content that is used to submit the form to the server. This overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-enctype\">enctype</a></code> attribute of the parent form."
      },
      {
        "name": "formMethod",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-formmethod\">formmethod</a></code> attribute, containing the HTTP method that the browser uses to submit the form. This overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-method\">method</a></code> attribute of the parent form."
      },
      {
        "name": "formNoValidate",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-formnovalidate\">formnovalidate</a></code> attribute, indicating that the form is not to be validated when it is submitted. This overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-novalidate\">novalidate</a></code> attribute of the parent form."
      },
      {
        "name": "formTarget",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-formtarget\">formtarget</a></code> attribute, containing a name or keyword indicating where to display the response that is received after submitting the form. This overrides the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-target\">target</a></code> attribute of the parent form."
      },
      {
        "name": "height",
        "overview": "<em><code>string</code>: </em><strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-height\">height</a></code> attribute, which defines the height of the image displayed for the button, if the value of <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>image</code>."
      },
      {
        "name": "indeterminate",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns</strong> whether the checkbox or radio button is in indeterminate state. For checkboxes, the effect is that the appearance of the checkbox is obscured/greyed in some way as to indicate its state is indeterminate (not checked but not unchecked). Does not affect the value of the <code>checked</code> attribute, and clicking the checkbox will set the value to false."
      },
      {
        "name": "inputMode",
        "overview": "Provides a hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents."
      },
      {
        "name": "labels",
        "overview": "<em><a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a><code> array</code>:</em> <strong>Returns</strong> a list of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements that are labels for this element."
      },
      {
        "name": "list",
        "overview": "<em><a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a><code> object</code>:</em> <strong>Returns</strong> the element pointed by the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-list\">list</a></code> attribute. The property may be <code>null</code> if no HTML element found in the same tree."
      },
      {
        "name": "max",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-max\">max</a></code> attribute, containing the maximum (numeric or date-time) value for this item, which must not be less than its minimum (<code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-min\">min</a></code> attribute) value."
      },
      {
        "name": "maxLength",
        "overview": "<em><code>long</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-maxlength\">maxlength</a></code> attribute, containing the <strong>maximum number of characters</strong> (in Unicode code points) that the value can have. (If you set this to a negative number, an exception will be thrown.)"
      },
      {
        "name": "min",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-min\">min</a></code> attribute, containing the minimum (numeric or date-time) value for this item, which must not be greater than its maximum (<code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-max\">max</a></code> attribute) value."
      },
      {
        "name": "minLength",
        "overview": "<em><code>long</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-minlength\">minlength</a></code> attribute, containing the <strong>minimum number of characters</strong> (in Unicode code points) that the value can have. (If you set this to a negative number, an exception will be thrown.)"
      },
      {
        "name": "multiple",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-multiple\">multiple</a></code> attribute, indicating whether more than one value is possible (e.g., multiple files)."
      },
      {
        "name": "name",
        "overview": "<em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-name\">name</a></code> attribute, containing a name that identifies the element when submitting the form."
      },
      {
        "name": "pattern",
        "overview": "<p><em><code>string</code>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-pattern\">pattern</a></code> attribute, containing a <strong>regular expression</strong> that the control's value is checked against. Use the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-title\">title</a></code> attribute to describe the pattern to help the user.</p>\n\n\t\t\t<p>This attribute only applies when the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute is <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code> or <code>email</code>.</p>"
      },
      {
        "name": "placeholder",
        "overview": "<p><em><code>string</code>: </em><strong>Returns / Sets </strong>the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-placeholder\">placeholder</a></code> attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds.</p>\n\n\t\t\t<p>This attribute only applies when the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute is <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code> or <code>email</code>.</p>"
      },
      {
        "name": "readOnly",
        "overview": "<p><em><code>boolean</code>:</em><strong> Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-readonly\">readonly</a></code> attribute, indicating that the user cannot modify the value of the control.<br>\n\t\t\t<span class=\"inlineIndicator htmlVer htmlVerInline\"><a href=\"/en-US/docs/HTML/HTML5\">HTML5</a></span>.</p>\n\n\t\t\t<p>This attribute is ignored if the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute is <code>hidden</code>, <code>range</code>, <code>color</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type.</p>"
      },
      {
        "name": "required",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-required\">required</a></code> attribute, indicating that the user must fill in a value before submitting a form."
      },
      {
        "name": "selectionDirection",
        "overview": "<p><em><code>string</code>:</em> <strong>Returns / Sets</strong> the direction in which selection occurred.</p>\n\n\t\t\t<dl>\n\t\t\t\t<dt>Possible values are:</dt>\n\t\t\t\t<dd><code>forward</code> if selection was performed in the start-to-end direction of the current locale<br>\n\t\t\t\t<code>backward</code> for the opposite direction<br>\n\t\t\t\t<code>none</code> if the direction is unknown</dd>\n\t\t\t</dl>"
      },
      {
        "name": "selectionEnd",
        "overview": "<em><code>unsigned long</code>:</em> <strong>Returns / Sets </strong>the end index of the selected text. When there's no selection, this returns the offset of the character immediately following the current text input cursor position."
      },
      {
        "name": "selectionStart",
        "overview": "<em><code>unsigned long</code>:</em> <strong>Returns / Sets</strong> the beginning index of the selected text. When nothing is selected, this returns the position of the text input cursor (caret) inside of the <a href=\"/en-US/docs/Web/HTML/Element/input\" title=\"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. \"><code>&lt;input&gt;</code></a> element."
      },
      {
        "name": "size",
        "overview": "<p><em><code>unsigned long</code>:</em> <strong>Returns / Sets </strong>the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-size\">size</a></code> attribute, which contains the <strong>visual size of the control</strong>. This value is in pixels unless the value of <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>text</code> or <code>password</code>, in which case, it is an integer number of characters.</p>\n\n\t\t\t<p>This attribute only applies when <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is set to <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code>, <code>email</code>, or <code>password</code>.</p>"
      },
      {
        "name": "src",
        "overview": "<code><em>string</em></code><em>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-src\">src</a></code> attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>image</code>; otherwise it is ignored."
      },
      {
        "name": "step",
        "overview": "<code><em>string</em></code><em>:</em> <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-step\">step</a></code> attribute, which works with<strong> </strong><code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-min\">min</a></code> and <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-max\">max</a></code> to limit the increments at which a numeric or date-time value can be set. It can be the string <code>any</code> or a positive floating point number. If this is not set to <code>any</code>, the control accepts only values at multiples of the step value greater than the minimum."
      },
      {
        "name": "type",
        "overview": "<code><em>string</em></code>: <strong>Returns / Sets</strong> the element's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute, indicating the type of control to display. See <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> attribute of <a href=\"/en-US/docs/Web/HTML/Element/input\" title=\"The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. \"><code>&lt;input&gt;</code></a> for possible values."
      },
      {
        "name": "validationMessage",
        "overview": "<code><em>string</em></code><em>:</em> <strong>Returns</strong> a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-willvalidate\">willvalidate</a></code> is <code>false</code>), or it satisfies its constraints. This value can be set by the <code>setCustomValidity</code> method."
      },
      {
        "name": "validity",
        "overview": "<em><a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a><code> object</code>:</em> <strong>Returns</strong> the element's current validity state."
      },
      {
        "name": "value",
        "overview": "<code><em>string</em></code><em>:</em> <strong>Returns / Sets</strong> the current value of the control.\n\t\t\t<p class=\"note\"><strong>Note:</strong> If the user enters a value different from the value expected, this may return an empty string.</p>"
      },
      {
        "name": "valueAsDate",
        "overview": "<em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" title=\"Creates a JavaScript Date instance that represents a single moment in time in a platform-independent format.\"><code>Date</code></a><code> object</code>:</em> <strong>Returns / Sets</strong> the value of the element, interpreted as a date, or <code>null</code> if conversion is not possible."
      },
      {
        "name": "valueAsNumber",
        "overview": "<em><code>double</code>:</em> <strong>Returns</strong> the value of the element, interpreted as one of the following, in order:\n\t\t\t<ul>\n\t\t\t\t<li>A time value</li>\n\t\t\t\t<li>A number</li>\n\t\t\t\t<li><code>NaN</code> if conversion is impossible</li>\n\t\t\t</ul>"
      },
      {
        "name": "width",
        "overview": "<code><em>string</em></code><em>:</em> <strong>Returns / Sets</strong> the document's <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-width\">width</a></code> attribute, which defines the width of the image displayed for the button, if the value of <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>image</code>."
      },
      {
        "name": "willValidate",
        "overview": "<p><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>:</em> <strong>Returns</strong> whether the element is a candidate for constraint validation.</p>\n\n\t\t\t<p>It is <code>false</code> if any conditions bar it from constraint validation, including: its <code>type</code> is <code>hidden</code>, <code>reset</code>, or <code>button</code>; it has a <a href=\"/en-US/docs/Web/HTML/Element/datalist\">datalist</a> ancestor; or its <code>disabled</code> property is <code>true</code>.</p>"
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>false</code> if the element is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires an <code><a href=\"/en-US/docs/Web/Events/invalid\" title=\"/en-US/docs/Web/Events/invalid\">invalid</a></code> event at the element. It returns <code>true</code> if the element is not a candidate for constraint validation, or if it satisfies its constraints. Inherited from <a href=\"/en-US/docs/Web/API/HTMLObjectElement\" title=\"The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources.\"><code>HTMLObjectElement</code></a>"
      },
      {
        "name": "reportValidity",
        "overview": "Runs the <code>checkValidity()</code> method, and if it returns <code>false</code> (for an invalid input or no <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-pattern\">pattern</a></code> pattern attribute provided), then it reports to the user that the input is invalid in the same manner as if you submitted a form. Inherited from <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a>"
      },
      {
        "name": "select",
        "overview": "Selects all the text in the <code>input</code> element, and focuses it so the user can subsequently replace all of its content."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate. Inherited from <a href=\"/en-US/docs/Web/API/HTMLObjectElement\" title=\"The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources.\"><code>HTMLObjectElement</code></a>"
      },
      {
        "name": "setRangeText",
        "overview": "Replaces a range of text in the <code>input</code> element with new text."
      },
      {
        "name": "setSelectionRange",
        "overview": "Selects a range of text in the <code>input</code> element (but does not focus it)."
      },
      {
        "name": "stepDown",
        "overview": "Decrements the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-value\">value</a></code> by (<code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-step\">step</a></code> * n), where <code><var>n</var></code> defaults to <code>1</code> if not specified."
      },
      {
        "name": "stepUp",
        "overview": "Increments the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-value\">value</a></code> by (<code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-step\">step</a></code> * n), where <code><var>n</var></code> defaults to <code>1</code> if not specified."
      }
    ]
  },
  {
    "name": "HTMLLIElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLLIElement</code></strong> interface exposes specific properties and methods (beyond those defined by regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating list elements.\"]",
    "properties": [
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the type of the bullets, <code>\"disc\"</code>, <code>\"square\"</code> or <code>\"circle\"</code>. As the standard way of defining the list type is via the CSS <a href=\"/en-US/docs/Web/CSS/list-style-type\" title=\"The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\"><code>list-style-type</code></a> property, use the CSSOM methods to set it via a script."
      },
      {
        "name": "value",
        "overview": "Is a <code>long</code> indicating the ordinal position of the <em>list element</em> inside a given <a href=\"/en-US/docs/Web/HTML/Element/ol\" title=\"The HTML <ol> element represents an ordered list of items — typically rendered as a numbered list.\"><code>&lt;ol&gt;</code></a>. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/li#attr-value\">value</a></code> attribute of the HTML <a href=\"/en-US/docs/Web/HTML/Element/li\" title=\"The HTML <li> element is used to represent an item in a list.\"><code>&lt;li&gt;</code></a> element, and can be smaller than <code>0</code>. If the <a href=\"/en-US/docs/Web/HTML/Element/li\" title=\"The HTML <li> element is used to represent an item in a list.\"><code>&lt;li&gt;</code></a> element is not a child of an <a href=\"/en-US/docs/Web/HTML/Element/ol\" title=\"The HTML <ol> element represents an ordered list of items — typically rendered as a numbered list.\"><code>&lt;ol&gt;</code></a> element, the property has no meaning."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLLabelElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLLabelElement</code></strong> interface gives access to properties specific to <a href=\\\"/en-US/docs/Web/HTML/Element/label\\\" title=\\\"The HTML <label> element represents a caption for an item in a user interface.\\\"><code>&lt;label&gt;</code></a> elements. It inherits methods and properties from the base <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "control",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a> representing&nbsp;the control with which the label is associated."
      },
      {
        "name": "form",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a> object representing the form with which the labeled control is associated, or <code>null</code> if there is no associated control, or if that control isn't associated with a form. In other words, this is just a shortcut for <code><em>HTMLLabelElement</em>.control.form</code>."
      },
      {
        "name": "htmlFor",
        "overview": "Is a string containing the ID of the labeled control. This reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/label#attr-for\">for</a></code> attribute."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLLegendElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLLegendElement</code></strong> is an interface allowing to access properties of the <a href=\\\"/en-US/docs/Web/HTML/Element/legend\\\" title=\\\"The HTML <legend> element represents a caption for the content of its parent <fieldset>.\\\"><code>&lt;legend&gt;</code></a> elements. It inherits properties and methods from the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Alignment relative to the form set"
      },
      {
        "name": "form",
        "overview": "<p>The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the <strong>form</strong> attribute on the parent fieldset element. Otherwise, it returns null.</p>"
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLLinkElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLLinkElement</code></strong> interface represents reference information for external resources and the relationship of those resources to a document and vice-versa (corresponds to <code><a href=\\\"/en-US/docs/Web/HTML/Element/link\\\">&lt;link&gt;</a></code> element; not to be confused with <code><a href=\\\"/en-US/docs/Web/HTML/Element/a\\\">&lt;a&gt;</a></code>, which is represented by <code><a href=\\\"/en-US/docs/Web/API/HTMLAnchorElement\\\">HTMLAnchorElement</a></code>). This object inherits all of the properties and methods of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "as",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the type of content being loaded by the HTML link."
      },
      {
        "name": "crossOrigin",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that corresponds to the CORS setting for this link element. See <a href=\"/en-US/docs/HTML/CORS_settings_attributes\" title=\"HTML/CORS settings attributes\">CORS&nbsp;settings attributes</a> for details."
      },
      {
        "name": "href",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the URI&nbsp;for the target resource."
      },
      {
        "name": "hreflang",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing&nbsp;the language code for the linked resource."
      },
      {
        "name": "media",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a list of one or more media formats to which the resource applies."
      },
      {
        "name": "referrerPolicy",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/link#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute indicating which referrer to use."
      },
      {
        "name": "rel",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing&nbsp;the forward relationship of the linked resource from the document to the resource."
      },
      {
        "name": "relList",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/link#attr-rel\">rel</a></code> HTML attribute, as a list of tokens."
      },
      {
        "name": "sizes",
        "overview": "Is a <a class=\"new\" href=\"/en-US/docs/Web/API/DOMSettableTokenList\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>DOMSettableTokenList</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/link#attr-sizes\">sizes</a></code> HTML attribute, as a list of tokens."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing&nbsp;the MIME type of the linked resource."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLMapElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLMapElement</code></strong> interface provides special properties and methods (beyond those of the regular object <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.\"]",
    "properties": [
      {
        "name": "areas",
        "overview": "Is a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> representing the <a href=\"/en-US/docs/Web/HTML/Element/area\" title=\"The HTML <area> element defines a hot-spot region on an image, and optionally associates it with a hypertext link. This element is used only within a <map> element.\"><code>&lt;area&gt;</code></a> elements associated to this <a href=\"/en-US/docs/Web/HTML/Element/map\" title=\"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\"><code>&lt;map&gt;</code></a>."
      },
      {
        "name": "name",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the <a href=\"/en-US/docs/Web/HTML/Element/map\" title=\"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\"><code>&lt;map&gt;</code></a> element for referencing it other context. If the <code>id</code> attribute is set, this must have the same value; and it cannot be <code>null</code> or empty."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLMarqueeElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>Draft</strong><br>\\n    This page is not complete.\"]",
    "properties": [
      {
        "name": "behavior",
        "overview": "Sets how the text is scrolled within the marquee. Possible values are <code>scroll</code>, <code>slide</code> and <code>alternate</code>. If no value is specified, the default value is <code>scroll</code>."
      },
      {
        "name": "bgColor",
        "overview": "Sets the background color through color name or hexadecimal value."
      },
      {
        "name": "direction",
        "overview": "Sets the direction of the scrolling within the marquee. Possible values are <code>left</code>, <code>right</code>, <code>up</code> and <code>down</code>. If no value is specified, the default value is <code>left</code>."
      },
      {
        "name": "height",
        "overview": "Sets the height in pixels or percentage value."
      },
      {
        "name": "hspace",
        "overview": "Sets the horizontal margin."
      },
      {
        "name": "scrollAmount",
        "overview": "Sets the amount of scrolling at each interval in pixels. The default value is 6."
      },
      {
        "name": "scrollDelay",
        "overview": "Sets the interval between each scroll movement in milliseconds. The default value is 85. Note that any value smaller than 60 is ignored and the value 60 is used instead, unless <code>trueSpeed</code> is <code>true</code>."
      },
      {
        "name": "trueSpeed",
        "overview": "By default, <code>scrollDelay</code> values lower than 60 are ignored. If <code>trueSpeed</code> is <code>true</code>, then those values are not ignored."
      },
      {
        "name": "vspace",
        "overview": "Sets the vertical margin."
      },
      {
        "name": "width",
        "overview": "Sets the width in pixels or percentage value."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLMediaElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLMediaElement</code></strong> interface adds to <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> the properties and methods needed to support basic media-related capabilities that are common to audio and video.</span> The <a href=\\\"/en-US/docs/Web/API/HTMLVideoElement\\\" title=\\\"The HTMLVideoElement interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement.\\\"><code>HTMLVideoElement</code></a> and <a href=\\\"/en-US/docs/Web/API/HTMLAudioElement\\\" title=\\\"The HTMLAudioElement interface provides access to the properties of <audio> elements, as well as methods to manipulate them.\\\"><code>HTMLAudioElement</code></a> elements both inherit this interface.\"]",
    "properties": [
      {
        "name": "audioTracks",
        "overview": "A <a href=\"/en-US/docs/Web/API/AudioTrackList\" title=\"The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list.\"><code>AudioTrackList</code></a> that lists the <a href=\"/en-US/docs/Web/API/AudioTrack\" title=\"The AudioTrack interface represents a single audio track from one of the HTML media elements, <audio> or <video>. \"><code>AudioTrack</code></a> objects contained in the element."
      },
      {
        "name": "autoplay",
        "overview": "\n <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-autoplay\">autoplay</a></code> HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption.</p>\n\n <div class=\"note\"><strong>Note</strong>: Automatically playing audio when the user doesn't expect or desire it is a poor user experience and should be avoided in most cases, though there are exceptions. See the <a href=\"/en-US/docs/Web/Media/Autoplay_guide\">Autoplay guide for media and Web Audio APIs</a> for more information. Keep in mind that browsers may ignore autoplay requests, so you should ensure that your code isn't dependent on autoplay working.</div>\n "
      },
      {
        "name": "buffered",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/TimeRanges\" title=\"The TimeRanges interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video>&nbsp;elements.\"><code>TimeRanges</code></a> object that indicates the ranges of the media source that the browser has buffered (if any) at the moment the <code>buffered</code> property is accessed."
      },
      {
        "name": "controls",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-controls\">controls</a></code> HTML attribute, indicating whether user interface items for controlling the resource should be displayed."
      },
      {
        "name": "controlsList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> that helps the user agent select what controls to show on the media element whenever the user agent shows its own set of controls. The <code>DOMTokenList</code> takes one or more of three possible values: <code>nodownload</code>, <code>nofullscreen</code>, and <code>noremoteplayback</code>."
      },
      {
        "name": "crossOrigin",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating the <a href=\"/en-US/docs/Web/HTML/CORS_settings_attributes\">CORS setting</a> for this media element."
      },
      {
        "name": "currentSrc",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> with the absolute URL of the chosen media resource."
      },
      {
        "name": "currentTime",
        "overview": "A double-precision floating-point value indicating the current playback time in seconds; if the media has not started to play and has not been seeked, this value is the media's initial playback time. Setting this value seeks the media to the new time. The time is specified relative to the media's timeline."
      },
      {
        "name": "defaultMuted",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-muted\">muted</a></code> HTML attribute, which indicates whether the media element's audio output should be muted by default."
      },
      {
        "name": "defaultPlaybackRate",
        "overview": "A <code>double</code> indicating the default playback rate for the media."
      },
      {
        "name": "disableRemotePlayback",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that sets or returns the remote playback state, indicating whether the media element is allowed to have a remote playback UI."
      },
      {
        "name": "duration",
        "overview": "A read-only double-precision floating-point value indicating the total duration of the media in seconds. If no media data is available, the returned value is <code>NaN</code>. If the media is of indefinite length (such as streamed live media, a WebRTC call's media, or similar), the value is <code>+Infinity</code>."
      },
      {
        "name": "ended",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that indicates whether the media element has finished playing."
      },
      {
        "name": "error",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/MediaError\" title=\"The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as <audio> or <video>.\"><code>MediaError</code></a> object for the most recent error, or <code>null</code> if there has not been an error."
      },
      {
        "name": "loop",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-loop\">loop</a></code> HTML attribute, which indicates whether the media element should start over when it reaches the end."
      },
      {
        "name": "mediaKeys",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/MediaKeys\" title=\"The MediaKeys interface of EncryptedMediaExtensions API represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.\"><code>MediaKeys</code></a> object or <code>null</code>. MediaKeys is a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback."
      },
      {
        "name": "muted",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that determines whether audio is muted. <code>true</code> if the audio is muted and <code>false</code> otherwise."
      },
      {
        "name": "networkState",
        "overview": "Returns a <code>unsigned short</code> (enumeration) indicating the current state of fetching the media over the network."
      },
      {
        "name": "onencrypted",
        "overview": "Sets the <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when the media is encrypted."
      },
      {
        "name": "onwaitingforkey",
        "overview": "Sets the <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> called when playback is blocked while waiting for an encryption key."
      },
      {
        "name": "paused",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that indicates whether the media element is paused."
      },
      {
        "name": "playbackRate",
        "overview": "Is a <code>double</code> that indicates the rate at which the media is being played back."
      },
      {
        "name": "played",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/TimeRanges\" title=\"The TimeRanges interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video>&nbsp;elements.\"><code>TimeRanges</code></a> object that contains the ranges of the media source that the browser has played, if any."
      },
      {
        "name": "preload",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-preload\">preload</a></code> HTML attribute, indicating what data should be preloaded, if any. Possible values are: <code>none</code>, <code>metadata</code>, <code>auto</code>."
      },
      {
        "name": "readyState",
        "overview": "Returns a <code>unsigned short</code> (enumeration) indicating the readiness state of the media."
      },
      {
        "name": "seekable",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/TimeRanges\" title=\"The TimeRanges interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video>&nbsp;elements.\"><code>TimeRanges</code></a> object that contains the time ranges that the user is able to seek to, if any."
      },
      {
        "name": "seeking",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that indicates whether the media is in the process of seeking to a new position."
      },
      {
        "name": "sinkId",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that is the unique ID of the audio device delivering output, or an empty string if it is using the user agent default. This ID should be one of the <code>MediaDeviceInfo.deviceid</code> values returned from <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\" title=\"The MediaDevices method enumerateDevices() requests a list of the available media input and output devices, such as microphones, cameras, headsets, and so forth.\"><code>MediaDevices.enumerateDevices()</code></a>, <code>id-multimedia</code>, or <code>id-communications</code>."
      },
      {
        "name": "src",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-src\">src</a></code> HTML attribute, which contains the URL of a media resource to use."
      },
      {
        "name": "textTracks",
        "overview": "Returns the list of <a href=\"/en-US/docs/Web/API/TextTrack\" title=\"This interface also inherits properties from EventTarget.\"><code>TextTrack</code></a> objects contained in the element."
      },
      {
        "name": "videoTracks",
        "overview": "Returns the list of <a href=\"/en-US/docs/Web/API/VideoTrack\" title=\"The VideoTrack interface represents a single video track from a <video> element.\"><code>VideoTrack</code></a> objects contained in the element."
      },
      {
        "name": "volume",
        "overview": "Is a <code>double</code> indicating the audio volume, from 0.0 (silent) to 1.0 (loudest)."
      }
    ],
    "methods": [
      {
        "name": "addTextTrack",
        "overview": "Adds a text track (such as a track for subtitles) to a media element."
      },
      {
        "name": "canPlayType",
        "overview": "Given a string specifying a MIME media type (potentially with the&nbsp;<a href=\"/en-US/docs/Web/Media/Formats/codecs_parameter\"><code>codecs</code>&nbsp;parameter</a> included),&nbsp;<code>canPlayType()</code>&nbsp;returns the string&nbsp;<code>probably</code>&nbsp;if the media should be playable,&nbsp;<code>maybe</code>&nbsp;if there's not enough information to determine whether the media will play or not, or an empty string if the media cannot be played."
      },
      {
        "name": "captureStream",
        "overview": "Returns <a href=\"/en-US/docs/Web/API/MediaStream\" title=\"The MediaStream interface represents a stream of media content. A stream consists of several tracks such as&nbsp;video or audio tracks. Each track is specified as an instance of MediaStreamTrack.\"><code>MediaStream</code></a>, captures a stream of the media content."
      },
      {
        "name": "load",
        "overview": "Resets the media to the beginning and selects the best available source from the sources provided using the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-src\">src</a></code> attribute or the <a href=\"/en-US/docs/Web/HTML/Element/source\" title=\"The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.\"><code>&lt;source&gt;</code></a> element."
      },
      {
        "name": "pause",
        "overview": "Pauses the media playback."
      },
      {
        "name": "play",
        "overview": "Begins playback of the media."
      },
      {
        "name": "setMediaKeys",
        "overview": "Returns <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a>. Sets the <a href=\"/en-US/docs/Web/API/MediaKeys\" title=\"The MediaKeys interface of EncryptedMediaExtensions API represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.\"><code>MediaKeys</code></a> keys to use when decrypting media during playback."
      },
      {
        "name": "setSinkId",
        "overview": "Sets the ID of the audio device to use for output and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a>. This only works when the application is authorized to use the specified device."
      }
    ]
  },
  {
    "name": "HTMLMenuElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>Draft</strong><br>\\n    This page is not complete.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLMetaElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLMetaElement</code></strong> interface contains descriptive metadata about a document. It&nbsp;inherits all of the properties and methods described in the <span class=\\\"internal\\\"><a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface</span>.\"]",
    "properties": [
      {
        "name": "content",
        "overview": "Gets or sets the value of meta-data property."
      },
      {
        "name": "httpEquiv",
        "overview": "Gets or sets the name of an HTTP&nbsp;response header to define for a document."
      },
      {
        "name": "name",
        "overview": "Gets or sets the name of a meta-data property to define for a document."
      },
      {
        "name": "scheme",
        "overview": "Gets or sets the name of a scheme used to interpret the value of a meta-data property."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLMeterElement",
    "category": "HTMLElements",
    "overview": "[\"The HTML <a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\" title=\\\"The HTML <meter> element represents either a scalar value within a known range or a fractional value.\\\"><code>&lt;meter&gt;</code></a> elements expose the <code><strong>HTMLMeterElement</strong></code> interface, which provides special properties and methods (beyond the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\" title=\\\"The HTML <meter> element represents either a scalar value within a known range or a fractional value.\\\"><code>&lt;meter&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "high",
        "overview": "A <code>double</code> representing the value of the high boundary, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-high\">high</a></code> attribute."
      },
      {
        "name": "labels",
        "overview": "A <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements that are associated with the element."
      },
      {
        "name": "low",
        "overview": "A <code>double</code> representing the value of the low boundary, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-low\">low</a></code>attribute."
      },
      {
        "name": "max",
        "overview": "A <code>double</code> representing the maximum value, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-max\">max</a></code> attribute."
      },
      {
        "name": "min",
        "overview": "A <code>double</code> representing the minimum value, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-min\">min</a></code> attribute."
      },
      {
        "name": "optimum",
        "overview": "A <code>double</code> representing the optimum, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-optimum\">optimum</a></code> attribute."
      },
      {
        "name": "value",
        "overview": "A <code>double</code> representing the currrent value, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/meter#attr-value\">value</a></code> attribute."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLModElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLModElement</code></strong> interface provides special properties (beyond the regular methods and properties available through the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface they also have available to them by inheritance) for manipulating modification elements, that is <a href=\\\"/en-US/docs/Web/HTML/Element/del\\\" title=\\\"The HTML <del> element represents a range of text that has been deleted from a document.\\\"><code>&lt;del&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/ins\\\" title=\\\"The HTML <ins> element represents a range of text that has been added to a document.\\\"><code>&lt;ins&gt;</code></a>.\"]",
    "properties": [
      {
        "name": "cite",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/del#attr-cite\">cite</a></code> HTML attribute, containing a URI of a resource explaining the change."
      },
      {
        "name": "dateTime",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/del#attr-datetime\">datetime</a></code> HTML attribute, containing a date-and-time string representing a timestamp for the change."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLOListElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLOListElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating ordered list elements.\"]",
    "properties": [
      {
        "name": "compact",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating that spacing between list items should be reduced. This property reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/ol#attr-compact\">compact</a></code> attribute only, it doesn't consider the <a href=\"/en-US/docs/Web/CSS/line-height\" title=\"The line-height CSS property sets the height of a line box. It's commonly used to set the distance between lines of text.\"><code>line-height</code></a> CSS property used for that behavior in modern pages."
      },
      {
        "name": "reversed",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/ol#attr-reversed\">reversed</a></code> and defining if the numbering is descending, that is its value is <code>true</code>, or ascending (<code>false</code>)."
      },
      {
        "name": "start",
        "overview": "Is a <code>long</code> value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/ol#attr-start\">start</a></code> and defining the value of the first number of the first element of the list."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/ol#attr-type\">type</a></code> and defining the kind of marker to be used to display. It can have the following values:\n <ul>\n  <li><code>'1'</code> meaning that decimal numbers are used: <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, …</li>\n  <li><code>'a'</code> meaning that the lowercase latin alphabet is used:&nbsp; <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code>, …</li>\n  <li><code>'A'</code> meaning that the uppercase latin alphabet is used: <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>, <code>E</code>, …</li>\n  <li><code>'i'</code> meaning that the lowercase latin numerals are used: <code>i</code>, <code>ii</code>, <code>iii</code>, <code>iv</code>, <code>v</code>, …</li>\n  <li><code>'I'</code> meaning that the uppercase latin numerals are used: <code>I</code>, <code>II</code>, <code>III</code>, <code>IV</code>, <code>V</code>, …</li>\n </ul>\n "
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLObjectElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLObjectElement</code></strong> interface provides special properties and methods (beyond those on the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/object\\\" title=\\\"The HTML <object> element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.\\\"><code>&lt;object&gt;</code></a> element, representing external resources.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, <code>\"justify\"</code>, and <code>\"center\"</code>."
      },
      {
        "name": "archive",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-archive\">archive</a></code> HTML attribute, containing a list of archives for resources for this object."
      },
      {
        "name": "border",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-border\">border</a></code> HTML attribute, specifying the width of a border around the object."
      },
      {
        "name": "code",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the name of an applet class file, containing either the applet's subclass, or the path to get to the class, including the class file itself."
      },
      {
        "name": "codeBase",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-codebase\">codebase</a></code> HTML attribute, specifying the base path to use to resolve relative URIs."
      },
      {
        "name": "codeType",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-codetype\">codetype</a></code> HTML attribute, specifying the content type of the data."
      },
      {
        "name": "contentDocument",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a> representing the active document of the object element's nested browsing context, if any; otherwise <code>null</code>."
      },
      {
        "name": "contentWindow",
        "overview": "Returns a <a class=\"new\" href=\"/en-US/docs/Web/API/WindowProxy\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>WindowProxy</code></a> representing the window proxy of the object element's nested browsing context, if any; otherwise <code>null</code>."
      },
      {
        "name": "data",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-data\">data</a></code> HTML attribute, specifying the address of a resource's data."
      },
      {
        "name": "declare",
        "overview": "Is a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-declare\">declare</a></code> HTML attribute, indicating that this is a declaration, not an instantiation, of the object."
      },
      {
        "name": "form",
        "overview": "Retuns a <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a> representing the object element's form owner, or null if there isn't one."
      },
      {
        "name": "height",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-height\">height</a></code> HTML attribute, specifying the displayed height of the resource in CSS pixels."
      },
      {
        "name": "hspace",
        "overview": "Is a <code>long</code> representing the horizontal space in pixels around the control."
      },
      {
        "name": "name",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-name\">name</a></code> HTML attribute, specifying the name of the browsing context."
      },
      {
        "name": "standby",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-standby\">standby</a></code> HTML attribute, specifying a message to display while the object loads."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-type\">type</a></code> HTML attribute, specifying the MIME type of the resource."
      },
      {
        "name": "useMap",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-usemap\">usemap</a></code> HTML attribute, specifying a <a href=\"/en-US/docs/Web/HTML/Element/map\" title=\"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\"><code>&lt;map&gt;</code></a> element to use."
      },
      {
        "name": "validationMessage",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<code>willValidate</code> is <code>false</code>), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> with the validity states that this element is in."
      },
      {
        "name": "vspace",
        "overview": "Is a <code>long</code> representing the horizontal space in pixels around the control."
      },
      {
        "name": "width",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/object#attr-width\">width</a></code> HTML attribute, specifying the displayed width of the resource in CSS pixels."
      },
      {
        "name": "willValidate",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that indicates whether the element is a candidate for constraint validation. Always <code>false</code> for <code>HTMLObjectElement</code> objects."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Retuns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that always is <code>true</code>, because <code>object</code> objects are never candidates for constraint validation."
      },
      {
        "name": "reportValidity",
        "overview": "Returns true if the element's value has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate."
      }
    ]
  },
  {
    "name": "HTMLOptGroupElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLOptGroupElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/optgroup\\\" title=\\\"The HTML <optgroup> element creates a grouping of options within a <select> element.\\\"><code>&lt;optgroup&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "disabled",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>boolean</code></a> representing whether or not the whole list of children <a href=\"/en-US/docs/Web/HTML/Element/option\" title=\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\"><code>&lt;option&gt;</code></a> is disabled (true) or not (false)."
      },
      {
        "name": "label",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the label for the group."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLOptionElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLOptionElement</code></strong> interface represents <a href=\\\"/en-US/docs/Web/HTML/Element/option\\\" title=\\\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\\\"><code>&lt;option&gt;</code></a> elements and inherits all classes and methods of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "defaultSelected",
        "overview": "Contains the initial value of the <code><a href=\"/en-US/docs/Web/HTML/Element/option#attr-selected\">selected</a></code> HTML attribute, indicating whether the option is selected by default or not."
      },
      {
        "name": "disabled",
        "overview": "Reflects the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/option#attr-disabled\">disabled</a></code> HTML&nbsp;attribute, which indicates that the option is unavailable to be selected. An option can also be disabled if it is a child of an <a href=\"/en-US/docs/Web/HTML/Element/optgroup\" title=\"The HTML <optgroup> element creates a grouping of options within a <select> element.\"><code>&lt;optgroup&gt;</code></a> element that is disabled."
      },
      {
        "name": "form",
        "overview": "If the option is a descendent of a <a href=\"/en-US/docs/Web/HTML/Element/select\" title=\"The HTML <select> element represents a control that provides a menu of options\"><code>&lt;select&gt;</code></a> element, then this property has the same value as the <code>form</code> property of the corresponding <a href=\"/en-US/docs/Web/API/HTMLSelectElement\" title=\"The HTMLSelectElement interface represents a <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface.\"><code>HTMLSelectElement</code></a> object; otherwise, it is <code>null</code>."
      },
      {
        "name": "index",
        "overview": "The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, like when it is part of the <a href=\"/en-US/docs/Web/HTML/Element/datalist\" title=\"The HTML <datalist> element contains a set of <option> elements that represent the permissible or recommended options available to choose from within other controls.\"><code>&lt;datalist&gt;</code></a> element, the value is <code>0</code>."
      },
      {
        "name": "label",
        "overview": "Reflects the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/option#attr-label\">label</a></code> HTML attribute, which provides a label for the option. If this attribute isn't specifically set, reading it returns the element's text content."
      },
      {
        "name": "selected",
        "overview": "Indicates whether the option is currently selected."
      },
      {
        "name": "text",
        "overview": "Contains the text content of the element."
      },
      {
        "name": "value",
        "overview": "Reflects the value of the <code><a href=\"/en-US/docs/Web/HTML/Element/option#attr-value\">value</a></code> HTML attribute, if it exists; otherwise reflects value of the <a href=\"/en-US/docs/Web/API/Node/textContent\" title=\"The textContent property of the Node interface represents the text content of the node and its descendants.\"><code>Node.textContent</code></a> property."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLOptionsCollection",
    "category": "FormSupport",
    "overview": "[\"<em>This interface inherits the methods of its parent,&nbsp;<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection\\\" title=\\\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\\\"><code>HTMLCollection</code></a>.</em>\"]",
    "properties": [
      {
        "name": "length",
        "overview": "As optionally allowed by the spec, this property isn't read-only. You can either remove options from the end by lowering the value, or add blank options at the end by raising the value. Mozilla allows this, while other implementations could potentially throw a <a href=\"/en-US/docs/DOM/DOMException\" title=\"DOM/DOMException\">DOMException</a>."
      },
      {
        "name": "selectedIndex",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "add",
        "overview": "Inserts element before the node given by before."
      },
      {
        "name": "remove",
        "overview": "Removes the item with index index from the collection."
      }
    ]
  },
  {
    "name": "HTMLOrSVGElement",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "dataset",
        "overview": null
      },
      {
        "name": "nonce",
        "overview": null
      },
      {
        "name": "tabIndex",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "blur",
        "overview": null
      },
      {
        "name": "focus",
        "overview": null
      }
    ]
  },
  {
    "name": "HTMLOutputElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLOutputElement</code></strong> interface provides properties and methods (beyond those inherited from <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a>) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/output\\\" title=\\\"The HTML Output element (<output>) is a container element into which a site or app can inject the results of a calculation or the outcome of a user action.\\\"><code>&lt;output&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "defaultValue",
        "overview": "A&nbsp;<a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the default value of the element, initially the empty string."
      },
      {
        "name": "form",
        "overview": "An <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a> indicating the form associated with the control, reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/output#attr-form\">form</a></code> HTML attribute if it is defined."
      },
      {
        "name": "htmlFor",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMTokenList\" title=\"The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\"><code>DOMTokenList</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/output#attr-for\">for</a></code> HTML attribute, containing a list of IDs of other elements in the same document that contribute to (or otherwise affect) the calculated <code>value</code>."
      },
      {
        "name": "labels",
        "overview": "A <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements associated with the element."
      },
      {
        "name": "name",
        "overview": "A&nbsp;<a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/output#attr-name\">name</a></code> HTML attribute, containing the name for the control that is submitted with form data."
      },
      {
        "name": "type",
        "overview": "The <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> <code>\"output\"</code>."
      },
      {
        "name": "validationMessage",
        "overview": "A&nbsp;<a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<code>willValidate</code> is <code>false</code>), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "A&nbsp;<a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> representing the validity states that this element is in."
      },
      {
        "name": "value",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the value of the contents of the elements. Behaves like the <a href=\"/en-US/docs/Web/API/Node/textContent\" title=\"The textContent property of the Node interface represents the text content of the node and its descendants.\"><code>Node.textContent</code></a> property."
      },
      {
        "name": "willValidate",
        "overview": "A <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating whether the element is a candidate for constraint validation."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Checks the validity of the element and returns a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> holding the check result."
      },
      {
        "name": "reportValidity",
        "overview": "This method reports the problems with the constraints on the element, if any, to the user. If there are problems, fires an <a href=\"/en-US/docs/Web/Events/invalid\">invalid</a> event at the element, and returns <code>false</code>; if there are no problems, it returns <code>true</code>."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate."
      }
    ]
  },
  {
    "name": "HTMLParagraphElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLParagraphElement</code></strong> interface provides special properties (beyond those of the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface it inherits) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/p\\\" title=\\\"The HTML <p> element represents a paragraph.\\\"><code>&lt;p&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, <code>\"justify\"</code>, and <code>\"center\"</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLParamElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLParamElement</code></strong> interface provides special properties (beyond those of the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface it inherits) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/param\\\" title=\\\"The HTML <param> element defines parameters for an <object> element.\\\"><code>&lt;param&gt;</code></a> elements, representing a pair of a key and a value that acts as a parameter for an <a href=\\\"/en-US/docs/Web/HTML/Element/object\\\" title=\\\"The HTML <object> element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.\\\"><code>&lt;object&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "name",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the name of the parameter. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/param#attr-name\">name</a></code> attribute."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the type of the parameter when <code>valueType</code> has the <code>\"ref\"</code> value. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/param#attr-type\">type</a></code> attribute."
      },
      {
        "name": "value",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the value associated to the parameter. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/param#attr-value\">value</a></code> attribute."
      },
      {
        "name": "valueType",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the type of the <code>value</code>. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/param#attr-<code>valuetype</code>\"><code>valuetype</code></a></code> attribute and has one of the values: <code>\"data\"</code>, <code>\"ref\"</code>, or <code>\"object\"</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLPictureElement",
    "category": "HTMLElements",
    "overview": "[\"<strong>This is an <a href=\\\"/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\\\">experimental technology</a></strong><br>Check the <a href=\\\"#Browser_compatibility\\\">Browser compatibility table</a> carefully before using this in production.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLPreElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLPreElement</code></strong> interface exposes specific properties and methods (beyond those of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating a block of preformatted text (<a href=\\\"/en-US/docs/Web/HTML/Element/pre\\\" title=\\\"The HTML <pre> element represents preformatted text which is to be presented exactly as written in the HTML file.\\\"><code>&lt;pre&gt;</code></a>).\"]",
    "properties": [
      {
        "name": "width",
        "overview": "Is a <code>long</code> value reflecting the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/pre#attr-width\">width</a></code> attribute, containing a fixed-size length for the <a href=\"/en-US/docs/Web/HTML/Element/pre\" title=\"The HTML <pre> element represents preformatted text which is to be presented exactly as written in the HTML file.\"><code>&lt;pre&gt;</code></a> element."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLProgressElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLProgressElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/progress\\\" title=\\\"The HTML <progress> element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\\\"><code>&lt;progress&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "labels",
        "overview": "Returns <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> containing the list of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements that are labels for this element."
      },
      {
        "name": "max",
        "overview": "Is a <code>double</code> value reflecting the content attribute of the same name, limited to numbers greater than zero. Its default value is <code>1.0</code>."
      },
      {
        "name": "position",
        "overview": "Returns a <code>double</code> value returning the result of dividing the current value (<code>value</code>) by the maximum value (<code>max</code>); if the progress bar is an indeterminate progress bar, it returns <code>-1</code>."
      },
      {
        "name": "value",
        "overview": "Is a <code>double</code> value that reflects the current value; if the progress bar is an indeterminate progress bar, it returns <code>0</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLQuoteElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLQuoteElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating quoting elements, like <a href=\\\"/en-US/docs/Web/HTML/Element/blockquote\\\" title=\\\"The HTML <blockquote> Element (or HTML Block Quotation Element) indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation (see Notes for how to change it). A URL for the source of the quotation may be given using the cite attribute, while a text representation of the source can be given using the <cite> element.\\\"><code>&lt;blockquote&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/q\\\" title=\\\"The HTML <q> element  indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. \\\"><code>&lt;q&gt;</code></a>, but not the <a href=\\\"/en-US/docs/Web/HTML/Element/cite\\\" title=\\\"The HTML Citation element (<cite>) is used to describe a reference to a cited creative work, and must include the title of that work.\\\"><code>&lt;cite&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "cite",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/blockquote#attr-cite\">cite</a></code> HTML attribute, containing a URL for the source of the quotation."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLScriptElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">HTML <a href=\\\"/en-US/docs/Web/HTML/Element/script\\\" title=\\\"The HTML <script> element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code.\\\"><code>&lt;script&gt;</code></a> elements expose the <strong><code>HTMLScriptElement</code></strong> interface, which provides special properties and methods for manipulating the behavior and execution of <code>&lt;script&gt;</code> elements (beyond the inherited <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface).</span>\",\"JavaScript files should be served with the <code>application/javascript</code> <a href=\\\"/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\\\">MIME type</a>, but browsers are lenient and block them only if the script is served with an image type (<code>image/*</code>), video type (<code>video/*</code>), audio type (<code>audio/*</code>), or <code>text/csv</code>. If the script is blocked, its element receives an <code><a href=\\\"/en-US/docs/Web/Events/error\\\" title=\\\"/en-US/docs/Web/Events/error\\\">error</a></code> event; otherwise, it receives a <code><a href=\\\"/en-US/docs/Web/Events/load\\\" title=\\\"/en-US/docs/Web/Events/load\\\">load</a></code> event.\"]",
    "properties": [
      {
        "name": "async",
        "overview": "<p>The <code>async</code> and <code>defer</code> attributes are <a href=\"/en-US/docs/JavaScript/Reference/Global_Objects/Boolean\">boolean</a> attributes that control how the script should be executed. <strong>The <code>defer</code> and <code>async</code> attributes must not be specified if the <code>src</code> attribute is absent.</strong></p>\n\n    <p>There are three possible execution modes:</p>\n\n    <ol>\n     <li>If the <code>async</code> attribute is present, then the script will be executed asynchronously as soon as it downloads.</li>\n     <li>If the <code>async</code> attribute is absent but the <code>defer</code> attribute is present, then the script is executed when <a href=\"/en-US/docs/Web/Events/DOMContentLoaded\">the page has finished parsing</a>.</li>\n     <li>If neither attribute is present, then the script is fetched and executed immediately, blocking further parsing of the page.</li>\n    </ol>\n\n    <p>The <code>defer</code> attribute may be specified with the <code>async</code> attribute, so legacy browsers that only support <code>defer</code> (and not <code>async</code>) fall back to the <code>defer</code> behavior instead of the default blocking behavior.</p>\n\n    <div class=\"note\"><strong>Note:</strong> The exact processing details for these attributes are complex, involving many different aspects of HTML, and therefore are scattered throughout the specification. <a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/scripting-1.html#prepare-a-script\" rel=\"noopener\">These algorithms</a> describe the core ideas, but they rely on the parsing rules for <a href=\"/en-US/docs/Web/HTML/Element/script\" title=\"The HTML <script> element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code.\"><code>&lt;script&gt;</code></a>&nbsp;<a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptTag\" rel=\"noopener\">start</a> and <a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptEndTag\" rel=\"noopener\">end</a> tags in HTML, <a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptForeignEndTag\" rel=\"noopener\">in foreign content</a>, and <a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/the-xhtml-syntax.html#scriptTagXML\" rel=\"noopener\">in XML</a>; the rules for the <a href=\"/en-US/docs/DOM/document.write\"><code>document.write()</code></a> method; the handling of <a class=\"external\" href=\"http://www.w3.org/html/wg/drafts/html/master/webappapis.html#scripting\" rel=\"noopener\">scripting</a>; and so on.</div>"
      },
      {
        "name": "charset",
        "overview": "Represents the character encoding of an external script. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/script#attr-charset\">charset</a></code> attribute."
      },
      {
        "name": "crossOrigin",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <a href=\"/en-US/docs/Web/HTML/CORS_settings_attributes\">CORS setting</a> for the script element. For scripts from other <a href=\"/en-US/docs/Glossary/Origin\">origins</a>, this controls if error information will be exposed."
      },
      {
        "name": "defer",
        "overview": null
      },
      {
        "name": "event",
        "overview": "An old, quirky way of registering event handlers on elements in an HTML document."
      },
      {
        "name": "noModule",
        "overview": "This Boolean property stops the script's execution in browsers that support<a class=\"external\" href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\" rel=\"noopener\"> ES2015 modules</a> — used to run fallback scripts in older browsers that do <em>not</em> support JavaScript modules."
      },
      {
        "name": "referrerPolicy",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/script#attr-referrerpolicy\">referrerpolicy</a></code> HTML attribute indicating which referrer to use when fetching the script, and fetches done by that script."
      },
      {
        "name": "src",
        "overview": "Gets and sets the URL of an external script. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/script#attr-src\">src</a></code> attribute."
      },
      {
        "name": "text",
        "overview": "<p>The IDL attribute <code>text</code> joins and returns the contents of all <a href=\"/en-US/docs/DOM/Text\"><code>Text</code> nodes</a> inside the <a href=\"/en-US/docs/Web/HTML/Element/script\" title=\"The HTML <script> element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code.\"><code>&lt;script&gt;</code></a> element (ignoring other nodes like comments) in tree order. On setting, it acts the same way as the <a href=\"/en-US/docs/DOM/Node.textContent\"><code>textContent</code></a> IDL attribute.</p>\n\n    <div class=\"note\"><strong>Note:</strong> When inserted using the <a href=\"/en-US/docs/DOM/document.write\"><code>document.write()</code></a> method, <a href=\"/en-US/docs/Web/HTML/Element/script\" title=\"The HTML <script> element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code.\"><code>&lt;script&gt;</code></a> elements execute (typically synchronously), but when inserted using <a href=\"/en-US/docs/DOM/element.innerHTML\"><code>innerHTML</code></a> or <a href=\"/en-US/docs/DOM/element.outerHTML\"><code>outerHTML</code></a>, they do not execute at all.</div>"
      },
      {
        "name": "type",
        "overview": "Represents the MIME type of the script. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/script#attr-type\">type</a></code> attribute."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLSelectElement",
    "category": "HTMLElements",
    "overview": "[\"The <code><strong>HTMLSelectElement</strong></code> interface represents a <a href=\\\"/en-US/docs/Web/HTML/Element/select\\\" title=\\\"The HTML <select> element represents a control that provides a menu of options\\\"><code>&lt;select&gt;</code></a> HTML Element. These elements also share all of the properties and methods of other HTML elements via the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "autocomplete",
        "overview": null
      },
      {
        "name": "autofocus",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-autofocus\">autofocus</a></code> HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified. "
      },
      {
        "name": "disabled",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-disabled\">disabled</a></code> HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks."
      },
      {
        "name": "form",
        "overview": "An <a href=\"/en-US/docs/Web/API/HTMLFormElement\" title=\"The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\"><code>HTMLFormElement</code></a> referencing the form that this element is associated with. If the element is not associated with of a <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element, then it returns <code>null</code>."
      },
      {
        "name": "labels",
        "overview": "A <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> of <a href=\"/en-US/docs/Web/HTML/Element/label\" title=\"The HTML <label> element represents a caption for an item in a user interface.\"><code>&lt;label&gt;</code></a> elements associated with the element."
      },
      {
        "name": "length",
        "overview": "An <code>unsigned long </code>The number of <a href=\"/en-US/docs/Web/HTML/Element/option\" title=\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\"><code>&lt;option&gt;</code></a> elements in this <code>select</code> element."
      },
      {
        "name": "multiple",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-multiple\">multiple</a></code> HTML attribute, which indicates whether multiple items can be selected."
      },
      {
        "name": "name",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-name\">name</a></code> HTML attribute, containing the name of this control used by servers and DOM search functions."
      },
      {
        "name": "options",
        "overview": "An <a href=\"/en-US/docs/Web/API/HTMLOptionsCollection\" title=\"This interface inherits the methods of its parent,&nbsp;HTMLCollection.\"><code>HTMLOptionsCollection</code></a> representing the set of <a href=\"/en-US/docs/Web/HTML/Element/option\" title=\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\"><code>&lt;option&gt;</code></a> elements contained by this element."
      },
      {
        "name": "required",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-required\">required</a></code> HTML attribute, which indicates whether the user is required to select a value before submitting the form. "
      },
      {
        "name": "selectedIndex",
        "overview": "A <code>long</code> reflecting the index of the first selected <a href=\"/en-US/docs/Web/HTML/Element/option\" title=\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\"><code>&lt;option&gt;</code></a> element. The value <code>-1</code> indicates no element is selected."
      },
      {
        "name": "selectedOptions",
        "overview": "An <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> representing the set of <a href=\"/en-US/docs/Web/HTML/Element/option\" title=\"The HTML <option> element is used to define an item contained in a <select>, an <optgroup>, or a <datalist>&nbsp;element. As such,&nbsp;<option>&nbsp;can represent menu items in popups and other lists of items in an HTML document.\"><code>&lt;option&gt;</code></a> elements that are selected."
      },
      {
        "name": "size",
        "overview": "A <code>long</code> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/select#attr-size\">size</a></code> HTML attribute, which contains the number of visible items in the control. The default is 1, unless <code>multiple</code> is true, in which case it is 4."
      },
      {
        "name": "type",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> represeting the form control's type. When <code>multiple</code> is <code>true</code>, it returns <code>\"select-multiple\"</code>; otherwise, it returns <code>\"select-one\"</code>."
      },
      {
        "name": "validationMessage",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing a localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<code>willValidate</code> is false), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "A <a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> reflecting the validity state that this control is in."
      },
      {
        "name": "value",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the value of the form control. Returns the <code>value</code>&nbsp;property of the first selected option element if there is one, otherwise the empty string."
      },
      {
        "name": "willValidate",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation."
      }
    ],
    "methods": [
      {
        "name": "add",
        "overview": "Adds an element to the collection of <code>option</code> elements for this <code>select</code> element."
      },
      {
        "name": "checkValidity",
        "overview": "Checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable <code><a href=\"/en-US/docs/Web/Events/invalid\" title=\"/en-US/docs/Web/Events/invalid\">invalid</a></code> event at the element (and returns <code>false</code>)."
      },
      {
        "name": "item",
        "overview": "Gets an item from the options collection for this <a href=\"/en-US/docs/Web/HTML/Element/select\" title=\"The HTML <select> element represents a control that provides a menu of options\"><code>&lt;select&gt;</code></a> element. You can also access an item by specifying the index in array-style brackets or parentheses, without calling this method explicitly."
      },
      {
        "name": "namedItem",
        "overview": "Gets the item in the options collection with the specified name. The name string can match either the <code>id</code> or the <code>name</code> attribute of an option node. You can also access an item by specifying the name in array-style brackets or parentheses, without calling this method explicitly."
      },
      {
        "name": "remove",
        "overview": "Removes the element at the specified index from the options collection for this select element."
      },
      {
        "name": "reportValidity",
        "overview": "This method reports the problems with the constraints on the element, if any, to the user. If there are problems, it fires a cancelable <a href=\"/en-US/docs/Web/Events/invalid\">invalid</a> event at the element, and returns <code>false</code>; if there are no problems, it returns <code>true</code>."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does <em>not</em> have a custom validity error."
      }
    ]
  },
  {
    "name": "HTMLSlotElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLSlotElement</code></strong> interface of the <a href=\\\"/en-US/docs/Web/Web_Components/Shadow_DOM\\\">Shadow DOM API</a> enables access to the name and assigned nodes of an HTML <a href=\\\"/en-US/docs/Web/HTML/Element/slot\\\" title=\\\"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\\\"><code>&lt;slot&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "name",
        "overview": "<a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a>: Can be used to get and set the slot's name."
      }
    ],
    "methods": [
      {
        "name": "assignedElements",
        "overview": "Returns a sequence of the elements assigned to this slot (and no other nodes). If the <code>flatten</code> option is set to <code>true</code>, it also returns the assigned elements of any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot's fallback content."
      },
      {
        "name": "assignedNodes",
        "overview": "Returns a sequence of the nodes assigned to this slot, and if the <code>flatten</code> option is set to <code>true</code>, the assigned nodes of any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot's fallback content."
      }
    ]
  },
  {
    "name": "HTMLSourceElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLSourceElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/source\\\" title=\\\"The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.\\\"><code>&lt;source&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "media",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/source#attr-media\">media</a></code> HTML attribute, containing the intended type of the media resource."
      },
      {
        "name": "sizes",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing&nbsp;image sizes between breakpoints"
      },
      {
        "name": "src",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/source#attr-src\">src</a></code> HTML attribute, containing the URL for the media resource. The <a class=\"new\" href=\"/en-US/docs/Web/API/HTMLSourceElement/src\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>HTMLSourceElement.src</code></a> property has a meaning only when the associated <a href=\"/en-US/docs/Web/HTML/Element/source\" title=\"The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.\"><code>&lt;source&gt;</code></a> element is nested in a media element that is a <a href=\"/en-US/docs/Web/HTML/Element/video\" title=\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\"><code>&lt;video&gt;</code></a> or an <a href=\"/en-US/docs/Web/HTML/Element/audio\" title=\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\"><code>&lt;audio&gt;</code></a> element. It has no meaning and is ignored when it is nested in a <a href=\"/en-US/docs/Web/HTML/Element/picture\" title=\"The HTML <picture> element contains zero or more <source> elements and one <img> element to offer alternative versions of an image for different display/device scenarios.\"><code>&lt;picture&gt;</code></a> element.&nbsp;\n <div class=\"note\"><strong>Note</strong>: If the&nbsp;<code>src</code>&nbsp;property is updated (along with any siblings), the parent&nbsp;<a href=\"/en-US/docs/Web/API/HTMLMediaElement\" title=\"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video.\"><code>HTMLMediaElement</code></a>'s&nbsp;<code>load</code> method should be called when done, since&nbsp;<code>&lt;source&gt;</code>&nbsp;elements are not re-scanned automatically.</div>\n "
      },
      {
        "name": "srcset",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/source#attr-srcset\">srcset</a></code> HTML attribute, containing a list of candidate images, separated by a comma (<code>',', U+002C COMMA</code>). A candidate image is a URL followed by a <code>'w'</code> with the width of the images, or an <code>'x'</code> followed by the pixel density."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/source#attr-type\">type</a></code> HTML attribute, containing the type of the media resource."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLSpanElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code><span class=\\\"external\\\">HTMLSpanElement</span></code></strong> interface represents a <a href=\\\"/en-US/docs/Web/HTML/Element/span\\\" title=\\\"The HTML <span> element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang.\\\"><code>&lt;span&gt;</code></a> element and derives from the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface, but without implementing any additional properties or methods.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLStyleElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLStyleElement</code></strong> interface represents a <a href=\\\"/en-US/docs/Web/HTML/Element/style\\\" title=\\\"The HTML <style> element contains style information for a document, or part of a document.\\\"><code>&lt;style&gt;</code></a> element. It inherits properties and methods from its parent, <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a>, and from <a href=\\\"/en-US/docs/Web/API/LinkStyle\\\" title=\\\"The LinkStyle interface provides access to the associated CSS style sheet of a node.\\\"><code>LinkStyle</code></a>.\",\"This interface doesn't allow to manipulate the CSS it contains (in most case). To manipulate CSS, see <a href=\\\"/en-US/docs/Web/API/CSS_Object_Model/Using_dynamic_styling_information\\\">Using dynamic styling information</a> for an overview of the objects used to manipulate specified CSS properties using the DOM.\"]",
    "properties": [
      {
        "name": "media",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the intended destination medium for style information."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the type of style being applied by this statement."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTableCaptionElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableCaptionElement</code></strong> interface special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating table caption elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which represents an enumerated attribute indicating alignment of the caption with respect to the table."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTableCellElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableCellElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.\"]",
    "properties": [
      {
        "name": "abbr",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which can be used on <code>&lt;th&gt;</code> elements (not on <a href=\"/en-US/docs/Web/HTML/Element/td\" title=\"The HTML <td> element defines a cell of a table that contains data. It participates in the table model.\"><code>&lt;td&gt;</code></a>), specifying an alternative label for the header cell.. This alternate label can be used in other contexts, such as when describing the headers that apply to a data cell. This is used to offer a shorter term for use by screen readers in particular, and is a valuable accessibility tool. Usually the value of <code>abbr</code> is an abbreviation or acronym, but can be any text that's appropriate contextually."
      },
      {
        "name": "cellIndex",
        "overview": "A long integer representing the cell's position in the <a class=\"new\" href=\"/en-US/docs/Web/API/HTMLTableRowElement/cells\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>cells</code></a> collection of the <a href=\"/en-US/docs/Web/HTML/Element/tr\" title=\"The HTML <tr> element defines a row of cells in a table. The row's cells can then be established using a mix of <td> (data cell) and <th> (header cell) elements.\"><code>&lt;tr&gt;</code></a> the cell is contained within. If the cell doesn't belong to a <code>&lt;tr&gt;</code>, it returns <code>-1</code>."
      },
      {
        "name": "colSpan",
        "overview": "An unsigned long integer indicating the number of columns this cell must span; this lets the cell occupy space across multiple columns of the table. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/td#attr-colspan\">colspan</a></code> attribute."
      },
      {
        "name": "headers",
        "overview": "Is a <a class=\"new\" href=\"/en-US/docs/Web/API/DOMSettableTokenList\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>DOMSettableTokenList</code></a> describing a list of <code>id</code> of <a href=\"/en-US/docs/Web/HTML/Element/th\" title=\"The HTML <th> element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.\"><code>&lt;th&gt;</code></a> elements that represents headers associated with the cell. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/td#attr-headers\">headers</a></code> attribute."
      },
      {
        "name": "rowSpan",
        "overview": "An unsigned long integer indicating the number of rows this cell must span; this lets a cell occupy space across multiple rows of the table. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/td#attr-rowspan\">rowspan</a></code> attribute."
      },
      {
        "name": "scope",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating the scope of a <a href=\"/en-US/docs/Web/HTML/Element/th\" title=\"The HTML <th> element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.\"><code>&lt;th&gt;</code></a> cell. Header cells can be configured, using the <code>scope</code> property, the apply to a specified row or column, or to the not-yet-scoped cells within the current row group (that is, the same ancestor <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a>, <a href=\"/en-US/docs/Web/HTML/Element/tbody\" title=\"The HTML Table Body element (<tbody>) encapsulates a set of table rows (<tr> elements), indicating that they comprise the body of the table (<table>).\"><code>&lt;tbody&gt;</code></a>, or <a href=\"/en-US/docs/Web/HTML/Element/tfoot\" title=\"The HTML <tfoot> element defines a set of rows summarizing the columns of the table.\"><code>&lt;tfoot&gt;</code></a> element). If no value is specified for <code>scope</code>, the header is not associated directly with cells in this way. Permitted values for <code>scope</code> are:\n\t<dl>\n\t\t<dt><code>col</code></dt>\n\t\t<dd>The header cell applies to the following cells in the same column (or columns, if <code>colspan</code> is used as well), until either the end of the column or another <code>&lt;th&gt;</code> in the column establishes a new scope.</dd>\n\t\t<dt><code>colgroup</code></dt>\n\t\t<dd>The header cell applies to all cells in the current column group that do not already have a scope applied to them. This value is only allowed if the cell is in a column group.</dd>\n\t\t<dt><code>row</code></dt>\n\t\t<dd>The header cell applies to the following cells in the same row (or rows, if <code>rowspan</code> is used as well), until either the end of the row or another <code>&lt;th&gt;</code> in the same row establishes a new scope.</dd>\n\t\t<dt><code>rowgroup</code></dt>\n\t\t<dd>The header cell applies to all cells in the current row group that do not already have a scope applied to them. This value is only allowed if the cell is in a row group.</dd>\n\t\t<dt>The empty string (<code>\"\"</code>)</dt>\n\t\t<dd>The header cell has no predefined scope; the user agent will establish the scope based on contextual clues.</dd>\n\t</dl>\n\t"
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTableColElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableColElement</code></strong> interface provides special properties (beyond the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it inheritance) for manipulating single or grouped table column elements.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Indicates the horizontal alignment of the cell data in the column."
      },
      {
        "name": "ch",
        "overview": "Alignment character for cell data."
      },
      {
        "name": "chOff",
        "overview": "Offset for the alignment character."
      },
      {
        "name": "span",
        "overview": "Reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/col#attr-span\">span</a></code> HTML&nbsp;attribute, indicating the number of columns to apply this object's attributes to. Must be a positive integer."
      },
      {
        "name": "vAlign",
        "overview": "Indicates the vertical alignment of the cell data in the column."
      },
      {
        "name": "width",
        "overview": "Default column width."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTableElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing an enumerated value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-align\">align</a></code> attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, and <code>\"center\"</code>."
      },
      {
        "name": "bgColor",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the background color of the cells. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-bgcolor\">bgcolor</a></code> attribute."
      },
      {
        "name": "border",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the width in pixels of the border of the table. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-border\">border</a></code> attribute."
      },
      {
        "name": "caption",
        "overview": "Is a&nbsp;<a href=\"/en-US/docs/Web/API/HTMLTableCaptionElement\" title=\"The HTMLTableCaptionElement interface special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table caption elements.\"><code>HTMLTableCaptionElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a> that is a child of the element, or <code>null</code> if none is found. When set, if the object doesn't represent a <code>&lt;caption&gt;</code>, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>HierarchyRequestError</code> name is thrown. If a correct object is given, it is inserted in the tree as the first child of this element and the first <code>&lt;caption&gt;</code> that is a child of this element is removed from the tree, if any."
      },
      {
        "name": "cellPadding",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the width in pixels of the horizontal and vertical sapce between cell content and cell borders. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-cellpadding\">cellpadding</a></code> attribute."
      },
      {
        "name": "cellSpacing",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the width in pixels of the horizontal and vertical separation between cells. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-cellspacing\">cellspacing</a></code> attribute."
      },
      {
        "name": "frame",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the type of the external borders of the table. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-frame\">frame</a></code> attribute and can take one of the following values: <code>\"void\"</code>, <code>\"above\"</code>, <code>\"below\"</code>, <code>\"hsides\"</code>, <code>\"vsides\"</code>, <code>\"lhs\"</code>, <code>\"rhs\"</code>, <code>\"box\"</code>, or <code>\"border\"</code>."
      },
      {
        "name": "rows",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing all the rows of the element, that is all <a href=\"/en-US/docs/Web/HTML/Element/tr\" title=\"The HTML <tr> element defines a row of cells in a table. The row's cells can then be established using a mix of <td> (data cell) and <th> (header cell) elements.\"><code>&lt;tr&gt;</code></a> that are a child of the element, or a child or one of its <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a>, <a href=\"/en-US/docs/Web/HTML/Element/tbody\" title=\"The HTML Table Body element (<tbody>) encapsulates a set of table rows (<tr> elements), indicating that they comprise the body of the table (<table>).\"><code>&lt;tbody&gt;</code></a> and <a href=\"/en-US/docs/Web/HTML/Element/tfoot\" title=\"The HTML <tfoot> element defines a set of rows summarizing the columns of the table.\"><code>&lt;tfoot&gt;</code></a> children. The rows members of a <code>&lt;thead&gt;</code> appear first, in tree order, and those members of a <code>&lt;tbody&gt;</code> last, also in tree order. The <code>HTMLCollection</code> is live and is automatically updated when the <code>HTMLTableElement</code> changes."
      },
      {
        "name": "rules",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the type of the internal borders of the table. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-rules\">rules</a></code> attribute and can take one of the following values: <code>\"none\"</code>, <code>\"groups\"</code>, <code>\"rows\"</code>, <code>\"cols\"</code>, or <code>\"all\"</code>."
      },
      {
        "name": "summary",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing a description of the purpose or the structure of the table. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-summary\">summary</a></code> attribute."
      },
      {
        "name": "tBodies",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing all the <a href=\"/en-US/docs/Web/HTML/Element/tbody\" title=\"The HTML Table Body element (<tbody>) encapsulates a set of table rows (<tr> elements), indicating that they comprise the body of the table (<table>).\"><code>&lt;tbody&gt;</code></a> of the element. The <code>HTMLCollection</code> is live and is automatically updated when the <code>HTMLTableElement</code> changes."
      },
      {
        "name": "tFoot",
        "overview": "Is a&nbsp;<a href=\"/en-US/docs/Web/API/HTMLTableSectionElement\" title=\"The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.\"><code>HTMLTableSectionElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/tfoot\" title=\"The HTML <tfoot> element defines a set of rows summarizing the columns of the table.\"><code>&lt;tfoot&gt;</code></a> that is a child of the element, or <code>null</code> if none is found. When set, if the object doesn't represent a <code>&lt;tfoot&gt;</code>, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>HierarchyRequestError</code> name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a>, a <a href=\"/en-US/docs/Web/HTML/Element/colgroup\" title=\"The HTML <colgroup> element defines a group of columns within a table.\"><code>&lt;colgroup&gt;</code></a>, nor a <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a>, or as the last child if there is no such element, and the first <code>&lt;tfoot&gt;</code> that is a child of this element is removed from the tree, if any."
      },
      {
        "name": "tHead",
        "overview": "Is a&nbsp;<a href=\"/en-US/docs/Web/API/HTMLTableSectionElement\" title=\"The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.\"><code>HTMLTableSectionElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a> that is a child of the element, or <code>null</code> if none is found. When set, if the object doesn't represent a <code>&lt;thead&gt;</code>, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>HierarchyRequestError</code> name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a>, nor a <a href=\"/en-US/docs/Web/HTML/Element/colgroup\" title=\"The HTML <colgroup> element defines a group of columns within a table.\"><code>&lt;colgroup&gt;</code></a>, or as the last child if there is no such element, and the first <code>&lt;thead&gt;</code> that is a child of this element is removed from the tree, if any."
      },
      {
        "name": "width",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the length in pixels or in percentage of the desired width fo the entire table. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/table#attr-width\">width</a></code> attribute."
      }
    ],
    "methods": [
      {
        "name": "createCaption",
        "overview": "Returns an <a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a> that is a child of the element. If none is found, a new one is created and inserted in the tree as the first child of the <a href=\"/en-US/docs/Web/HTML/Element/table\" title=\"The HTML <table> element represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.\"><code>&lt;table&gt;</code></a> element."
      },
      {
        "name": "createTBody",
        "overview": "Creates a tbody element, inserts it into the table, and returns it."
      },
      {
        "name": "createTFoot",
        "overview": "Returns an <a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/tfoot\" title=\"The HTML <tfoot> element defines a set of rows summarizing the columns of the table.\"><code>&lt;tfoot&gt;</code></a> that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a>, a <a href=\"/en-US/docs/Web/HTML/Element/colgroup\" title=\"The HTML <colgroup> element defines a group of columns within a table.\"><code>&lt;colgroup&gt;</code></a>, nor a <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a>, or as the last child if there is no such element."
      },
      {
        "name": "createTHead",
        "overview": "Returns an <a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a> representing the first <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a> that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a>, nor a <a href=\"/en-US/docs/Web/HTML/Element/colgroup\" title=\"The HTML <colgroup> element defines a group of columns within a table.\"><code>&lt;colgroup&gt;</code></a>, or as the last child if there is no such element."
      },
      {
        "name": "deleteCaption",
        "overview": "Removes the first <a href=\"/en-US/docs/Web/HTML/Element/caption\" title=\"The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.\"><code>&lt;caption&gt;</code></a> that is a child of the element."
      },
      {
        "name": "deleteRow",
        "overview": "Removes the row corresponding to the <code>index</code> given in parameter. If the <code>index</code> value is <code>-1</code> the last row is removed; if it smaller than <code>-1</code> or greater than the amount of rows in the collection, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the value <code>IndexSizeError</code> is raised."
      },
      {
        "name": "deleteTFoot",
        "overview": "Removes the first <a href=\"/en-US/docs/Web/HTML/Element/tfoot\" title=\"The HTML <tfoot> element defines a set of rows summarizing the columns of the table.\"><code>&lt;tfoot&gt;</code></a> that is a child of the element."
      },
      {
        "name": "deleteTHead",
        "overview": "Removes the first <a href=\"/en-US/docs/Web/HTML/Element/thead\" title=\"The HTML <thead> element defines a set of rows defining the head of the columns of the table.\"><code>&lt;thead&gt;</code></a> that is a child of the element."
      },
      {
        "name": "insertRow",
        "overview": "Returns an <a href=\"/en-US/docs/Web/API/HTMLTableRowElement\" title=\"The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.\"><code>HTMLTableRowElement</code></a> representing a new row of the table. It inserts it in the rows collection immediately before the <a href=\"/en-US/docs/Web/HTML/Element/tr\" title=\"The HTML <tr> element defines a row of cells in a table. The row's cells can then be established using a mix of <td> (data cell) and <th> (header cell) elements.\"><code>&lt;tr&gt;</code></a> element at the given <code>index</code> position. If necessary a <a href=\"/en-US/docs/Web/HTML/Element/tbody\" title=\"The HTML Table Body element (<tbody>) encapsulates a set of table rows (<tr> elements), indicating that they comprise the body of the table (<table>).\"><code>&lt;tbody&gt;</code></a> is created. If the <code>index</code> is <code>-1</code>, the new row is appended to the collection. If the <code>index</code> is smaller than <code>-1</code> or greater than the number of rows in the collection, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the value <code>IndexSizeError</code> is raised."
      }
    ]
  },
  {
    "name": "HTMLTableRowElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableRowElement</code></strong> interface provides special properties and methods (beyond the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing an enumerated value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-align\">align</a></code> attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, and <code>\"center\"</code>."
      },
      {
        "name": "bgColor",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the background color of the cells. It reflects the obsolete <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-bgcolor\">bgcolor</a></code> attribute."
      },
      {
        "name": "cells",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing the cells in the row. The <code>HTMLCollection</code> is live and is automatically updated when cells are added or removed."
      },
      {
        "name": "ch",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing one single character. This character is the one to align all the cell of a column on. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-char\">char</a></code> and default to the decimal points associated with the language, e.g. <code>'.'</code> for English, or <code>','</code> for French. This property was optional and was not very well supported."
      },
      {
        "name": "chOff",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by <code>HTMLTableRowElement.ch</code>. This property was optional and was not very well supported."
      },
      {
        "name": "rowIndex",
        "overview": "Returns a <code>long</code> value which gives the logical position of the row within the entire table. If the row is not part of a table, returns <code>-1</code>."
      },
      {
        "name": "sectionRowIndex",
        "overview": "Returns a <code>long</code> value which gives the logical position of the row within the table section it belongs to. If the row is not part of a section, returns <code>-1</code>."
      },
      {
        "name": "vAlign",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-valign\">valign</a></code> attribute and can have one of the following values: <code>\"top\"</code>, <code>\"middle\"</code>, <code>\"bottom\"</code>, or <code>\"baseline\"</code>."
      }
    ],
    "methods": [
      {
        "name": "deleteCell",
        "overview": "Removes the cell at the given position in the row. If the given position is greater (or equal as it starts at zero) than the amount of cells in the row, or is smaller than <code>0</code>, it raises a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>IndexSizeError</code> value."
      },
      {
        "name": "insertCell",
        "overview": "Inserts a new cell just before the given position in the row. If the given position is not given or is <code>-1</code>, it appends the cell to the row. If the given position is greater (or equal as it starts at zero) than the amount of cells in the row, or is smaller than <code>-1</code>, it raises a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>IndexSizeError</code> value. Returns a reference to a <a href=\"/en-US/docs/Web/API/HTMLTableCellElement\">HTMLTableCellElement [en-US]</a>."
      }
    ]
  },
  {
    "name": "HTMLTableSectionElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTableSectionElement</code></strong> interface provides special properties and methods (beyond the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.\"]",
    "properties": [
      {
        "name": "align",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing an enumerated value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-align\">align</a></code> attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are <code>\"left\"</code>, <code>\"right\"</code>, and <code>\"center\"</code>."
      },
      {
        "name": "ch",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing one single chararcter. This character is the one to align all the cell of a column on. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-char\">char</a></code> and default to the decimal points associated with the language, e.g. <code>'.'</code> for English, or <code>','</code> for French. This property was optional and was not very well supported."
      },
      {
        "name": "chOff",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by <code>HTMLTableRowElement.ch</code>. This property was optional and was not very well supported."
      },
      {
        "name": "rows",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing the rows in the section. The <code>HTMLCollection</code> is live and is automatically updated when rows are added or removed."
      },
      {
        "name": "vAlign",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/tr#attr-valign\">valign</a></code> attribute and can have one of the following values: <code>\"top\"</code>, <code>\"middle\"</code>, <code>\"bottom\"</code>, or <code>\"baseline\"</code>."
      }
    ],
    "methods": [
      {
        "name": "deleteRow",
        "overview": "Removes the cell at the given position in the section. If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than <code>0</code>, it raises a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>IndexSizeError</code> value."
      },
      {
        "name": "insertRow",
        "overview": "Inserts a new row just before the given position in the section. If the given position is not given or is <code>-1</code>, it appends the row to the end of section. If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than <code>-1</code>, it raises a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the <code>IndexSizeError</code> value."
      }
    ]
  },
  {
    "name": "HTMLTemplateElement",
    "category": "HTMLElements",
    "overview": "[\"The <code><strong>HTMLTemplateElement</strong></code> interface enables access to the contents of an HTML <a href=\\\"/en-US/docs/Web/HTML/Element/template\\\" title=\\\"The HTML Content Template (<template>) element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.\\\"><code>&lt;template&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "content",
        "overview": "A read-only <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a> which contains the DOM subtree representing the <a href=\"/en-US/docs/Web/HTML/Element/template\" title=\"The HTML Content Template (<template>) element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.\"><code>&lt;template&gt;</code></a> element's template contents."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTextAreaElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTextAreaElement</code></strong> interface provides special properties and methods for manipulating the layout and presentation of <a href=\\\"/en-US/docs/Web/HTML/Element/textarea\\\" title=\\\"The HTML <textarea> element represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.\\\"><code>&lt;textarea&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "autocomplete",
        "overview": ""
      },
      {
        "name": "autofocus",
        "overview": "<code><em>boolean</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-autofocus\">autofocus</a></code> attribute, indicating that the control should have input focus when the page loads"
      },
      {
        "name": "cols",
        "overview": "<code><em>unsigned long</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-cols\">cols</a></code> attribute, indicating the visible width of the text area."
      },
      {
        "name": "defaultValue",
        "overview": "<code><em>string</em>:</code> Returns / Sets the control's default value, which behaves like the <a href=\"/en-US/docs/Web/API/Node/textContent\" title=\"The textContent property of the Node interface represents the text content of the node and its descendants.\"><code>Node.textContent</code></a> property."
      },
      {
        "name": "disabled",
        "overview": "<code><em>boolean</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-disabled\">disabled</a></code> attribute, indicating that the control is not available for interaction."
      },
      {
        "name": "form",
        "overview": "<code><em>object</em>:</code> Returns a reference to the parent form element. If this element is not contained in a form element, it can be the <code><a href=\"/en-US/docs/Web/HTML/Element/form#attr-id\">id</a></code> attribute of any <a href=\"/en-US/docs/Web/HTML/Element/form\" title=\"The HTML <form> element represents a document section containing interactive controls for submitting information.\"><code>&lt;form&gt;</code></a> element in the same document or the value <code>null</code>."
      },
      {
        "name": "inputMode",
        "overview": ""
      },
      {
        "name": "labels",
        "overview": "<a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a>: Returns a list of label elements associated with this select element."
      },
      {
        "name": "maxLength",
        "overview": "<code><em>long</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-maxlength\">maxlength</a></code> attribute, indicating the maximum number of characters the user can enter. This constraint is evaluated only when the value changes."
      },
      {
        "name": "minLength",
        "overview": "<code><em>long</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-minlength\">minlength</a></code> attribute, indicating the minimum number of characters the user can enter. This constraint is evaluated only when the value changes."
      },
      {
        "name": "name",
        "overview": "<code><em>string</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-name\">name</a></code> attribute, containing the name of the control."
      },
      {
        "name": "placeholder",
        "overview": "<code><em>string</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-placeholder\">placeholder</a></code> attribute, containing a hint to the user about what to enter in the control."
      },
      {
        "name": "readOnly",
        "overview": "<code><em>boolean</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-readonly\">readonly</a></code> attribute, indicating that the user cannot modify the value of the control."
      },
      {
        "name": "required",
        "overview": "<code><em>boolean</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-required\">required</a></code> attribute, indicating that the user must specify a value before submitting the form."
      },
      {
        "name": "rows",
        "overview": "<code><em>unsigned long</em>:</code> Returns / Sets the element's <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-rows\">rows</a></code> attribute, indicating the number of visible text lines for the control."
      },
      {
        "name": "selectionDirection",
        "overview": "<code><em>string</em>:</code> Returns / Sets the direction in which selection occurred. This is <code>\"forward\"</code> if selection was performed in the start-to-end direction of the current locale, or <code>\"backward\"</code> for the opposite direction. This can also be <code>\"none\"</code> if the direction is unknown.\""
      },
      {
        "name": "selectionEnd",
        "overview": "<code><em>unsigned long</em>:</code> Returns / Sets the index of the end of selected text. If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <code>setSelectionRange()</code> had been called with this as the second argument, and <code>selectionStart</code> as the first argument."
      },
      {
        "name": "selectionStart",
        "overview": "<code><em>unsigned long</em>:</code> Returns / Sets the index of the beginning of selected text. If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <code>setSelectionRange()</code> had been called with this as the first argument, and <code>selectionEnd</code> as the second argument."
      },
      {
        "name": "textLength",
        "overview": "<code><em>long</em>:</code> Returns the codepoint length of the control's <code>value</code>. Same as <code>calling value.length</code>"
      },
      {
        "name": "type",
        "overview": "<code><em>string</em>:</code> Returns the string <code>textarea</code>."
      },
      {
        "name": "validationMessage",
        "overview": "<code><em>string</em>:</code> Returns a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<code>willValidate</code> is <code>false</code>), or it satisfies its constraints."
      },
      {
        "name": "validity",
        "overview": "<code><em><a href=\"/en-US/docs/Web/API/ValidityState\" title=\"The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"><code>ValidityState</code></a> object</em>:</code> Returns the validity states that this element is in."
      },
      {
        "name": "value",
        "overview": "<code><em>string</em>:</code> Returns / Sets the raw value contained in the control."
      },
      {
        "name": "willValidate",
        "overview": "<p><code><em>boolean</em>:</code> Returns whether the element is a candidate for constraint validation. <code>false</code> if any conditions bar it from constraint validation, including its <code>readOnly</code> or <code>disabled</code> property is <code>true</code>.</p>"
      },
      {
        "name": "wrap",
        "overview": "<code><em>string</em>:</code> Returns / Sets the <code><a href=\"/en-US/docs/Web/HTML/Element/textarea#attr-wrap\">wrap</a></code> HTML attribute, indicating how the control wraps text."
      }
    ],
    "methods": [
      {
        "name": "checkValidity",
        "overview": "Returns <code>false</code> if the button is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires a cancelable <code>invalid</code> event at the control. It returns <code>true</code> if the control is not a candidate for constraint validation, or if it satisfies its constraints."
      },
      {
        "name": "reportValidity",
        "overview": "<p>This method reports the problems with the constraints on the element, if any, to the user. If there are problems, it fires a cancelable <code>invalid</code> event at the element, and returns <code>false</code>; if there are no problems, it returns <code>true</code>.</p>"
      },
      {
        "name": "select",
        "overview": "Selects the contents of the control."
      },
      {
        "name": "setCustomValidity",
        "overview": "Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate."
      },
      {
        "name": "setRangeText",
        "overview": "Replaces a range of text in the element with new text."
      },
      {
        "name": "setSelectionRange",
        "overview": "Selects a range of text in the element (but does not focus it)."
      }
    ]
  },
  {
    "name": "HTMLTimeElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTimeElement</code></strong> interface provides special properties (beyond the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\\\"/en-US/docs/Web/HTML/Element/time\\\" title=\\\"The HTML <time> element represents a specific period in time.\\\"><code>&lt;time&gt;</code></a> elements.\"]",
    "properties": [
      {
        "name": "dateTime",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/time#attr-datetime\">datetime</a></code> HTML attribute, containing a machine-readable form of the element's date and time value."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTitleElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLTitleElement</code></strong> interface contains the title for a document. This element inherits all of the properties and methods of the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface.\"]",
    "properties": [
      {
        "name": "text",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the text of the document's title."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLTrackElement",
    "category": "HTMLElements",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>HTMLTrackElement</code></strong> interface represents an <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/HTML\\\" title=\\\"HTML: HTML (HyperText Markup Language) is a descriptive language that specifies webpage structure.\\\">HTML</a> <a href=\\\"/en-US/docs/Web/HTML/Element/track\\\" title=\\\"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML).\\\"><code>&lt;track&gt;</code></a> element within the <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/DOM\\\" title=\\\"DOM: The DOM (Document Object Model) is an API that represents and interacts with any HTML or XML document. The DOM is a document model loaded in the browser and representing the document as a node tree, where each node represents part of the document (e.g. an element, text string, or comment).\\\">DOM</a>. This element can be used as a child of either <a href=\\\"/en-US/docs/Web/HTML/Element/audio\\\" title=\\\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\\\"><code>&lt;audio&gt;</code></a> or <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a> to specify a text track containing information such as closed captions or subtitles.</span>\"]",
    "properties": [
      {
        "name": "default",
        "overview": "A <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-default\">default</a></code>&nbsp; attribute,&nbsp;indicating&nbsp;that the track is to be enabled if the user's preferences do not indicate that another track would be more appropriate."
      },
      {
        "name": "kind",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-kind\">kind</a></code>&nbsp;HTML attribute,&nbsp;indicating&nbsp;how the text track is meant to be used. Possible values are: <code>subtitles</code>, <code>captions</code>, <code>descriptions</code>, <code>chapters</code>, or <code>metadata</code>."
      },
      {
        "name": "label",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the&nbsp;<code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-label\">label</a></code>&nbsp;HTML attribute,&nbsp;indicating&nbsp;a user-readable title for the track."
      },
      {
        "name": "readyState",
        "overview": "Returns&nbsp; an <code>unsigned short</code> that show the readiness state of the track:\n <table class=\"standard-table\">\n  <tbody>\n   <tr>\n    <td class=\"header\">Constant</td>\n    <td class=\"header\">Value</td>\n    <td class=\"header\">Description</td>\n   </tr>\n   <tr>\n    <td><code>NONE</code></td>\n    <td>0</td>\n    <td>Indicates that the text track's cues have not been obtained.</td>\n   </tr>\n   <tr>\n    <td><code>LOADING</code></td>\n    <td>1</td>\n    <td>Indicates that the text track is loading and there have been no fatal errors encountered so far. Further cues might still be added to the track by the parser.</td>\n   </tr>\n   <tr>\n    <td><code>LOADED</code></td>\n    <td>2</td>\n    <td>Indicates that the text track has been loaded with no fatal errors.</td>\n   </tr>\n   <tr>\n    <td><code>ERROR</code></td>\n    <td>3</td>\n    <td>Indicates that the text track was enabled, but when the user agent attempted to obtain it, this failed in some way. Some or all of the cues are likely missing and will not be obtained.</td>\n   </tr>\n  </tbody>\n </table>\n "
      },
      {
        "name": "src",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the&nbsp;<code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-src\">src</a></code>&nbsp;HTML attribute, indicating the address of the text track data."
      },
      {
        "name": "srclang",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the&nbsp;<code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-srclang\">srclang</a></code>&nbsp;HTML attribute,&nbsp;indicating the language of the text track data."
      },
      {
        "name": "track",
        "overview": "Returns <a href=\"/en-US/docs/Web/API/TextTrack\" title=\"This interface also inherits properties from EventTarget.\"><code>TextTrack</code></a> is the track element's text track data."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLUListElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLUListElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating unordered list elements.\"]",
    "properties": [
      {
        "name": "compact",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> indicating that spacing between list items should be reduced. This property reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/ul#attr-compact\">compact</a></code> attribute only, it doesn't consider the <a href=\"/en-US/docs/Web/CSS/line-height\" title=\"The line-height CSS property sets the height of a line box. It's commonly used to set the distance between lines of text.\"><code>line-height</code></a> CSS property used for that behavior in modern pages."
      },
      {
        "name": "type",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> value reflecting the <code><a href=\"/en-US/docs/Web/HTML/Element/ul#attr-type\">type</a></code> and defining the kind of marker to be used to display. The values are browser dependent and have never been standardized."
      }
    ],
    "methods": []
  },
  {
    "name": "HTMLUnknownElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLUnknownElement</code></strong> interface represents an invalid HTML element and derives from the <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a> interface, but without implementing any additional properties or methods.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "HTMLVideoElement",
    "category": "HTMLElements",
    "overview": "[\"The <strong><code>HTMLVideoElement</code></strong> interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement\\\" title=\\\"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video.\\\"><code>HTMLMediaElement</code></a> and <a href=\\\"/en-US/docs/Web/API/HTMLElement\\\" title=\\\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\\\"><code>HTMLElement</code></a>.\",\"The list of <a href=\\\"/en-US/docs/HTML/Supported_media_formats\\\">supported media formats</a> varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.\"]",
    "properties": [
      {
        "name": "height",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-height\">height</a></code> HTML attribute, which specifies the height of the display area, in CSS pixels."
      },
      {
        "name": "poster",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-poster\">poster</a></code> HTML attribute, which specifies an image to show while no video data is available."
      },
      {
        "name": "videoHeight",
        "overview": "Returns an unsigned integer value indicating the intrinsic height of the resource in CSS pixels, or 0 if no media is available yet."
      },
      {
        "name": "videoWidth",
        "overview": "Returns an unsigned integer value indicating the intrinsic width of the resource in CSS pixels, or 0 if no media is available yet."
      },
      {
        "name": "width",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that reflects the <code><a href=\"/en-US/docs/Web/HTML/Element/video#attr-width\">width</a></code> HTML attribute, which specifies the width of the display area, in CSS pixels."
      }
    ],
    "methods": [
      {
        "name": "getVideoPlaybackQuality",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\" title=\"A VideoPlaybackQuality object is returned by the HTMLVideoElement.getVideoPlaybackQuality() method and contains metrics that can be used to determine the playback quality of a video.\"><code>VideoPlaybackQuality</code></a> object that contains the current playback metrics. This information includes things like the number of dropped or corrupted frames, as well as the total number of frames."
      }
    ]
  },
  {
    "name": "LinkStyle",
    "category": "CherryPicked",
    "overview": "[\"The <code><strong>LinkStyle</strong></code> interface provides access to the <em>associated CSS style sheet</em> of a node.\",\"<code>LinkStyle</code> is a raw interface and no object of this type can be created; it is implemented by <a href=\\\"/en-US/docs/Web/API/HTMLLinkElement\\\" title=\\\"The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice-versa (corresponds to <link> element; not to be confused with <a>, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface.\\\"><code>HTMLLinkElement</code></a> and <a href=\\\"/en-US/docs/Web/API/HTMLStyleElement\\\" title=\\\"The HTMLStyleElement interface represents a <style> element. It inherits properties and methods from its parent, HTMLElement, and from LinkStyle.\\\"><code>HTMLStyleElement</code></a> objects.\"]",
    "properties": [
      {
        "name": "sheet",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/CSSStyleSheet\" title=\"The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet.\"><code>CSSStyleSheet</code></a> object associated with the given element, or <code>null</code> if there is none."
      }
    ],
    "methods": []
  },
  {
    "name": "Location",
    "category": "PageHistory",
    "overview": "[\"The <strong><code>Location</code></strong> interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> and <a href=\\\"/en-US/docs/Web/API/Window\\\" title=\\\"The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window.\\\"><code>Window</code></a> interface have such a linked <code>Location</code>, accessible via <a href=\\\"/en-US/docs/Web/API/Document/location\\\" title=\\\"The Document.location read-only property returns a Location object, which contains information about the URL of the document and provides methods for changing that URL and loading another URL.\\\"><code>Document.location</code></a> and <a href=\\\"/en-US/docs/Web/API/Window/location\\\" title=\\\"The Window.location read-only property returns a Location object with information about the current location of the document.\\\"><code>Window.location</code></a> respectively.\"]",
    "properties": [
      {
        "name": "hash",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing a <code>'#'</code> followed by the fragment identifier of the URL."
      },
      {
        "name": "host",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the host, that is the <em>hostname</em>, a <code>':'</code>, and the <em>port</em> of the URL."
      },
      {
        "name": "hostname",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the domain of the URL."
      },
      {
        "name": "href",
        "overview": "Is a stringifier that returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the entire URL. If changed, the associated document navigates to the new page. It can be set from a different origin than the associated document."
      },
      {
        "name": "origin",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the canonical form of the origin of the specific location."
      },
      {
        "name": "pathname",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing an initial <code>'/'</code> followed by the path of the URL."
      },
      {
        "name": "port",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the port number of the URL."
      },
      {
        "name": "protocol",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the protocol scheme of the URL, including the final <code>':'</code>."
      },
      {
        "name": "search",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing a <code>'?'</code> followed by the parameters or \"querystring\" of the URL. Modern browsers provide <a href=\"/en-US/docs/Web/API/URLSearchParams/get#Example\">URLSearchParams</a> and <a href=\"/en-US/docs/Web/API/URL/searchParams#Example\">URL.searchParams</a> to make it easy to parse out the parameters from the querystring."
      }
    ],
    "methods": [
      {
        "name": "assign",
        "overview": "Loads the resource at the URL provided in parameter."
      },
      {
        "name": "reload",
        "overview": "Reloads the resource from the current URL. Its optional unique parameter is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a>, which, when it is <code>true</code>, causes the page to always be reloaded from the server. If it is <code>false</code> or not specified, the browser may reload the page from its cache."
      },
      {
        "name": "replace",
        "overview": "Replaces the current resource with the one at the provided URL. The difference from the <code>assign()</code> method is that after using <code>replace()</code> the current page will not be saved in session <a href=\"/en-US/docs/Web/API/History\" title=\"The History interface allows&nbsp;manipulation of&nbsp;the browser session history, that is the pages visited in the tab or frame that the current page is loaded in.\"><code>History</code></a>, meaning the user won't be able to use the <em>back</em> button to navigate to it."
      },
      {
        "name": "toString",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/USVString\" title=\"USVString corresponds to the set of all possible sequences of unicode scalar values. USVString maps to a String when returned in JavaScript; it's generally only used for APIs that perform text processing and need a string of unicode scalar values to operate on. USVString is equivalent to DOMString except for not allowing unpaired surrogate codepoints. Unpaired surrogate codepoints present in USVString are converted by the browser to Unicode 'replacement character' U+FFFD, (�).\"><code>USVString</code></a> containing the whole URL. It is a synonym for <a href=\"/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href\" title=\"The HTMLHyperlinkElementUtils.href property is a stringifier that returns a USVString containing the whole URL, and allows the href to be updated.\"><code>HTMLHyperlinkElementUtils.href</code></a>, though it can't be used to modify the value."
      }
    ]
  },
  {
    "name": "MediaError",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>MediaError</strong></code> interface represents an error which occurred while handling media in an HTML media element based on <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement\\\" title=\\\"The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video.\\\"><code>HTMLMediaElement</code></a>, such as <a href=\\\"/en-US/docs/Web/HTML/Element/audio\\\" title=\\\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\\\"><code>&lt;audio&gt;</code></a> or <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a>.</span>\",\"A <code>MediaError</code> object describes the error in general terms using a numeric <code>code</code> categorizing the kind of error, and a <code>message</code>, which provides specific diagnostics about what went wrong.\"]",
    "properties": [
      {
        "name": "code",
        "overview": "A number which represents the general type of error that occurred, as follows: <table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Value</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>MEDIA_ERR_ABORTED</code></td>\n   <td><code>1</code></td>\n   <td>The fetching of the associated resource was aborted by the user's request.</td>\n  </tr>\n  <tr>\n   <td><code>MEDIA_ERR_NETWORK</code></td>\n   <td><code>2</code></td>\n   <td>Some kind of network error occurred which prevented the media from being successfully fetched, despite having previously been available.</td>\n  </tr>\n  <tr>\n   <td><code>MEDIA_ERR_DECODE</code></td>\n   <td><code>3</code></td>\n   <td>Despite having previously been determined to be usable, an error occurred while trying to decode the media resource, resulting in an error.</td>\n  </tr>\n  <tr>\n   <td><code>MEDIA_ERR_SRC_NOT_SUPPORTED</code></td>\n   <td><code>4</code></td>\n   <td>The associated resource or media provider object (such as a <a href=\"/en-US/docs/Web/API/MediaStream\" title=\"The MediaStream interface represents a stream of media content. A stream consists of several tracks such as&nbsp;video or audio tracks. Each track is specified as an instance of MediaStreamTrack.\"><code>MediaStream</code></a>) has been found to be unsuitable.</td>\n  </tr>\n </tbody>\n</table>"
      },
      {
        "name": "message",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> object containing a human-readable string which provides <em>specific diagnostic information</em> to help the reader understand the error condition which occurred; specifically, it isn't simply a summary of what the error code means, but actual diagnostic information to help in understanding what exactly went wrong. This text and its format is not defined by the specification and will vary from one <a class=\"glossaryLink\" href=\"/en-US/docs/Glossary/user_agent\" title=\"user agent: A user agent is a computer program representing a person, for example, a browser in a Web context.\">user agent</a> to another. If no diagnostics are available, or no explanation can be provided, this value is an empty string (<code>\"\"</code>)."
      }
    ],
    "methods": []
  },
  {
    "name": "MediaKeySession",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "closed",
        "overview": null
      },
      {
        "name": "expiration",
        "overview": null
      },
      {
        "name": "keyStatuses",
        "overview": null
      },
      {
        "name": "onkeystatuseschange",
        "overview": null
      },
      {
        "name": "onmessage",
        "overview": null
      },
      {
        "name": "sessionId",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "close",
        "overview": null
      },
      {
        "name": "generateRequest",
        "overview": null
      },
      {
        "name": "load",
        "overview": null
      },
      {
        "name": "remove",
        "overview": null
      },
      {
        "name": "update",
        "overview": null
      }
    ]
  },
  {
    "name": "MediaKeys",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "createSession",
        "overview": null
      },
      {
        "name": "setServerCertificate",
        "overview": null
      }
    ]
  },
  {
    "name": "MediaList",
    "category": "CherryPicked",
    "overview": "[\"The <code><strong>MediaList</strong></code> interface represents the media queries of a stylesheet, e.g. those set using a <a href=\\\"/en-US/docs/Web/HTML/Element/link\\\" title=\\\"The HTML External Resource Link element (<link>) specifies relationships between the current document and an external resource. This element is most commonly used to link to stylesheets, but is also used to establish site icons (both &quot;favicon&quot; style icons and icons for the home screen and apps on mobile devices) among other things.\\\"><code>&lt;link&gt;</code></a> element's <code>media</code> attribute.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Returns the number of media queries in the <code>MediaList</code>."
      },
      {
        "name": "mediaText",
        "overview": "A stringifier that returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the <code>MediaList</code> as text, and also allows you to set a new <code>MediaList</code>."
      }
    ],
    "methods": [
      {
        "name": "appendMedium",
        "overview": "Adds a media query to the <code>MediaList</code>."
      },
      {
        "name": "deleteMedium",
        "overview": "Removes a media query from the <code>MediaList</code>."
      },
      {
        "name": "item",
        "overview": "A getter that returns a <a href=\"/en-US/docs/Web/API/CSSOMString\" title=\"CSSOMString is used to denote string data in CSSOM specifications and can refer to either DOMString or USVString. When a specification says CSSOMString, it depends on the browser vendors to choose whether to use DOMString or USVString. While browser implementations that use UTF-8 internally to represent strings in memory can use USVString when the specification says CSSOMString, implementations that already represent strings as 16-bit sequences might choose to use DOMString instead.\"><code>CSSOMString</code></a> representing a media query as text, given the media query's index value inside the <code>MediaList</code>."
      }
    ]
  },
  {
    "name": "NamedNodeMap",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>NamedNodeMap</strong></code> interface represents a collection of <a href=\\\"/en-US/docs/Web/API/Attr\\\" title=\\\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\\\"><code>Attr</code></a> objects. Objects inside a <code>NamedNodeMap</code> are not in any particular order, unlike <a href=\\\"/en-US/docs/Web/API/NodeList\\\" title=\\\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\\\"><code>NodeList</code></a>, although they may be accessed by an index as in an array.\",\"A <code>NamedNodeMap</code> object is <em>live</em> and will thus be auto-updated if changes are made to its contents internally or elsewhere.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Returns the amount of objects in the map."
      }
    ],
    "methods": [
      {
        "name": "getNamedItem",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a>, corresponding to the given name."
      },
      {
        "name": "getNamedItemNS",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> identified by a namespace and related local name."
      },
      {
        "name": "item",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> at the given index, or <code>null</code> if the index is higher or equal to the number of nodes."
      },
      {
        "name": "removeNamedItem",
        "overview": "Removes the <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> identified by the given map."
      },
      {
        "name": "removeNamedItemNS",
        "overview": "Removes the <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> identified by the given namespace and related local name."
      },
      {
        "name": "setNamedItem",
        "overview": "Replaces, or adds, the <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> identified in the map by the given name."
      },
      {
        "name": "setNamedItemNS",
        "overview": "Replaces, or adds, the <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> identified in the map by the given namespace and related local name."
      }
    ]
  },
  {
    "name": "Node",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\"><strong><code>Node</code></strong> is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.</span>\",\"All of the following interfaces inherit the <code>Node</code> interface's methods and properties: <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a>, <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a>, <a href=\\\"/en-US/docs/Web/API/Attr\\\" title=\\\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\\\"><code>Attr</code></a>, <a href=\\\"/en-US/docs/Web/API/CharacterData\\\" title=\\\"The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract.\\\"><code>CharacterData</code></a> (which <a href=\\\"/en-US/docs/Web/API/Text\\\" title=\\\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\\\"><code>Text</code></a>, <a href=\\\"/en-US/docs/Web/API/Comment\\\" title=\\\"The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\\\"><code>Comment</code></a>, and <a href=\\\"/en-US/docs/Web/API/CDATASection\\\" title=\\\"The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and &amp; don’t need escaping as they normally do when inside a CDATA section.\\\"><code>CDATASection</code></a> inherit), <a href=\\\"/en-US/docs/Web/API/ProcessingInstruction\\\" title=\\\"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\\\"><code>ProcessingInstruction</code></a>, <a href=\\\"/en-US/docs/Web/API/DocumentFragment\\\" title=\\\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\\\"><code>DocumentFragment</code></a>, <a href=\\\"/en-US/docs/Web/API/DocumentType\\\" title=\\\"The DocumentType interface represents a Node containing a doctype.\\\"><code>DocumentType</code></a>, <a href=\\\"/en-US/docs/Web/API/Notation\\\" title=\\\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\\\"><code>Notation</code></a>, <a class=\\\"new\\\" href=\\\"/en-US/docs/Web/API/Entity\\\" rel=\\\"nofollow\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>Entity</code></a>, <a class=\\\"new\\\" href=\\\"/en-US/docs/Web/API/EntityReference\\\" rel=\\\"nofollow\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>EntityReference</code></a>\",\"Those interfaces may return <code>null</code> in certain cases where the methods and properties are not relevant. They may throw an exception — for example when adding children to a node type for which no children can exist.\"]",
    "properties": [
      {
        "name": "baseURI",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the base URL of the document containing the <code>Node</code>."
      },
      {
        "name": "childNodes",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> containing all the children of this node. <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> being live means that if the children of the <code>Node</code> change, the <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> object is automatically updated."
      },
      {
        "name": "firstChild",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the first direct child node of the node, or <code>null</code> if the node has no child."
      },
      {
        "name": "isConnected",
        "overview": "A boolean indicating whether or not the Node is connected (directly or indirectly) to the context object, e.g. the <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a> object in the case of the normal DOM, or the <a href=\"/en-US/docs/Web/API/ShadowRoot\" title=\"The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.\"><code>ShadowRoot</code></a> in the case of a shadow DOM."
      },
      {
        "name": "lastChild",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the last direct child node of the node, or <code>null</code> if the node has no child."
      },
      {
        "name": "nextSibling",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the next node in the tree, or <code>null</code> if there isn't such node."
      },
      {
        "name": "nodeName",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the name of the <code>Node</code>. The structure of the name will differ with the node type. E.g. An <a href=\"/en-US/docs/Web/API/HTMLElement\" title=\"The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\"><code>HTMLElement</code></a> will contain the name of the corresponding tag, like <code>'audio'</code> for an <a href=\"/en-US/docs/Web/API/HTMLAudioElement\" title=\"The HTMLAudioElement interface provides access to the properties of <audio> elements, as well as methods to manipulate them.\"><code>HTMLAudioElement</code></a>, a <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> node will have the <code>'#text'</code> string, or a <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a> node will have the <code>'#document'</code> string."
      },
      {
        "name": "nodeType",
        "overview": "Returns an <code>unsigned short</code> representing the type of the node. Possible values are:\n\t<table class=\"standard-table\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t<th scope=\"col\">Value</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td><code>ELEMENT_NODE</code></td>\n\t\t\t\t<td><code>1</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ATTRIBUTE_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>2</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>TEXT_NODE</code></td>\n\t\t\t\t<td><code>3</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>CDATA_SECTION_NODE</code></td>\n\t\t\t\t<td><code>4</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ENTITY_REFERENCE_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>5</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ENTITY_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>6</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>PROCESSING_INSTRUCTION_NODE</code></td>\n\t\t\t\t<td><code>7</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>COMMENT_NODE</code></td>\n\t\t\t\t<td><code>8</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_NODE</code></td>\n\t\t\t\t<td><code>9</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_TYPE_NODE</code></td>\n\t\t\t\t<td><code>10</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_FRAGMENT_NODE</code></td>\n\t\t\t\t<td><code>11</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NOTATION_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>12</code></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t"
      },
      {
        "name": "nodeValue",
        "overview": "Returns / Sets the value of the current node."
      },
      {
        "name": "ownerDocument",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a> that this node belongs to. If the node is itself a document, returns <code>null</code>."
      },
      {
        "name": "parentElement",
        "overview": "Returns an <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> that is the parent of this node. If the node has no parent, or if that parent is not an <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a>, this property returns <code>null</code>."
      },
      {
        "name": "parentNode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns <code>null</code>."
      },
      {
        "name": "previousSibling",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the previous node in the tree, or <code>null</code> if there isn't such node."
      },
      {
        "name": "textContent",
        "overview": "Returns / Sets the textual content of an element and all its descendants."
      }
    ],
    "methods": [
      {
        "name": "appendChild",
        "overview": "Adds the specified <code><var>childNode</var></code> argument as the last child to the current node.<br>\n\tIf the argument referenced an existing node on the DOM tree, the node will be detached from its current position and attached at the new position."
      },
      {
        "name": "cloneNode",
        "overview": "Clone a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>, and optionally, all of its contents. By default, it clones the content of the node."
      },
      {
        "name": "compareDocumentPosition",
        "overview": "Compares the position of the current node against another node in any other document."
      },
      {
        "name": "contains",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> value indicating whether or not a node is a descendant of the calling node."
      },
      {
        "name": "getRootNode",
        "overview": "Returns the context object's root which optionally includes the shadow root if it is available.&nbsp;"
      },
      {
        "name": "hasChildNodes",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating whether or not the element has any child nodes."
      },
      {
        "name": "insertBefore",
        "overview": "Inserts a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>&nbsp;before the reference node as a child of a specified parent node."
      },
      {
        "name": "isDefaultNamespace",
        "overview": "Accepts a namespace URI as an argument and returns a&nbsp;<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a>&nbsp;with a value of&nbsp;<code>true</code>&nbsp;if the namespace is the default namespace on the given node or&nbsp;<code>false</code>&nbsp;if not."
      },
      {
        "name": "isEqualNode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> which indicates whether or not two nodes are of the same type and all their defining data points match."
      },
      {
        "name": "isSameNode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> value indicating whether or not the two nodes are the same (that is, they reference the same object)."
      },
      {
        "name": "lookupNamespaceURI",
        "overview": "Accepts a prefix and returns the namespace URI associated with it on the given node if found (and&nbsp;<code>null</code>&nbsp;if not). Supplying&nbsp;<code>null</code>&nbsp;for the prefix will return the default namespace."
      },
      {
        "name": "lookupPrefix",
        "overview": "Returns a&nbsp;<a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the prefix for a given namespace URI, if present, and&nbsp;<code>null</code>&nbsp;if not. When multiple prefixes are possible, the result is implementation-dependent."
      },
      {
        "name": "normalize",
        "overview": "Clean up all the text nodes under this element (merge adjacent, remove empty)."
      },
      {
        "name": "removeChild",
        "overview": "Removes a child node from the current element, which must be a child of the current node."
      },
      {
        "name": "replaceChild",
        "overview": "Replaces one child <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> of the current one with the second one given in parameter."
      }
    ]
  },
  {
    "name": "NodeFilter",
    "category": "DOMCore",
    "overview": "[\"A <strong><code>NodeFilter</code></strong> interface represents an object used to filter the nodes in a <a href=\\\"/en-US/docs/Web/API/NodeIterator\\\" title=\\\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\\\"><code>NodeIterator</code></a> or <a href=\\\"/en-US/docs/Web/API/TreeWalker\\\" title=\\\"The TreeWalker object represents the nodes of a document subtree and a position within them.\\\"><code>TreeWalker</code></a>. They don't know anything about the DOM or how to traverse nodes; they just know how to evaluate a single node against the provided filter.\"]",
    "properties": [],
    "methods": [
      {
        "name": "acceptNode",
        "overview": "Returns an <code>unsigned short</code> that will be used to tell if a given <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> must be accepted or not by the <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> or <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> iteration algorithm. This method is expected to be written by the user of a <code>NodeFilter</code>. Possible return values are:\n\t<table class=\"standard-table\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td class=\"header\">Constant</td>\n\t\t\t\t<td class=\"header\">Description</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>FILTER_ACCEPT</code></td>\n\t\t\t\t<td>Value returned by the <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" title=\"The NodeFilter.acceptNode() method returns an unsigned short that will be used to tell if a given Node must be accepted or not by the NodeIterator or TreeWalker iteration algorithm. This method is expected to be written by the user of a NodeFilter. Possible return values are:\"><code>NodeFilter.acceptNode()</code></a> method when a node should be accepted.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>FILTER_REJECT</code></td>\n\t\t\t\t<td>Value to be returned by the <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" title=\"The NodeFilter.acceptNode() method returns an unsigned short that will be used to tell if a given Node must be accepted or not by the NodeIterator or TreeWalker iteration algorithm. This method is expected to be written by the user of a NodeFilter. Possible return values are:\"><code>NodeFilter.acceptNode()</code></a> method when a node should be rejected. For&nbsp;<a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a>, child nodes are also rejected. For&nbsp;<a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a>, this flag is synonymous with FILTER_SKIP.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>FILTER_SKIP</code></td>\n\t\t\t\t<td>Value to be returned by <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" title=\"The NodeFilter.acceptNode() method returns an unsigned short that will be used to tell if a given Node must be accepted or not by the NodeIterator or TreeWalker iteration algorithm. This method is expected to be written by the user of a NodeFilter. Possible return values are:\"><code>NodeFilter.acceptNode()</code></a> for nodes to be skipped by the <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> or <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> object. The children of skipped nodes are still considered. This is treated as \"skip this node but not its children\".</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t"
      }
    ]
  },
  {
    "name": "NodeIterator",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>NodeIterator</code></strong> interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.</span>\"]",
    "properties": [
      {
        "name": "filter",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NodeFilter\" title=\"A NodeFilter interface represents an object used to filter the nodes in a NodeIterator or TreeWalker. They don't know anything about the DOM or how to traverse nodes; they just know how to evaluate a single node against the provided filter.\"><code>NodeFilter</code></a> used to select the relevant nodes."
      },
      {
        "name": "pointerBeforeReferenceNode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> flag that indicates whether the <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> is anchored before, the flag being <code>true</code>, or after, the flag being <code>false</code>, the anchor node."
      },
      {
        "name": "referenceNode",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to which the iterator is anchored."
      },
      {
        "name": "root",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the root node as specified when the <code>NodeIterator</code> was created."
      },
      {
        "name": "whatToShow",
        "overview": "\n\t<p>Returns an <code>unsigned long</code> being a bitmask made of constants describing the types of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant.</p>\n\n\t<p>The possible values are:</p>\n\n\t<table class=\"standard-table\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th class=\"header\" scope=\"col\">Constant</th>\n\t\t\t\t<th class=\"header\" scope=\"col\">Numerical value</th>\n\t\t\t\t<th class=\"header\" scope=\"col\">Description</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_ALL</code></td>\n\t\t\t\t<td><code>-1</code> (that is the max value of <code>unsigned long</code>)</td>\n\t\t\t\t<td>Shows all nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_ATTRIBUTE</code> <span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span></td>\n\t\t\t\t<td><code>2</code></td>\n\t\t\t\t<td>Shows attribute <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> with an <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_CDATA_SECTION</code> <span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span></td>\n\t\t\t\t<td><code>8</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/CDATASection\" title=\"The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and &amp; don’t need escaping as they normally do when inside a CDATA section.\"><code>CDATASection</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_COMMENT</code></td>\n\t\t\t\t<td><code>128</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/Comment\" title=\"The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\"><code>Comment</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_DOCUMENT</code></td>\n\t\t\t\t<td><code>256</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_DOCUMENT_FRAGMENT</code></td>\n\t\t\t\t<td><code>1024</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_DOCUMENT_TYPE</code></td>\n\t\t\t\t<td><code>512</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/DocumentType\" title=\"The DocumentType interface represents a Node containing a doctype.\"><code>DocumentType</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_ELEMENT</code></td>\n\t\t\t\t<td><code>1</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_ENTITY</code> <span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span></td>\n\t\t\t\t<td><code>32</code></td>\n\t\t\t\t<td>Shows <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a>&nbsp;nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> with an <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a> node as its root; in this case, it means that the <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_ENTITY_REFERENCE</code> <span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span></td>\n\t\t\t\t<td><code>16</code></td>\n\t\t\t\t<td>Shows <a class=\"new\" href=\"/en-US/docs/Web/API/EntityReference\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>EntityReference</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_NOTATION</code> <span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span></td>\n\t\t\t\t<td><code>2048</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/NodeIterator\" title=\"The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\"><code>NodeIterator</code></a> with a <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> node as its root; in this case, it means that the <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_PROCESSING_INSTRUCTION</code></td>\n\t\t\t\t<td><code>64</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/ProcessingInstruction\" title=\"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\"><code>ProcessingInstruction</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NodeFilter.SHOW_TEXT</code></td>\n\t\t\t\t<td><code>4</code></td>\n\t\t\t\t<td>Shows <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a>&nbsp;nodes.</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t"
      }
    ],
    "methods": [
      {
        "name": "detach",
        "overview": "This operation is a no-op. It doesn't do anything. Previously it was telling the engine that the <code>NodeIterator</code> was no more used, but this is now useless."
      },
      {
        "name": "nextNode",
        "overview": "Returns the next <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in the document, or <code>null</code> if there are none."
      },
      {
        "name": "previousNode",
        "overview": "Returns the previous <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in the document, or <code>null</code> if there are none."
      }
    ]
  },
  {
    "name": "NodeList",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\"><strong><code>NodeList</code></strong> objects are collections of <a href=\\\"/en-US/docs/Glossary/Node/DOM\\\">nodes</a>, usually returned by properties such as <a href=\\\"/en-US/docs/Web/API/Node/childNodes\\\" title=\\\"The Node.childNodes read-only property returns a live NodeList of child nodes of the given element where the first child node is assigned index 0.\\\"><code>Node.childNodes</code></a> and methods such as <a href=\\\"/en-US/docs/Web/API/Document/querySelectorAll\\\" title=\\\"The Document method querySelectorAll() returns a static (not live) NodeList representing a list of the document's elements that match the specified group of selectors.\\\"><code>document.querySelectorAll()</code></a>.</span>\"]",
    "properties": [
      {
        "name": "length",
        "overview": "The number of nodes in the <code>NodeList</code>."
      }
    ],
    "methods": [
      {
        "name": "entries",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a>, allowing code to go through all key/value pairs contained in the collection. (In this case, the keys are numbers starting from <code>0</code> and the values are nodes.)"
      },
      {
        "name": "forEach",
        "overview": "Executes a provided function once per <code>NodeList</code> element, passing the element as an argument to the function."
      },
      {
        "name": "item",
        "overview": "Returns an item in the list by its index, or <code>null</code> if the index is out-of-bounds."
      },
      {
        "name": "keys",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a>, allowing code to go through all the keys of the key/value pairs contained in the collection. (In this case, the keys are numbers starting from <code>0</code>.)"
      },
      {
        "name": "values",
        "overview": "Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\" title=\"A couple of additions to ECMAScript 2015 aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object respecting some conventions.\"><code>iterator</code></a> allowing code to go through all values (nodes) of the key/value pairs contained in the collection."
      }
    ]
  },
  {
    "name": "NonDocumentTypeChildNode",
    "category": "DOMCore",
    "overview": "[\"The <code><strong>NonDocumentTypeChildNode</strong></code> interface contains methods that are particular to <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> objects that can have a parent, but not suitable for <a href=\\\"/en-US/docs/Web/API/DocumentType\\\" title=\\\"The DocumentType interface represents a Node containing a doctype.\\\"><code>DocumentType</code></a>.\",\"<code>NonDocumentTypeChildNode</code> is a raw interface and no object of this type can be created; it is implemented by <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a>, and <a href=\\\"/en-US/docs/Web/API/CharacterData\\\" title=\\\"The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract.\\\"><code>CharacterData</code></a> objects.\"]",
    "properties": [
      {
        "name": "nextElementSibling",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> immediately following this node in its parent's children list, or <code>null</code> if there is no <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> in the list following this node."
      },
      {
        "name": "previousElementSibling",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> immediately prior to this node in its parent's children list, or <code>null</code> if there is no <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> in the list prior to this node."
      }
    ],
    "methods": []
  },
  {
    "name": "NonElementParentNode",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "getElementById",
        "overview": null
      }
    ]
  },
  {
    "name": "OffscreenCanvas",
    "category": "CanvasAndImage",
    "overview": "[\"<strong>This is an <a href=\\\"/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\\\">experimental technology</a></strong><br>Check the <a href=\\\"#Browser_compatibility\\\">Browser compatibility table</a> carefully before using this in production.\"]",
    "properties": [
      {
        "name": "height",
        "overview": "The height of the offscreen canvas."
      },
      {
        "name": "width",
        "overview": "The width of the offscreen canvas."
      }
    ],
    "methods": [
      {
        "name": "convertToBlob",
        "overview": "Creates a <a href=\"/en-US/docs/Web/API/Blob\" title=\"A Blob object represents a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\"><code>Blob</code></a> object representing the image contained in the canvas."
      },
      {
        "name": "getContext",
        "overview": "Returns a rendering context for the offscreen canvas."
      },
      {
        "name": "transferToImageBitmap",
        "overview": "Creates an <a href=\"/en-US/docs/Web/API/ImageBitmap\" title=\"The ImageBitmap interface represents a bitmap image which can be drawn to a <canvas> without undue latency. It can be created from a variety of source objects using the createImageBitmap() factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.\"><code>ImageBitmap</code></a> object from the most recently rendered image of the <code>OffscreenCanvas</code>."
      }
    ]
  },
  {
    "name": "ParentNode",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>ParentNode</strong></code> mixin contains methods and properties that are common to all types of <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> objects that can have children.</span> It's implemented by <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a>, <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a>, and <a href=\\\"/en-US/docs/Web/API/DocumentFragment\\\" title=\\\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\\\"><code>DocumentFragment</code></a> objects.\",\"See <a href=\\\"/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\\\">Locating DOM elements using selectors</a> to learn how to use <a href=\\\"/en-US/docs/Web/CSS/CSS_Selectors\\\">CSS selectors</a> to find nodes or elements of interest.\"]",
    "properties": [
      {
        "name": "childElementCount",
        "overview": "Returns the number of children of this <code>ParentNode</code> which are elements."
      },
      {
        "name": "children",
        "overview": "Returns a live <a href=\"/en-US/docs/Web/API/HTMLCollection\" title=\"The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\"><code>HTMLCollection</code></a> containing all of the <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> objects that are children of this <code>ParentNode</code>, omitting all of its non-element nodes."
      },
      {
        "name": "firstElementChild",
        "overview": "Returns the first node which is both a child of this <code>ParentNode</code> <em>and</em> is also an <code>Element</code>, or <code>null</code> if there is none."
      },
      {
        "name": "lastElementChild",
        "overview": "Returns the last node which is both a child of this <code>ParentNode</code> <em>and</em> is an <code>Element</code>, or <code>null</code> if there is none."
      }
    ],
    "methods": [
      {
        "name": "append",
        "overview": "Inserts a set of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> objects or <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects after the last child of the <code>ParentNode</code>. <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects are inserted as equivalent <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> nodes."
      },
      {
        "name": "prepend",
        "overview": "Inserts a set of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> objects or <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects before the first child of the <code>ParentNode</code>. <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> objects are inserted as equivalent <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a> nodes."
      },
      {
        "name": "querySelector",
        "overview": "Returns the first <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a> with the current element as root that matches the specified group of selectors."
      },
      {
        "name": "querySelectorAll",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> representing a list of elements with the current element as root that matches the specified group of selectors."
      }
    ]
  },
  {
    "name": "ProcessingInstruction",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code><strong>ProcessingInstruction</strong></code> interface represents a <a class=\\\"external\\\" href=\\\"https://www.w3.org/TR/xml/#sec-pi\\\" rel=\\\"noopener\\\">processing instruction</a>; that is, a <a href=\\\"/en-US/docs/Web/API/Node\\\" title=\\\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\\\"><code>Node</code></a> which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.</span>\",\"A processing instruction is different from the <a href=\\\"/en-US/docs/Web/XML/XML_introduction#XML_declaration\\\">XML declaration</a>.\"]",
    "properties": [
      {
        "name": "target",
        "overview": "A name identifying the application to which the instruction is targeted,"
      }
    ],
    "methods": []
  },
  {
    "name": "RadioNodeList",
    "category": "FormSupport",
    "overview": "[\"The <strong><code>RadioNodeList</code></strong> interface represents a collection of radio elements in a <a href=\\\"/en-US/docs/Web/HTML/Element/form\\\" title=\\\"The HTML <form> element represents a document section containing interactive controls for submitting information.\\\"><code>&lt;form&gt;</code></a> or a <a href=\\\"/en-US/docs/Web/HTML/Element/fieldset\\\" title=\\\"The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.\\\"><code>&lt;fieldset&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "value",
        "overview": "If the underlying element collection contains radio buttons, the <code>value</code> property represents the checked radio button. On retrieving the <code>value</code> property, the <code>value</code> of the currently <code>checked</code> radio button is returned as a string. If the collection does not contain any radio buttons or none of the radio buttons in the collection is in <code>checked</code> state, the empty string is returned. On setting the <code>value</code> property, the first radio button input element whose <code>value</code> property is equal to the new value will be set to <code>checked</code>."
      }
    ],
    "methods": []
  },
  {
    "name": "Range",
    "category": "DOMCore",
    "overview": "[\"The <strong><code>Range</code></strong> interface represents a fragment of a document that can contain nodes and parts of text nodes.\",\"A range can be created by using the <a href=\\\"/en-US/docs/Web/API/Document/createRange\\\" title=\\\"The Document.createRange() method returns a new Range object.\\\"><code>Document.createRange()</code></a> method. Range objects can also be retrieved by using the <a href=\\\"/en-US/docs/Web/API/Selection/getRangeAt\\\" title=\\\"The Selection.getRangeAt() method returns a range object representing one of the ranges currently selected.\\\"><code>getRangeAt()</code></a> method of the <a href=\\\"/en-US/docs/Web/API/Selection\\\" title=\\\"A Selection object represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or manipulation, call window.getSelection().\\\"><code>Selection</code></a> object or the <a href=\\\"/en-US/docs/Web/API/Document/caretRangeFromPoint\\\" title=\\\"The caretRangeFromPoint() method of the Document interface returns a Range object for the document fragment under the specified coordinates.\\\"><code>caretRangeFromPoint()</code></a> method of the <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> object.\",\"There also is the <a href=\\\"/en-US/docs/Web/API/Range/Range\\\" title=\\\"The Range() constructor returns a newly created Range object whose start and end is the global Document object.\\\"><code>Range()</code></a> constructor available.\"]",
    "properties": [
      {
        "name": "commonAncestorContainer",
        "overview": "Returns the deepest <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> that contains the <code>startContainer</code> and <code>endContainer</code> nodes."
      }
    ],
    "methods": [
      {
        "name": "cloneContents",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a> copying the nodes of a <code>Range</code>."
      },
      {
        "name": "cloneRange",
        "overview": "Returns a <code>Range</code> object with boundary points identical to the cloned <code>Range</code>."
      },
      {
        "name": "collapse",
        "overview": "Collapses the <code>Range</code> to one of its boundary points."
      },
      {
        "name": "compareBoundaryPoints",
        "overview": "Compares the boundary points of the <code>Range</code> with another <code>Range</code>."
      },
      {
        "name": "comparePoint",
        "overview": "Returns -1, 0, or 1 indicating whether the point occurs before, inside, or after the <code>Range</code>."
      },
      {
        "name": "createContextualFragment",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a> created from a given string of code."
      },
      {
        "name": "deleteContents",
        "overview": "Removes the contents of a <code>Range</code> from the <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a>."
      },
      {
        "name": "detach",
        "overview": "Releases the <code>Range</code> from use to improve performance."
      },
      {
        "name": "extractContents",
        "overview": "Moves contents of a <code>Range</code> from the document tree into a <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a>."
      },
      {
        "name": "getBoundingClientRect",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMRect\" title=\"A DOMRect represents a rectangle.\"><code>DOMRect</code></a> object which bounds the entire contents of the <code>Range</code>; this would be the union of all the rectangles returned by <a href=\"/en-US/docs/Web/API/Range/getClientRects\" title=\"The Range.getClientRects() method returns a list of DOMRect objects representing the area of the screen occupied by the range. This is created by aggregating the results of calls to Element.getClientRects() for all the elements in the range.\"><code>range.getClientRects()</code></a>."
      },
      {
        "name": "getClientRects",
        "overview": "Returns a list of <a href=\"/en-US/docs/Web/API/DOMRect\" title=\"A DOMRect represents a rectangle.\"><code>DOMRect</code></a> objects that aggregates the results of <a href=\"/en-US/docs/Web/API/Element/getClientRects\" title=\"The getClientRects() method of the Element interface returns a collection of DOMRect objects that indicate the bounding rectangles for each CSS border box in a client.\"><code>Element.getClientRects()</code></a> for all the elements in the <code>Range</code>."
      },
      {
        "name": "insertNode",
        "overview": "Insert a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> at the start of a <code>Range</code>."
      },
      {
        "name": "intersectsNode",
        "overview": "Returns a <code>boolean</code> indicating whether the given node intersects the <code>Range</code>."
      },
      {
        "name": "isPointInRange",
        "overview": "Returns a <code>boolean</code> indicating whether the given point is in the <code>Range</code>."
      },
      {
        "name": "selectNode",
        "overview": "Sets the <code>Range</code> to contain the <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> and its contents."
      },
      {
        "name": "selectNodeContents",
        "overview": "Sets the <code>Range</code> to contain the contents of a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "setEnd",
        "overview": "Sets the end position of a <code>Range</code>."
      },
      {
        "name": "setEndAfter",
        "overview": "Sets the end position of a <code>Range</code> relative to another <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "setEndBefore",
        "overview": "Sets the end position of a <code>Range</code> relative to another <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "setStart",
        "overview": "Sets the start position of a <code>Range</code>."
      },
      {
        "name": "setStartAfter",
        "overview": "Sets the start position of a <code>Range</code> relative to another <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "setStartBefore",
        "overview": "Sets the start position of a <code>Range</code> relative to another <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "surroundContents",
        "overview": "Moves content of a <code>Range</code> into a new <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>."
      },
      {
        "name": "toString",
        "overview": "Returns the text of the <code>Range</code>."
      }
    ]
  },
  {
    "name": "SVGAnimatedLength",
    "category": "SVGAnimatedTypes",
    "overview": "[\"The <code>SVGAnimatedLength</code> interface is used for attributes of basic type <a href=\\\"/en/SVG/Content_type#Length\\\" title=\\\"https://developer.mozilla.org/en/SVG/Content_type#Length\\\">&lt;length&gt;</a> which can be animated.\"]",
    "properties": [
      {
        "name": "animVal",
        "overview": "If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as <code>baseVal</code>."
      },
      {
        "name": "baseVal",
        "overview": "The base value of the given attribute before applying any animations."
      }
    ],
    "methods": []
  },
  {
    "name": "SVGAnimatedTransformList",
    "category": "SVGAnimatedTypes",
    "overview": "[\"The <code>SVGAnimatedTransformList</code> interface is used for attributes which take a list of numbers and which can be animated.\"]",
    "properties": [
      {
        "name": "animVal",
        "overview": "A read only <a href=\"/en-US/docs/Web/API/SVGTransformList\" title=\"The SVGTransformList defines a list of SVGTransform objects.\"><code>SVGTransformList</code></a> representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the <a href=\"/en-US/docs/Web/API/SVGTransformList\" title=\"The SVGTransformList defines a list of SVGTransform objects.\"><code>SVGTransformList</code></a> will have the same contents as <code>baseVal</code>. The object referenced by <code>animVal</code> will always be distinct from the one referenced by <code>baseVal</code>, even when the attribute is not animated."
      },
      {
        "name": "baseVal",
        "overview": "The base value of the given attribute before applying any animations."
      }
    ],
    "methods": []
  },
  {
    "name": "SVGElement",
    "category": "SVGElements",
    "overview": "[\"All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the <code>SVGElement</code> interface.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "SVGGraphicsElement",
    "category": "SVGElements",
    "overview": "[\"The <strong><code>SVGGraphicsElement</code></strong> interface represents SVG elements whose primary purpose is to directly render graphics into a group.\"]",
    "properties": [
      {
        "name": "transform",
        "overview": "An&nbsp;<a href=\"/en-US/docs/Web/API/SVGAnimatedTransformList\" title=\"The SVGAnimatedTransformList interface is used for attributes which take a list of numbers and which can be animated.\"><code>SVGAnimatedTransformList</code></a> reflecting the computed value of the <a href=\"/en-US/docs/Web/CSS/transform\" title=\"The transform CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\"><code>transform</code></a> property and its corresponding <code><a href=\"/en-US/docs/Web/SVG/Attribute/transform\">transform</a></code> attribute of the given element."
      }
    ],
    "methods": [
      {
        "name": "getBBox",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMRect\" title=\"A DOMRect represents a rectangle.\"><code>DOMRect</code></a> representing the computed bounding box of the current element."
      },
      {
        "name": "getCTM",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMMatrix\" title=\"The DOMMatrix interface represents 4x4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the DOMMatrixReadOnly interface.\"><code>DOMMatrix</code></a> representing the matrix that transforms the current element's coordinate system to its SVG viewport's coordinate system."
      },
      {
        "name": "getScreenCTM",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMMatrix\" title=\"The DOMMatrix interface represents 4x4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the DOMMatrixReadOnly interface.\"><code>DOMMatrix</code></a> representing the matrix that transforms the current element's coordinate system to the coordinate system of the SVG viewport for the SVG document fragment."
      }
    ]
  },
  {
    "name": "SVGLength",
    "category": "SVGStaticTypes",
    "overview": "[\"The <code>SVGLength</code> interface correspond to the <a href=\\\"/en/SVG/Content_type#Length\\\" title=\\\"https://developer.mozilla.org/en/SVG/Content_type#Length\\\">&lt;length&gt;</a> basic data type.\",\"An <code>SVGLength</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\"]",
    "properties": [
      {
        "name": "unitType",
        "overview": "The type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface."
      },
      {
        "name": "value",
        "overview": "<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p>\n\n    <p><strong>Exceptions on setting:</strong> a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>"
      },
      {
        "name": "valueAsString",
        "overview": "<p>The value as a string value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code> and <code>unitType</code> to be updated automatically to reflect this setting.</p>\n\n    <p><strong>Exceptions on setting:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>SYNTAX_ERR</code> is raised if the assigned string cannot be parsed as a valid <a href=\"/en/SVG/Content_type#Length\" title=\"https://developer.mozilla.org/en/SVG/Content_type#Length\">&lt;length&gt;</a>.</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "valueInSpecifiedUnits",
        "overview": "<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p>\n\n    <p><strong>Exceptions on setting:</strong> a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>"
      }
    ],
    "methods": [
      {
        "name": "convertToSpecifiedUnits",
        "overview": "Preserve the same underlying stored value, but reset the stored unit identifier to the given <code><em>unitType</em></code>. Object attributes <code>unitType</code>, <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> might be modified as a result of this method. For example, if the original value were \"<em>0.5cm</em>\" and the method was invoked to convert to millimeters, then the <code>unitType</code> would be changed to <code>SVG_LENGTHTYPE_MM</code>, <code>valueInSpecifiedUnits</code> would be changed to the numeric value 5 and <code>valueAsString</code> would be changed to \"<em>5mm</em>\"."
      },
      {
        "name": "newValueSpecifiedUnits",
        "overview": "<p>Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NOT_SUPPORTED_ERR</code> is raised if <code>unitType</code> is <code>SVG_LENGTHTYPE_UNKNOWN</code> or not a valid unit type constant (one of the other <code>SVG_LENGTHTYPE_*</code> constants defined on this interface).</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      }
    ]
  },
  {
    "name": "SVGNumber",
    "category": "SVGStaticTypes",
    "overview": "[\"The <strong><code>SVGNumber</code></strong> interface corresponds to the <a href=\\\"/en-US/docs/Web/CSS/number\\\" title=\\\"The <number> CSS data type represents a number, being either an integer or a number with a fractional component.\\\"><code>&lt;number&gt;</code></a> basic data type.\",\"An <code>SVGNumber</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\"]",
    "properties": [
      {
        "name": "value",
        "overview": "A float representing the number.\n <p class=\"note\">Note: If the <code>SVGNumber</code> is read-only, a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with the code NO_MODIFICATION_ALLOWED_ERR is raised on an attempt to change the value.</p>\n "
      }
    ],
    "methods": []
  },
  {
    "name": "SVGSVGElement",
    "category": "SVGElements",
    "overview": "[\"The <strong><code>SVGSVGElement</code></strong> interface provides access to the properties of <a href=\\\"/en-US/docs/Web/SVG/Element/svg\\\" title=\\\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\\\"><code>&lt;svg&gt;</code></a> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.\"]",
    "properties": [
      {
        "name": "currentScale",
        "overview": "On an outermost <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element, this float attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations. DOM attributes <code>currentScale</code> and <code>currentTranslate</code> are equivalent to the 2x3 matrix <code>[a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]</code>. If \"magnification\" is enabled (i.e., <code>zoomAndPan=\"magnify\"</code>), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element)."
      },
      {
        "name": "currentTranslate",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGPoint\" title=\"An SVGPoint represents a 2D or 3D point in the SVG coordinate system.\"><code>SVGPoint</code></a> representing the translation factor that takes into account user \"magnification\" corresponding to an outermost <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element. The behavior is undefined for &lt;svg&gt; elements that are not at the outermost level."
      },
      {
        "name": "height",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGAnimatedLength\" title=\"The SVGAnimatedLength interface is used for attributes of basic type <length> which can be animated.\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"/en-US/docs/Web/SVG/Attribute/height\">height</a></code> attribute of the given <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element."
      },
      {
        "name": "width",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGAnimatedLength\" title=\"The SVGAnimatedLength interface is used for attributes of basic type <length> which can be animated.\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"/en-US/docs/Web/SVG/Attribute/width\">width</a></code> attribute of the given <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element."
      },
      {
        "name": "x",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGAnimatedLength\" title=\"The SVGAnimatedLength interface is used for attributes of basic type <length> which can be animated.\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"/en-US/docs/Web/SVG/Attribute/x\">x</a></code> attribute of the given <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element."
      },
      {
        "name": "y",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGAnimatedLength\" title=\"The SVGAnimatedLength interface is used for attributes of basic type <length> which can be animated.\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"/en-US/docs/Web/SVG/Attribute/y\">y</a></code> attribute of the given <a href=\"/en-US/docs/Web/SVG/Element/svg\" title=\"The svg element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed a SVG fragment inside an SVG or HTML document.\"><code>&lt;svg&gt;</code></a> element."
      }
    ],
    "methods": [
      {
        "name": "checkEnclosure",
        "overview": "Returns <code>true</code> if the rendered content of the given element is entirely contained within the supplied rectangle. Each candidate graphics element is to be considered a match only if the same graphics element can be a target of pointer events as defined in <code><a href=\"/en-US/docs/Web/SVG/Attribute/pointer-events\">pointer-events</a></code> processing."
      },
      {
        "name": "checkIntersection",
        "overview": "Returns <code>true</code> if the rendered content of the given element intersects the supplied rectangle. Each candidate graphics element is to be considered a match only if the same graphics element can be a target of pointer events as defined in <code><a href=\"/en-US/docs/Web/SVG/Attribute/pointer-events\">pointer-events</a></code> processing."
      },
      {
        "name": "createSVGAngle",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGAngle\" title=\"The SVGAngle interface is used to represent a value that can be an <angle> or <number> value. An SVGAngle reflected through the animVal attribute is always read only.\"><code>SVGAngle</code></a> object outside of any document trees. The object is initialized to a value of zero degrees (unitless)."
      },
      {
        "name": "createSVGLength",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGLength\" title=\"The SVGLength interface correspond to the <length> basic data type.\"><code>SVGLength</code></a> object outside of any document trees. The object is initialized to a value of zero user units."
      },
      {
        "name": "createSVGMatrix",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGMatrix\" title=\"Many of SVG's graphics operations utilize 2x3 matrices of the form:\"><code>SVGMatrix</code></a> object outside of any document trees. The object is initialized to the identity matrix."
      },
      {
        "name": "createSVGNumber",
        "overview": "Creates an <a href=\"/en-US/docs/Web/API/SVGNumber\" title=\"The SVGNumber interface corresponds to the <number> basic data type.\"><code>SVGNumber</code></a> object outside of any document trees. The object is initialized to a value of zero."
      },
      {
        "name": "createSVGPoint",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGPoint\" title=\"An SVGPoint represents a 2D or 3D point in the SVG coordinate system.\"><code>SVGPoint</code></a> object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system."
      },
      {
        "name": "createSVGRect",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGRect\" title=\"The SVGRect represents a rectangle. Rectangles consist&nbsp;of an x and y coordinate pair identifying a minimum x value, a minimum y value, and a width and height, which are constrained to be non-negative.\"><code>SVGRect</code></a> object outside of any document trees. The object is initialized such that all values are set to 0 user units."
      },
      {
        "name": "createSVGTransform",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGTransform\" title=\"SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute.\"><code>SVGTransform</code></a> object outside of any document trees. The object is initialized to an identity matrix transform (<code>SVG_TRANSFORM_MATRIX</code>)."
      },
      {
        "name": "createSVGTransformFromMatrix",
        "overview": "Creates an&nbsp;<a href=\"/en-US/docs/Web/API/SVGTransform\" title=\"SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute.\"><code>SVGTransform</code></a> object outside of any document trees. The object is initialized to the given matrix transform (i.e., <code>SVG_TRANSFORM_MATRIX</code>). The values from the parameter matrix are copied, the matrix parameter is not adopted as <code>SVGTransform::matrix</code>."
      },
      {
        "name": "deselectAll",
        "overview": "Unselects any selected objects, including any selections of text strings and type-in bars."
      },
      {
        "name": "forceRedraw",
        "overview": "In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating."
      },
      {
        "name": "getElementById",
        "overview": "Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by <em>elementId</em>. If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id."
      },
      {
        "name": "getEnclosureList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> of graphics elements whose rendered content is entirely contained within the supplied rectangle. Each candidate graphics element is to be considered a match only if the same graphics element can be a target of pointer events as defined in <code><a href=\"/en-US/docs/Web/SVG/Attribute/pointer-events\">pointer-events</a></code> processing."
      },
      {
        "name": "getIntersectionList",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NodeList\" title=\"NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\"><code>NodeList</code></a> of graphics elements whose rendered content intersects the supplied rectangle. Each candidate graphics element is to be considered a match only if the same graphics element can be a target of pointer events as defined in <code><a href=\"/en-US/docs/Web/SVG/Attribute/pointer-events\">pointer-events</a></code> processing."
      },
      {
        "name": "suspendRedraw",
        "overview": "\n <p>Takes a time-out value which indicates that redraw shall not occur until:</p>\n the corresponding unsuspendRedraw() call has been made, an unsuspendRedrawAll() call has been made, or its timer has timed out.\n\n <p>In environments that do not support interactivity (e.g., print media), then redraw shall not be suspended. Calls to <code>suspendRedraw()</code> and <code>unsuspendRedraw()</code> should, but need not be, made in balanced pairs.</p>\n\n <p>To suspend redraw actions as a collection of SVG DOM changes occur, precede the changes to the SVG DOM with a method call similar to:</p>\n\n <pre class=\"brush: js\">suspendHandleID = suspendRedraw(maxWaitMilliseconds);</pre>\n\n <p>and follow the changes with a method call similar to:</p>\n\n <pre class=\"brush: js\">unsuspendRedraw(suspendHandleID);</pre>\n\n <p>Note that multiple suspendRedraw calls can be used at once and that each such method call is treated independently of the other suspendRedraw method calls.</p>\n "
      },
      {
        "name": "unsuspendRedraw",
        "overview": "Cancels a specified <code>suspendRedraw()</code> by providing a unique suspend handle ID that was returned by a previous <code>suspendRedraw()</code> call."
      },
      {
        "name": "unsuspendRedrawAll",
        "overview": "Cancels all currently active <code>suspendRedraw()</code> method calls. This method is most useful at the very end of a set of SVG DOM calls to ensure that all pending <code>suspendRedraw()</code> method calls have been cancelled."
      }
    ]
  },
  {
    "name": "SVGStringList",
    "category": "SVGStaticTypes",
    "overview": "[\"The <code>SVGStringList</code> defines a list of <a href=\\\"/en-US/docs/Web/API/DOMString\\\" title=\\\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\\\"><code>DOMString</code></a> objects.\",\"An <code>SVGStringList</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "A mirror of the value in <code>numberOfItems</code>, for consistency with other interfaces. <span class=\"icon-only-inline\" title=\"This API has not been standardized.\"><i class=\"icon-warning-sign\"> </i></span>"
      },
      {
        "name": "numberOfItems",
        "overview": "The number of items in the list."
      }
    ],
    "methods": [
      {
        "name": "appendItem",
        "overview": "<p>Inserts a new item at the end of the list. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "clear",
        "overview": "<p>Clears all existing current items from the list, with the result being an empty list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "getItem",
        "overview": "<p>Returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is number&nbsp;0.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "initialize",
        "overview": "<p>Clears all existing current items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "insertItemBefore",
        "overview": "<p>Inserts a new item into the list at the specified position. The first item is number 0. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to insert before is before the removal of the item. If the <code>index</code> is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to <code>numberOfItems</code>, then the new item is appended to the end of the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "removeItem",
        "overview": "<p>Removes an existing item from the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>INDEX_SIZE_ERR</code> is raised if the index number is greater than or equal to <code>numberOfItems</code>.</li>\n    </ul>"
      },
      {
        "name": "replaceItem",
        "overview": "<p>Replaces an existing item in the list with a new item. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to replace is before the removal of the item.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>INDEX_SIZE_ERR</code> is raised if the index number is greater than or equal to <code>numberOfItems</code>.</li>\n    </ul>"
      }
    ]
  },
  {
    "name": "SVGTests",
    "category": "SVGOther",
    "overview": "[\"The <strong><code>SVGTests</code></strong> interface is used to reflect conditional processing attributes and is mixed into other interfaces for elements that support these attributes.\"]",
    "properties": [
      {
        "name": "requiredExtensions",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGStringList\" title=\"The SVGStringList defines a list of DOMString objects.\"><code>SVGStringList</code></a> corresponding to the <code><a class=\"new\" href=\"/en-US/docs/Web/SVG/Attribute/requiredExtensions\" rel=\"nofollow\">requiredExtensions</a></code> attribute of the given element."
      },
      {
        "name": "systemLanguage",
        "overview": "An <a href=\"/en-US/docs/Web/API/SVGStringList\" title=\"The SVGStringList defines a list of DOMString objects.\"><code>SVGStringList</code></a> corresponding to the <code><a href=\"/en-US/docs/Web/SVG/Attribute/systemLanguage\">systemLanguage</a></code> attribute of the given element."
      }
    ],
    "methods": []
  },
  {
    "name": "SVGTitleElement",
    "category": "SVGElements",
    "overview": "[\"The <strong><code>SVGTitleElement</code></strong> interface corresponds to the <a href=\\\"/en-US/docs/Web/SVG/Element/title\\\" title=\\\"The <title> element provides an accessible, short-text description of any SVG container element or graphics element.\\\"><code>&lt;title&gt;</code></a> element.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "SVGTransform",
    "category": "SVGStaticTypes",
    "overview": "[\"<code>SVGTransform</code> is the interface for one of the component transformations within an <a href=\\\"/en-US/docs/Web/API/SVGTransformList\\\" title=\\\"The SVGTransformList defines a list of SVGTransform objects.\\\"><code>SVGTransformList</code></a>; thus, an <code>SVGTransform</code> object corresponds to a single component (e.g., <code>scale(…)</code> or <code>matrix(…)</code>) within a <code><a href=\\\"/en-US/docs/Web/SVG/Attribute/transform\\\">transform</a></code> attribute.\",\"An <code>SVGTransform</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\"]",
    "properties": [
      {
        "name": "angle",
        "overview": "A convenience attribute for <code>SVG_TRANSFORM_ROTATE</code>, <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>. It holds the angle that was specified.<br>\n    <br>\n    For <code>SVG_TRANSFORM_MATRIX</code>, <code>SVG_TRANSFORM_TRANSLATE</code> and <code>SVG_TRANSFORM_SCALE</code>, <code>angle</code> will be zero."
      },
      {
        "name": "matrix",
        "overview": "<p>The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the <code>SVGTransform</code> object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the <code>SVGTransform</code> interface itself) then the type of the <code>SVGTransform</code> changes to <code>SVG_TRANSFORM_MATRIX</code>.</p>\n\n    <ul>\n     <li>For <code>SVG_TRANSFORM_MATRIX</code>, the matrix contains the a, b, c, d, e, f values supplied by the user.</li>\n     <li>For <code>SVG_TRANSFORM_TRANSLATE</code>, e and f represent the translation amounts (a=1, b=0, c=0 and d=1).</li>\n     <li>For <code>SVG_TRANSFORM_SCALE</code>, a and d represent the scale amounts (b=0, c=0, e=0 and f=0).</li>\n     <li>For <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>, a, b, c and d represent the matrix which will result in the given skew (e=0 and f=0).</li>\n     <li>For <code>SVG_TRANSFORM_ROTATE</code>, a, b, c, d, e and f together represent the matrix which will result in the given rotation. When the rotation is around the center point (0, 0), e and f will be zero.</li>\n    </ul>"
      },
      {
        "name": "type",
        "overview": "The type of the value as specified by one of the SVG_TRANSFORM_* constants defined on this interface."
      }
    ],
    "methods": [
      {
        "name": "setMatrix",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_MATRIX</code>, with parameter matrix defining the new transformation. Note that the values from the parameter <code>matrix</code> are copied.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "setRotate",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_ROTATE</code>, with parameter <code>angle</code> defining the rotation angle and parameters <code>cx</code> and <code>cy</code> defining the optional center of rotation.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "setScale",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_SCALE</code>, with parameters <code>sx</code> and <code>sy</code> defining the scale amounts.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "setSkewX",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_SKEWX</code>, with parameter <code>angle</code> defining the amount of skew.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "setSkewY",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_SKEWY</code>, with parameter <code>angle</code> defining the amount of skew.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "setTranslate",
        "overview": "<p>Sets the transform type to <code>SVG_TRANSFORM_TRANSLATE</code>, with parameters <code>tx</code> and <code>ty</code> defining the translation amounts.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when attempting to modify a read only attribute or when the object itself is read only.</li>\n    </ul>"
      }
    ]
  },
  {
    "name": "SVGTransformList",
    "category": "SVGStaticTypes",
    "overview": "[\"The <code>SVGTransformList</code> defines a list of <a href=\\\"/en-US/docs/Web/API/SVGTransform\\\" title=\\\"SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute.\\\"><code>SVGTransform</code></a> objects.\",\"An <code>SVGTransformList</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "The number of items in the list."
      },
      {
        "name": "numberOfItems",
        "overview": "The number of items in the list."
      }
    ],
    "methods": [
      {
        "name": "appendItem",
        "overview": "<p>Inserts a new item at the end of the list. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "clear",
        "overview": "<p>Clears all existing current items from the list, with the result being an empty list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "consolidate",
        "overview": "<p>Consolidates the list of separate <code>SVGTransform</code> objects by multiplying the equivalent transformation matrices together to result in a list consisting of a single <code>SVGTransform</code> object of type <code>SVG_TRANSFORM_MATRIX</code>. The consolidation operation creates new <code>SVGTransform</code> object as the first and only item in the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "createSVGTransformFromMatrix",
        "overview": "Creates an <code>SVGTransform</code> object which is initialized to transform of type <code>SVG_TRANSFORM_MATRIX</code> and whose values are the given matrix. The values from the parameter matrix are copied, the matrix parameter is not adopted as <code>SVGTransform::matrix</code>."
      },
      {
        "name": "getItem",
        "overview": "<p>Returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is number&nbsp;0.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "initialize",
        "overview": "<p>Clears all existing current items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "insertItemBefore",
        "overview": "<p>Inserts a new item into the list at the specified position. The first item is number 0. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to insert before is before the removal of the item. If the <code>index</code> is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to <code>numberOfItems</code>, then the new item is appended to the end of the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n    </ul>"
      },
      {
        "name": "removeItem",
        "overview": "<p>Removes an existing item from the list.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>INDEX_SIZE_ERR</code> is raised if the index number is greater than or equal to <code>numberOfItems</code>.</li>\n    </ul>"
      },
      {
        "name": "replaceItem",
        "overview": "<p>Replaces an existing item in the list with a new item. If <code>newItem</code> is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to replace is before the removal of the item.</p>\n\n    <p><strong>Exceptions:</strong></p>\n\n    <ul>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the list corresponds to a read only attribute or when the object itself is read only.</li>\n     <li>a <a href=\"/en-US/docs/Web/API/DOMException\" title=\"The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\"><code>DOMException</code></a> with code <code>INDEX_SIZE_ERR</code> is raised if the index number is greater than or equal to <code>numberOfItems</code>.</li>\n    </ul>"
      }
    ]
  },
  {
    "name": "Selection",
    "category": "DOMCore",
    "overview": "[\"<strong>This is an <a href=\\\"/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\\\">experimental technology</a></strong><br>Check the <a href=\\\"#Browser_compatibility\\\">Browser compatibility table</a> carefully before using this in production.\"]",
    "properties": [
      {
        "name": "anchorNode",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in which the selection begins. Can return <code>null</code> if selection never existed in the document (e.g., an iframe that was never clicked on)."
      },
      {
        "name": "anchorOffset",
        "overview": "Returns a number representing the offset of the selection's anchor within the <code>anchorNode</code>. If <code>anchorNode</code> is a text node, this is the number of characters within anchorNode preceding the anchor. If <code>anchorNode</code> is an element, this is the number of child nodes of the <code>anchorNode</code> preceding the anchor."
      },
      {
        "name": "focusNode",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> in which the selection ends. Can return <code>null</code> if selection never existed in the document (for example, in an <code>iframe</code> that was never clicked on)."
      },
      {
        "name": "focusOffset",
        "overview": "Returns a number representing the offset of the selection's anchor within the <code>focusNode</code>. If <code>focusNode</code> is a text node, this is the number of characters within <code>focusNode</code> preceding the focus. If <code>focusNode</code> is an element, this is the number of child nodes of the <code>focusNode</code> preceding the focus."
      },
      {
        "name": "isCollapsed",
        "overview": "Returns a Boolean indicating whether the selection's start and end points are at the same position."
      },
      {
        "name": "rangeCount",
        "overview": "Returns the number of ranges in the selection."
      },
      {
        "name": "type",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> describing the type of the current selection."
      }
    ],
    "methods": [
      {
        "name": "addRange",
        "overview": "A <a href=\"/en-US/docs/Web/API/Range\" title=\"The Range interface represents a fragment of a document that can contain nodes and parts of text nodes.\"><code>Range</code></a> object that will be added to the selection."
      },
      {
        "name": "collapse",
        "overview": "Collapses the current selection to a single point."
      },
      {
        "name": "collapseToEnd",
        "overview": "Collapses the selection to the end of the last range in the selection."
      },
      {
        "name": "collapseToStart",
        "overview": "Collapses the selection to the start of the first range in the selection."
      },
      {
        "name": "containsNode",
        "overview": "Indicates if a certain node is part of the selection."
      },
      {
        "name": "deleteFromDocument",
        "overview": "Deletes the selection's content from the document."
      },
      {
        "name": "empty",
        "overview": "Removes all ranges from the selection. This is an alias for <code>removeAllRanges()</code> — See <a href=\"/en-US/docs/Web/API/Selection/removeAllRanges\" title=\"The Selection.removeAllRanges() method removes all ranges from the selection, leaving the anchorNode and focusNode properties equal to null and leaving nothing selected.\"><code>Selection.removeAllRanges()</code></a> for more details."
      },
      {
        "name": "extend",
        "overview": "Moves the focus of the selection to a specified point."
      },
      {
        "name": "getRangeAt",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Range\" title=\"The Range interface represents a fragment of a document that can contain nodes and parts of text nodes.\"><code>Range</code></a> object representing one of the ranges currently selected."
      },
      {
        "name": "modify",
        "overview": "Changes the current selection."
      },
      {
        "name": "removeAllRanges",
        "overview": "Removes all ranges from the selection."
      },
      {
        "name": "removeRange",
        "overview": "Removes a range from the selection."
      },
      {
        "name": "selectAllChildren",
        "overview": "Adds all the children of the specified node to the selection."
      },
      {
        "name": "setBaseAndExtent",
        "overview": "Sets the selection to be a range including all or parts of two specified DOM nodes, and any content located between them."
      },
      {
        "name": "setPosition",
        "overview": "Collapses the current selection to a single point. This is an alias for <code>collapse()</code> — See <a href=\"/en-US/docs/Web/API/Selection/collapse\" title=\"The Selection.collapse() method collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there.\"><code>Selection.collapse()</code></a> for more details."
      },
      {
        "name": "toString",
        "overview": "Returns a string currently being represented by the selection object, i.e. the currently selected text."
      }
    ]
  },
  {
    "name": "ShadowRoot",
    "category": "CherryPicked",
    "overview": "[\"The <code><strong>ShadowRoot</strong></code> interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.\",\"You can retrieve a reference to an element's shadow root using its <a href=\\\"/en-US/docs/Web/API/Element/shadowRoot\\\" title=\\\"The Element.shadowRoot&nbsp;read-only property represents the shadow root hosted by the element.\\\"><code>Element.shadowRoot</code></a> property, provided it was created using <a href=\\\"/en-US/docs/Web/API/Element/attachShadow\\\" title=\\\"The Element.attachShadow() method attaches a shadow DOM tree to the specified element and returns a reference to its ShadowRoot.\\\"><code>Element.attachShadow()</code></a> with the <code>mode</code> option set to <code>open</code>.\"]",
    "properties": [
      {
        "name": "delegatesFocus",
        "overview": "Returns a boolean that indicates whether delegatesFocus was set when the shadow was attached (see <a href=\"/en-US/docs/Web/API/Element/attachShadow\" title=\"The Element.attachShadow() method attaches a shadow DOM tree to the specified element and returns a reference to its ShadowRoot.\"><code>Element.attachShadow()</code></a>)."
      },
      {
        "name": "host",
        "overview": "Returns a reference to the DOM element the <code>ShadowRoot</code>&nbsp;is attached to."
      },
      {
        "name": "innerHTML",
        "overview": "Sets or returns a reference to the DOM tree inside the <code>ShadowRoot</code>."
      },
      {
        "name": "mode",
        "overview": "The mode of the <code>ShadowRoot</code> — either <code>open</code> or <code>closed</code>. This defines whether or not the shadow root's internal features are accessible from JavaScript."
      }
    ],
    "methods": []
  },
  {
    "name": "Slotable",
    "category": "CherryPicked",
    "overview": "[\"The <code>Slotable</code> mixin defines features that allow nodes to become the contents of a <a href=\\\"/en-US/docs/Web/HTML/Element/slot\\\" title=\\\"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\\\"><code>&lt;slot&gt;</code></a> element — the following features are included in both <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a> and <a href=\\\"/en-US/docs/Web/API/Text\\\" title=\\\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\\\"><code>Text</code></a>.\"]",
    "properties": [
      {
        "name": "assignedSlot",
        "overview": "Returns the <a href=\"/en-US/docs/Web/HTML/Element/slot\" title=\"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\"><code>&lt;slot&gt;</code></a> the node is inserted in."
      }
    ],
    "methods": []
  },
  {
    "name": "StylePropertyMap",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "append",
        "overview": null
      },
      {
        "name": "clear",
        "overview": null
      },
      {
        "name": "delete",
        "overview": null
      },
      {
        "name": "set",
        "overview": null
      }
    ]
  },
  {
    "name": "StylePropertyMapReadOnly",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "size",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "entries",
        "overview": null
      },
      {
        "name": "forEach",
        "overview": null
      },
      {
        "name": "get",
        "overview": null
      },
      {
        "name": "getAll",
        "overview": null
      },
      {
        "name": "has",
        "overview": null
      },
      {
        "name": "keys",
        "overview": null
      },
      {
        "name": "values",
        "overview": null
      }
    ]
  },
  {
    "name": "StyleSheet",
    "category": "CherryPicked",
    "overview": "[\"An object implementing the <code>StyleSheet</code> interface represents a single style sheet. CSS style sheets will further implement the more specialized <a href=\\\"/en-US/docs/Web/API/CSSStyleSheet\\\" title=\\\"The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet.\\\"><code>CSSStyleSheet</code></a> interface.\"]",
    "properties": [
      {
        "name": "disabled",
        "overview": "Is a <a href=\"/en-US/docs/Web/API/Boolean\" title=\"REDIRECT Boolean [en-US]\"><code>Boolean</code></a> representing whether the current stylesheet has been applied or not."
      },
      {
        "name": "href",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the location of the stylesheet."
      },
      {
        "name": "media",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/MediaList\" title=\"The MediaList interface represents the media queries of a stylesheet, e.g. those set using a <link> element's media attribute.\"><code>MediaList</code></a> representing the intended destination medium for style information."
      },
      {
        "name": "ownerNode",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> associating this style sheet with the current document."
      },
      {
        "name": "parentStyleSheet",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/StyleSheet\" title=\"An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface.\"><code>StyleSheet</code></a> including this one, if any; returns <code>null</code> if there aren't any."
      },
      {
        "name": "title",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the advisory title of the current style sheet."
      },
      {
        "name": "type",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> representing the style sheet language for this style sheet."
      }
    ],
    "methods": []
  },
  {
    "name": "Text",
    "category": "DOMCore",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>Text</code></strong> interface represents the textual content of <a href=\\\"/en-US/docs/Web/API/Element\\\" title=\\\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\\\"><code>Element</code></a> or <a href=\\\"/en-US/docs/Web/API/Attr\\\" title=\\\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\\\"><code>Attr</code></a>. </span>\",\"If an element has no markup within its content, it has a single child implementing <code>Text</code> that contains the element's text. However, if the element contains markup, it is parsed into information items and <code>Text</code> nodes that form its children.\",\"New documents have a single <code>Text</code> node for each block of text. Over time, more <code>Text</code> nodes may be created as the document's content changes. The <a href=\\\"/en-US/docs/Web/API/Node/normalize\\\" title=\\\"The Node.normalize() method puts the specified node and all of its sub-tree into a &quot;normalized&quot; form. In a normalized sub-tree, no text nodes in the sub-tree are empty and there are no adjacent text nodes.\\\"><code>Node.normalize()</code></a> method merges adjacent <code>Text</code> objects back into a single node for each block of text.\"]",
    "properties": [
      {
        "name": "wholeText",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> containing the text of all <code>Text</code> nodes logically adjacent to this <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a>, concatenated in document order."
      }
    ],
    "methods": [
      {
        "name": "splitText",
        "overview": "Breaks the node into two nodes at a specified offset."
      }
    ]
  },
  {
    "name": "TextTrack",
    "category": "Media",
    "overview": "[\"The <code>TextTrack</code> interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular <a href=\\\"/en-US/docs/Web/HTML/Element/track\\\" title=\\\"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML).\\\"><code>&lt;track&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "activeCues",
        "overview": "A <a class=\"new\" href=\"/en-US/docs/Web/API/TextTrackCueList\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TextTrackCueList</code></a> object listing the currently active set of text track cues. Track cues are active if the current playback position of the media is between the cues' start and end times. Thus, for displayed cues such as captions or subtitles, the active cues are currently being displayed."
      },
      {
        "name": "cues",
        "overview": "A <a class=\"new\" href=\"/en-US/docs/Web/API/TextTrackCueList\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TextTrackCueList</code></a> which contains all of the track's cues."
      },
      {
        "name": "id",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which identifies the track, if it has one. If it doesn't have an ID, then this value is an empty string (<code>\"\"</code>). If the <code>TextTrack</code> is associated with a <a href=\"/en-US/docs/Web/HTML/Element/track\" title=\"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML).\"><code>&lt;track&gt;</code></a> element, then the track's ID matches the element's ID."
      },
      {
        "name": "inBandMetadataTrackDispatchType",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which indicates the track's in-band metadata track dispatch type. <em><strong>needs details</strong></em>"
      },
      {
        "name": "kind",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> indicating what kind of text track the <code>TextTrack</code> describes. The value must be one of those in the TextTrackKind enum."
      },
      {
        "name": "label",
        "overview": "A human-readable <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which contains the text track's label, if one is present; otherwise, this is an empty string (<code>\"\"</code>), in which case a custom label may need to be generated by your code using other attributes of the track, if the track's label needs to be exposed to the user."
      },
      {
        "name": "language",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which specifies the text language in which the text track's contents is written. The value must adhere to the format specified in the <a class=\"external\" href=\"https://tools.ietf.org/html/bcp47\" rel=\"noopener\">Tags for Identifying Languages</a> (<a class=\"external\" href=\"https://tools.ietf.org/html/bcp47\" rel=\"noopener\">BCP 47</a>) document from the IETF, just like the HTML <code><a href=\"/en-US/docs/Web/HTML/Global_attributes#attr-lang\">lang</a></code> attribute. For example, this can be <code>\"en-US\"</code> for United States English or <code>\"pt-BR\"</code> for Brazilian Portuguese."
      },
      {
        "name": "mode",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the track's current mode. Changing this property's value changes the track's current mode to match. Permitted values are listed under <a href=\"/en-US/docs/Web/API/TextTrack/mode#Text_track_mode_constants\">Text track mode constants</a>. The default is <code>disabled</code>, unless the <a href=\"/en-US/docs/Web/HTML/Element/track\" title=\"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML).\"><code>&lt;track&gt;</code></a> element's <code><a href=\"/en-US/docs/Web/HTML/Element/track#attr-default\">default</a></code> Boolean attribute is specified, in which case the default mode is <code>started</code>."
      },
      {
        "name": "oncuechange",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "addCue",
        "overview": "Adds a cue (specified as a <a href=\"/en-US/docs/Web/API/TextTrackCue\" title=\"TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types.\"><code>TextTrackCue</code></a> object to the track's list of cues."
      },
      {
        "name": "removeCue",
        "overview": "Removes a cue (specified as a <a href=\"/en-US/docs/Web/API/TextTrackCue\" title=\"TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types.\"><code>TextTrackCue</code></a> object from the track's list of cues."
      }
    ]
  },
  {
    "name": "TextTrackCue",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\"><code><strong>TextTrackCue</strong></code> is an abstract class which is used as the basis for the various derived cue types, such as <a href=\\\"/en-US/docs/Web/API/VTTCue\\\" title=\\\"This interface also inherits properties from TextTrackCue.\\\"><code>VTTCue</code></a>; you will instead work with those derived types.</span> These cues represent a string of text that is presented for some duration of time during the performance of a <a href=\\\"/en-US/docs/Web/API/TextTrack\\\" title=\\\"This interface also inherits properties from EventTarget.\\\"><code>TextTrack</code></a>. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information.\"]",
    "properties": [
      {
        "name": "endTime",
        "overview": "A <code>double</code> that represents the video time that the cue will stop being displayed, in seconds."
      },
      {
        "name": "id",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> that identifies the cue."
      },
      {
        "name": "onenter",
        "overview": "The event handler for the <code><a class=\"new\" href=\"/en-US/docs/Web/Events/enter\" rel=\"nofollow\" title=\"/en-US/docs/Web/Events/enter\">enter</a></code> event."
      },
      {
        "name": "onexit",
        "overview": "The event handler for the <code><a class=\"new\" href=\"/en-US/docs/Web/Events/exit\" rel=\"nofollow\" title=\"/en-US/docs/Web/Events/exit\">exit</a></code> event."
      },
      {
        "name": "pauseOnExit",
        "overview": "A <code>boolean</code> for whether the video will pause when this cue stops being displayed."
      },
      {
        "name": "startTime",
        "overview": "A <code>double</code> that represents the video time that the cue will start being displayed, in seconds."
      },
      {
        "name": "track",
        "overview": "The <a href=\"/en-US/docs/Web/API/TextTrack\" title=\"This interface also inherits properties from EventTarget.\"><code>TextTrack</code></a> that this cue belongs to, or <code>null</code> if it doesn't belong to any."
      }
    ],
    "methods": []
  },
  {
    "name": "TextTrackCueList",
    "category": "Media",
    "overview": null,
    "properties": [
      {
        "name": "length",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "getCueById",
        "overview": null
      }
    ]
  },
  {
    "name": "TextTrackList",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>TextTrackList</code></strong> interface is used to represent a list of the text tracks defined by the <a href=\\\"/en-US/docs/Web/HTML/Element/track\\\" title=\\\"The HTML <track> element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks or&nbsp;Timed Text Markup Language (TTML).\\\"><code>&lt;track&gt;</code></a> element, with each track represented by a separate <a href=\\\"/en-US/docs/Web/API/TextTrack\\\" title=\\\"This interface also inherits properties from EventTarget.\\\"><code>textTrack</code></a> object in the list.</span>\",\"Retrieve an instance of this object with <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement/textTracks\\\" title=\\\"The read-only textTracks property on HTMLMediaElement objects returns a TextTrackList object listing all of the TextTrack objects representing the media element's text tracks\\\"><code>HTMLMediaElement.textTracks</code></a>. The individual tracks can be accessed using array syntax or functions such as <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\\\" title=\\\"The forEach() method executes a provided function once for each array element.\\\"><code>forEach()</code></a> for example.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "The number of tracks in the list."
      },
      {
        "name": "onaddtrack",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/addtrack\" title=\"/en-US/docs/Web/Events/addtrack\">addtrack</a></code> event is fired, indicating that a new text track has been added to the media element."
      },
      {
        "name": "onchange",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/change\" title=\"/en-US/docs/Web/Events/change\">change</a></code> event occurs."
      },
      {
        "name": "onremovetrack",
        "overview": "An event handler to call when the <code><a href=\"/en-US/docs/Web/Events/removetrack\" title=\"/en-US/docs/Web/Events/removetrack\">removetrack</a></code> event is sent, indicating that a text track has been removed from the media element."
      }
    ],
    "methods": [
      {
        "name": "getTrackById",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/TextTrack\" title=\"This interface also inherits properties from EventTarget.\"><code>TextTrack</code></a> found within the <code>TextTrackList</code> whose <a class=\"new\" href=\"/en-US/docs/Web/API/TextTrack/id\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>id</code></a> matches the specified string. If no match is found, <code>null</code> is returned."
      }
    ]
  },
  {
    "name": "TimeRanges",
    "category": "DOMCore",
    "overview": "[\"The <code>TimeRanges</code> interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <a href=\\\"/en-US/docs/Web/HTML/Element/audio\\\" title=\\\"The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:&nbsp;the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\\\"><code>&lt;audio&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a>&nbsp;elements.\",\"A <code>TimeRanges</code> object includes one or more ranges of time, each specified by a starting and ending time offset. You reference each time range by using the <code>start()</code> and <code>end()</code> methods, passing the index number of the time range you want to retrieve.\",\"The term \\\"<a class=\\\"external\\\" href=\\\"https://www.w3.org/TR/html52/semantics-embedded-content.html#normalized-timeranges-object\\\" rel=\\\"noopener\\\">normalized TimeRanges object</a>\\\" indicates that ranges in such an object are ordered, don't overlap, aren't empty, and don't touch (adjacent ranges are folded into one bigger range).\"]",
    "properties": [
      {
        "name": "length",
        "overview": "Returns an <code>unsigned long</code> representing the number of time ranges represented by the time range object."
      }
    ],
    "methods": [
      {
        "name": "end",
        "overview": "Returns the time for the end of the specified range."
      },
      {
        "name": "start",
        "overview": "Returns the time for the start of the range with the specified index."
      }
    ]
  },
  {
    "name": "TreeWalker",
    "category": "DOMCore",
    "overview": "[\"The <strong><code>TreeWalker</code></strong> object represents the nodes of a document subtree and a position within them.\",\"A <code>TreeWalker</code> can be created using the <a href=\\\"/en-US/docs/Web/API/Document/createTreeWalker\\\" title=\\\"The Document.createTreeWalker() creator method returns a newly created TreeWalker object.\\\"><code>Document.createTreeWalker()</code></a> method.\"]",
    "properties": [
      {
        "name": "currentNode",
        "overview": "Is the <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> on which the <code>TreeWalker</code> is currently pointing at."
      },
      {
        "name": "filter",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/NodeFilter\" title=\"A NodeFilter interface represents an object used to filter the nodes in a NodeIterator or TreeWalker. They don't know anything about the DOM or how to traverse nodes; they just know how to evaluate a single node against the provided filter.\"><code>NodeFilter</code></a> used to select the relevant nodes."
      },
      {
        "name": "root",
        "overview": "Returns a <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> representing the root node as specified when the <code>TreeWalker</code> was created."
      },
      {
        "name": "whatToShow",
        "overview": "Returns an <code>unsigned long</code> being a bitmask made of constants describing the types of <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> that must&nbsp;be presented. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are:\n <table class=\"standard-table\">\n  <tbody>\n   <tr>\n    <td class=\"header\">Constant</td>\n    <td class=\"header\">Numerical value</td>\n    <td class=\"header\">Description</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_ALL</code></td>\n    <td><code>-1</code> (that is the max value of <code>unsigned long</code>)</td>\n    <td>Shows all nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_ATTRIBUTE</code> <span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n    <td><code>2</code></td>\n    <td>Shows attribute <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> with an <a href=\"/en-US/docs/Web/API/Attr\" title=\"The Attr interface represents one of a DOM element's attributes as an object. In most DOM methods, you will directly retrieve the attribute as a string (e.g., Element.getAttribute()), but certain functions (e.g., Element.getAttributeNode()) or means of iterating return Attr types.\"><code>Attr</code></a> node as its root. In this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_CDATA_SECTION</code> <span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n    <td><code>8</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/CDATASection\" title=\"The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and &amp; don’t need escaping as they normally do when inside a CDATA section.\"><code>CDATASection</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_COMMENT</code></td>\n    <td><code>128</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/Comment\" title=\"The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\"><code>Comment</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_DOCUMENT</code></td>\n    <td><code>256</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/Document\" title=\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\"><code>Document</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_DOCUMENT_FRAGMENT</code></td>\n    <td><code>1024</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/DocumentFragment\" title=\"The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document.\"><code>DocumentFragment</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_DOCUMENT_TYPE</code></td>\n    <td><code>512</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/DocumentType\" title=\"The DocumentType interface represents a Node containing a doctype.\"><code>DocumentType</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_ELEMENT</code></td>\n    <td><code>1</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/Element\" title=\"Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\"><code>Element</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_ENTITY</code> <span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n    <td><code>32</code></td>\n    <td>Shows <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a>&nbsp;nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> with an <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a> node as its root; in this case, it means that the <a class=\"new\" href=\"/en-US/docs/Web/API/Entity\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Entity</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_ENTITY_REFERENCE</code> <span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n    <td><code>16</code></td>\n    <td>Shows <a class=\"new\" href=\"/en-US/docs/Web/API/EntityReference\" rel=\"nofollow\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>EntityReference</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_NOTATION</code> <span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n    <td><code>2048</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> nodes. This is meaningful only when creating a <a href=\"/en-US/docs/Web/API/TreeWalker\" title=\"The TreeWalker object represents the nodes of a document subtree and a position within them.\"><code>TreeWalker</code></a> with a <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> node as its root; in this case, it means that the <a href=\"/en-US/docs/Web/API/Notation\" title=\"Represents a DTD notation (read-only). May declare format of an unparsed entity or formally declare the document's processing instruction targets. Inherits methods and properties from Node. Its nodeName is the notation name. Has no parent.\"><code>Notation</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_PROCESSING_INSTRUCTION</code></td>\n    <td><code>64</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/ProcessingInstruction\" title=\"The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\"><code>ProcessingInstruction</code></a>&nbsp;nodes.</td>\n   </tr>\n   <tr>\n    <td><code>NodeFilter.SHOW_TEXT</code></td>\n    <td><code>4</code></td>\n    <td>Shows <a href=\"/en-US/docs/Web/API/Text\" title=\"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\"><code>Text</code></a>&nbsp;nodes.</td>\n   </tr>\n  </tbody>\n </table>\n "
      }
    ],
    "methods": [
      {
        "name": "firstChild",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to the first <em>visible</em> child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, returns <code>null</code> and the current node is not changed."
      },
      {
        "name": "lastChild",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to the last <em>visible</em> child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, <code>null</code>&nbsp;is returned and the current node is not changed."
      },
      {
        "name": "nextNode",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to the next <em>visible</em> node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, returns <code>null</code> and the current node is not changed."
      },
      {
        "name": "nextSibling",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to its next sibling, if any, and returns the found sibling. If there is no such node, <code>null</code>&nbsp;is returned and the current node is not changed."
      },
      {
        "name": "parentNode",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to the first <em>visible</em> ancestor node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, or if it is before that the <em>root</em><em> node</em> defined at the object construction, returns <code>null</code> and the current node is not changed."
      },
      {
        "name": "previousNode",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to the previous <em>visible</em> node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, or if it is before that the <em>root</em><em> node</em> defined at the object construction, returns <code>null</code> and the current node is not changed."
      },
      {
        "name": "previousSibling",
        "overview": "Moves the current <a href=\"/en-US/docs/Web/API/Node\" title=\"Node is an interface from which various types of DOM API objects inherit, allowing those types to be treated similarly; for example, inheriting the same set of methods, or being testable in the same way.\"><code>Node</code></a> to its previous sibling, if any, and returns the found sibling. If there is no such node, return <code>null</code> and the current node is not changed."
      }
    ]
  },
  {
    "name": "ValidityState",
    "category": "FormSupport",
    "overview": "[\"The <strong><code>ValidityState</code></strong> interface represents the <em>validity states</em> that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.\"]",
    "properties": [
      {
        "name": "badInput",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the user has provided input that the browser is unable to convert."
      },
      {
        "name": "customError",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> indicating whether the element's custom validity message has been set to a non-empty string by calling the element's <a href=\"/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity\" title=\"The setCustomValidity() method of the HTMLObjectElement interface sets a custom validity message for the element.\"><code>setCustomValidity()</code></a> method."
      },
      {
        "name": "patternMismatch",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value does not match the specified <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-pattern\">pattern</a></code>, and <code>false</code> if it does match. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> CSS pseudo-class."
      },
      {
        "name": "rangeOverflow",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is true if the value is greater than the maximum specified by the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-max\">max</a></code> attribute, or <code>false</code> if it is less than or equal to the maximum. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> and <a href=\"/en-US/docs/Web/CSS/:out-of-range\" title=\"The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes.\"><code>:out-of-range</code></a> and CSS pseudo-classes."
      },
      {
        "name": "rangeUnderflow",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value is less than the minimum specified by the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-min\">min</a></code> attribute, or <code>false</code> if it is greater than or equal to the minimum. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> and <a href=\"/en-US/docs/Web/CSS/:out-of-range\" title=\"The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes.\"><code>:out-of-range</code></a> CSS pseudo-classes."
      },
      {
        "name": "stepMismatch",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value does not fit the rules determined by the <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-step\">step</a></code> attribute (that is, it's not evenly divisible by the step value), or <code>false</code> if it does fit the step rule. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> and <a href=\"/en-US/docs/Web/CSS/:out-of-range\" title=\"The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes.\"><code>:out-of-range</code></a> CSS pseudo-classes."
      },
      {
        "name": "tooLong",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value exceeds the specified <code>maxlength</code> for <a href=\"/en-US/docs/Web/API/HTMLInputElement\" title=\"The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of <input> elements.\"><code>HTMLInputElement</code></a> or <a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\" title=\"The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of <textarea> elements.\"><code>HTMLTextAreaElement</code></a> objects, or false if its length is less than or equal to the maximum length. <em><strong>Note:</strong> This property is never <code>true</code> in Gecko, because elements' values are prevented from being longer than <code>maxlength</code>. </em>If true, the element matches the the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> and <a href=\"/en-US/docs/Web/CSS/:out-of-range\" title=\"The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes.\"><code>:out-of-range</code></a> CSS pseudo-classes."
      },
      {
        "name": "tooShort",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value fails to meet&nbsp;the specified <code>minlength</code> for <a href=\"/en-US/docs/Web/API/HTMLInputElement\" title=\"The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of <input> elements.\"><code>HTMLInputElement</code></a> or <a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\" title=\"The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of <textarea> elements.\"><code>HTMLTextAreaElement</code></a> objects, or <code>false</code> if its length is greater than or equal to the minimum length. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> and <a href=\"/en-US/docs/Web/CSS/:out-of-range\" title=\"The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes.\"><code>:out-of-range</code></a> CSS pseudo-classes."
      },
      {
        "name": "typeMismatch",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the value is not in the required syntax (when <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-type\">type</a></code> is <code>email</code> or <code>url</code>), or <code>false</code> if the syntax is correct. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> CSS pseudo-class."
      },
      {
        "name": "valid",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the element meets all its validation constraints, and is therefore considered to be valid, or <code>false</code> if it fails any constraint. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:valid\" title=\"The :valid CSS pseudo-class represents any <input> or other <form> element whose contents validate successfully. This allows to easily make valid fields adopt an appearance that helps the user confirm that their data is formatted properly.\"><code>:valid</code></a> CSS pseudo-class; the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> CSS pseudo-class otherwise."
      },
      {
        "name": "valueMissing",
        "overview": "A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" title=\"The Boolean object is an object wrapper for a boolean value.\"><code>Boolean</code></a> that is <code>true</code> if the element has a <code><a href=\"/en-US/docs/Web/HTML/Element/input#attr-required\">required</a></code> attribute, but no value, or <code>false</code> otherwise. If true, the element matches the <a href=\"/en-US/docs/Web/CSS/:invalid\" title=\"The :invalid CSS pseudo-class represents any <input> or other <form> element whose contents fail to validate.\"><code>:invalid</code></a> CSS pseudo-class."
      }
    ],
    "methods": []
  },
  {
    "name": "VideoPlaybackQuality",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "creationTime",
        "overview": null
      },
      {
        "name": "droppedVideoFrames",
        "overview": null
      },
      {
        "name": "totalVideoFrames",
        "overview": null
      }
    ],
    "methods": []
  },
  {
    "name": "VideoTrack",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <a href=\\\"/en-US/docs/Web/API/VideoTrack\\\" title=\\\"The VideoTrack interface represents a single video track from a <video> element.\\\"><code>VideoTrack</code></a> interface represents a single video track from a <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a> element.</span> The most common use for accessing a <code>VideoTrack</code> object is to toggle its <a href=\\\"/en-US/docs/Web/API/VideoTrack/selected\\\" title=\\\"The VideoTrack property selected controls whether or not a particular video track is active.\\\"><code>selected</code></a> property in order to make it the active video track for its <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a> element.\"]",
    "properties": [
      {
        "name": "id",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> which uniquely identifies the track within the media. This ID can be used to locate a specific track within a video track list by calling <a href=\"/en-US/docs/Web/API/VideoTrackList/getTrackById\" title=\"The VideoTrackList method getTrackById() returns the first VideoTrack object from the track list whose id matches the specified string.\"><code>VideoTrackList.getTrackById()</code></a>. The ID can also be used as the fragment part of the URL if the media supports seeking by media fragment per the <a class=\"external\" href=\"https://www.w3.org/TR/media-frags/\" rel=\"noopener\">Media Fragments URI specification</a>."
      },
      {
        "name": "kind",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the category into which the track falls. For example, the main video track would have a <code>kind</code> of <code>\"main\"</code>."
      },
      {
        "name": "label",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> providing a human-readable label for the track. For example, a track whose <code>kind</code> is <code>\"sign\"</code> might have a <code>label</code> of <code>\"A sign-language interpretation\"</code>. This string is empty if no label is provided."
      },
      {
        "name": "language",
        "overview": "A <a href=\"/en-US/docs/Web/API/DOMString\" title=\"DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.\"><code>DOMString</code></a> specifying the video track's primary language, or an empty string if unknown. The language is specified as a BCP 47 (<a class=\"external\" href=\"https://tools.ietf.org/html/rfc5646\" rel=\"noopener\">RFC 5646</a>) language code, such as <code>\"en-US\"</code> or <code>\"pt-BR\"</code>."
      },
      {
        "name": "selected",
        "overview": "A Boolean value which controls whether or not the video track is active. Only a single video track can be active at any given time, so setting this property to <code>true</code> for one track while another track is active will make that other track inactive."
      }
    ],
    "methods": []
  },
  {
    "name": "VideoTrackList",
    "category": "Media",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <strong><code>VideoTrackList</code></strong> interface is used to represent a list of the video tracks contained within a <a href=\\\"/en-US/docs/Web/HTML/Element/video\\\" title=\\\"The&nbsp;HTML Video element&nbsp;(<video>) embeds a media player which supports video playback into the document.&nbsp;You can use&nbsp;<video>&nbsp;for audio content as well, but the <audio> element may provide a more appropriate user experience.\\\"><code>&lt;video&gt;</code></a> element, with each track represented by a separate <a href=\\\"/en-US/docs/Web/API/VideoTrack\\\" title=\\\"The VideoTrack interface represents a single video track from a <video> element.\\\"><code>VideoTrack</code></a> object in the list.</span>\",\"Retrieve an instance of this object with <a href=\\\"/en-US/docs/Web/API/HTMLMediaElement/videoTracks\\\" title=\\\"The read-only videoTracks property on HTMLMediaElement objects returns a VideoTrackList object listing all of the VideoTrack objects representing the media element's video tracks.\\\"><code>HTMLMediaElement.videoTracks</code></a>. The individual tracks can be accessed using array syntax or functions such as <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\\\" title=\\\"The forEach() method executes a provided function once for each array element.\\\"><code>forEach()</code></a> for example.\"]",
    "properties": [
      {
        "name": "length",
        "overview": "The number of tracks in the list."
      },
      {
        "name": "onaddtrack",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/addtrack\" title=\"/en-US/docs/Web/Events/addtrack\">addtrack</a></code> event is fired, indicating that a new video track has been added to the media element."
      },
      {
        "name": "onchange",
        "overview": "An event handler to be called when the <code><a href=\"/en-US/docs/Web/Events/change\" title=\"/en-US/docs/Web/Events/change\">change</a></code> event occurs —&nbsp;that is, when the value of the <a href=\"/en-US/docs/Web/API/VideoTrack/selected\" title=\"The VideoTrack property selected controls whether or not a particular video track is active.\"><code>selected</code></a> property for a track has changed, due to the track being made active or inactive."
      },
      {
        "name": "onremovetrack",
        "overview": "An event handler to call when the <code><a href=\"/en-US/docs/Web/Events/removetrack\" title=\"/en-US/docs/Web/Events/removetrack\">removetrack</a></code> event is sent, indicating that a video track has been removed from the media element."
      },
      {
        "name": "selectedIndex",
        "overview": "The index of the currently selected track, if any, or <code>−1</code> otherwise."
      }
    ],
    "methods": [
      {
        "name": "getTrackById",
        "overview": "Returns the <a href=\"/en-US/docs/Web/API/VideoTrack\" title=\"The VideoTrack interface represents a single video track from a <video> element.\"><code>VideoTrack</code></a> found within the <code>VideoTrackList</code> whose <a href=\"/en-US/docs/Web/API/VideoTrack/id\" title=\"The id property contains a string which uniquely identifies the track represented by the VideoTrack.\"><code>id</code></a> matches the specified string. If no match is found, <code>null</code> is returned."
      }
    ]
  },
  {
    "name": "WindowEventHandlers",
    "category": "CherryPicked",
    "overview": "[\"The <strong><code>WindowEventHandlers</code></strong> mixin describes the event handlers common to several interfaces like <a href=\\\"/en-US/docs/Web/API/Window\\\" title=\\\"The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window.\\\"><code>Window</code></a>, or <a href=\\\"/en-US/docs/Web/API/HTMLBodyElement\\\" title=\\\"The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating <body> elements.\\\"><code>HTMLBodyElement</code></a> and <a href=\\\"/en-US/docs/Web/API/HTMLFrameSetElement\\\" title=\\\"The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating <frameset> elements.\\\"><code>HTMLFrameSetElement</code></a>. Each of these interfaces can implement additional specific event handlers.\"]",
    "properties": [
      {
        "name": "onafterprint",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/afterprint\" title=\"/en-US/docs/Web/Events/afterprint\">afterprint</a></code> event is raised."
      },
      {
        "name": "onbeforeprint",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/beforeprint\" title=\"/en-US/docs/Web/Events/beforeprint\">beforeprint</a></code> event is raised."
      },
      {
        "name": "onbeforeunload",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/beforeunload\" title=\"/en-US/docs/Web/Events/beforeunload\">beforeunload</a></code> event is raised."
      },
      {
        "name": "onhashchange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/hashchange\" title=\"/en-US/docs/Web/Events/hashchange\">hashchange</a></code> event is raised."
      },
      {
        "name": "onlanguagechange",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/languagechange\" title=\"/en-US/docs/Web/Events/languagechange\">languagechange</a></code> event is raised."
      },
      {
        "name": "onmessage",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/message\" title=\"/en-US/docs/Web/Events/message\">message</a></code> event is raised."
      },
      {
        "name": "onmessageerror",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/MessageError\" title=\"/en-US/docs/Web/Events/MessageError\">MessageError</a></code> event is raised."
      },
      {
        "name": "onpopstate",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/popstate\" title=\"/en-US/docs/Web/Events/popstate\">popstate</a></code> event is raised."
      },
      {
        "name": "onrejectionhandled",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/rejectionhandled\" title=\"/en-US/docs/Web/Events/rejectionhandled\">rejectionhandled</a></code> event is raised, indicating that a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> was rejected and the rejection has been handled."
      },
      {
        "name": "onstorage",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/storage\" title=\"/en-US/docs/Web/Events/storage\">storage</a></code> event is raised."
      },
      {
        "name": "onunhandledrejection",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/unhandledrejection\" title=\"/en-US/docs/Web/Events/unhandledrejection\">unhandledrejection</a></code> event is raised, indicating that a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> was rejected but the rejection was not handled."
      },
      {
        "name": "onunload",
        "overview": "Is an <a href=\"/en-US/docs/Web/API/EventHandler\" title=\"REDIRECT DOM event handlers\"><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"/en-US/docs/Web/Events/unload\" title=\"/en-US/docs/Web/Events/unload\">unload</a></code> event is raised."
      }
    ],
    "methods": []
  },
  {
    "name": "XMLDocument",
    "category": "DOMCore",
    "overview": "[\"The <strong>XMLDocument</strong> interface represents an XML document. It inherits from the generic <a href=\\\"/en-US/docs/Web/API/Document\\\" title=\\\"The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\\\"><code>Document</code></a> and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.\"]",
    "properties": [],
    "methods": []
  },
  {
    "name": "XMLSerializer",
    "category": "CherryPicked",
    "overview": "[\"<span class=\\\"seoSummary\\\">The <code>XMLSerializer</code> interface provides the <a href=\\\"/en-US/docs/Web/API/XMLSerializer/serializeToString\\\" title=\\\"The XMLSerializer method serializeToString() constructs a string representing the specified DOM tree in XML form.\\\"><code>serializeToString()</code></a> method to construct an XML string representing a <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/DOM\\\" title=\\\"DOM: The DOM (Document Object Model) is an API that represents and interacts with any HTML or XML document. The DOM is a document model loaded in the browser and representing the document as a node tree, where each node represents part of the document (e.g. an element, text string, or comment).\\\">DOM</a> tree.</span>\"]",
    "properties": [],
    "methods": [
      {
        "name": "serializeToString",
        "overview": "Returns the serialized subtree of a string."
      }
    ]
  },
  {
    "name": "XPathEvaluator",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": []
  },
  {
    "name": "XPathEvaluatorBase",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "createExpression",
        "overview": null
      },
      {
        "name": "createNSResolver",
        "overview": null
      },
      {
        "name": "evaluate",
        "overview": null
      }
    ]
  },
  {
    "name": "XPathExpression",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "evaluate",
        "overview": null
      }
    ]
  },
  {
    "name": "XPathNSResolver",
    "category": "Custom",
    "overview": null,
    "properties": [],
    "methods": [
      {
        "name": "lookupNamespaceURI",
        "overview": null
      }
    ]
  },
  {
    "name": "XPathResult",
    "category": "Custom",
    "overview": null,
    "properties": [
      {
        "name": "booleanValue",
        "overview": null
      },
      {
        "name": "invalidIteratorState",
        "overview": null
      },
      {
        "name": "numberValue",
        "overview": null
      },
      {
        "name": "resultType",
        "overview": null
      },
      {
        "name": "singleNodeValue",
        "overview": null
      },
      {
        "name": "snapshotLength",
        "overview": null
      },
      {
        "name": "stringValue",
        "overview": null
      }
    ],
    "methods": [
      {
        "name": "iterateNext",
        "overview": null
      },
      {
        "name": "snapshotItem",
        "overview": null
      }
    ]
  }
]